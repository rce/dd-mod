// Dungeon Defenders (9.22) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x4)
#endif

#include "../SDK.hpp"

namespace Classes
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Engine.Engine.AllowFloatingPointRenderTargets
// (Final, Native, Static, Public)

void UEngine::STATIC_AllowFloatingPointRenderTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.AllowFloatingPointRenderTargets");

	UEngine_AllowFloatingPointRenderTargets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.AddOverlayWrapped
// (Final, Native, Static, Public)

void UEngine::STATIC_AddOverlayWrapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.AddOverlayWrapped");

	UEngine_AddOverlayWrapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.AddOverlay
// (Final, Native, Static, Public)

void UEngine::STATIC_AddOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.AddOverlay");

	UEngine_AddOverlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.RemoveAllOverlays
// (Final, Native, Static, Public)

void UEngine::STATIC_RemoveAllOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.RemoveAllOverlays");

	UEngine_RemoveAllOverlays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.StopMovie
// (Final, Native, Static, Public)

void UEngine::STATIC_StopMovie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.StopMovie");

	UEngine_StopMovie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.PlayLoadMapMovie
// (Final, Native, Static, Public)

void UEngine::STATIC_PlayLoadMapMovie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.PlayLoadMapMovie");

	UEngine_PlayLoadMapMovie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetLastMovieName
// (Final, Native, Static, Public)

void UEngine::STATIC_GetLastMovieName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetLastMovieName");

	UEngine_GetLastMovieName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetAudioDevice
// (Final, Native, Static, Public)

void UEngine::STATIC_GetAudioDevice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetAudioDevice");

	UEngine_GetAudioDevice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsSplitScreen
// (Final, Native, Static, Public)

void UEngine::STATIC_IsSplitScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsSplitScreen");

	UEngine_IsSplitScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetAdditionalFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetAdditionalFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetAdditionalFont");

	UEngine_GetAdditionalFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetSubtitleFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetSubtitleFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetSubtitleFont");

	UEngine_GetSubtitleFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetLargeFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetLargeFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetLargeFont");

	UEngine_GetLargeFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetMediumFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetMediumFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetMediumFont");

	UEngine_GetMediumFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetSmallFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetSmallFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetSmallFont");

	UEngine_GetSmallFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetTinyFont
// (Final, Native, Static, Public)

void UEngine::STATIC_GetTinyFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetTinyFont");

	UEngine_GetTinyFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetBuildDate
// (Final, Native, Static, Public)

void UEngine::STATIC_GetBuildDate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetBuildDate");

	UEngine_GetBuildDate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.UsePS3CircleToAccept
// (Final, Native, Static, Public)

void UEngine::STATIC_UsePS3CircleToAccept()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.UsePS3CircleToAccept");

	UEngine_UsePS3CircleToAccept_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.HideSoftKeyboard
// (Final, Native, Static, Public)

void UEngine::STATIC_HideSoftKeyboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.HideSoftKeyboard");

	UEngine_HideSoftKeyboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.ShowSoftKeyboard
// (Final, Native, Static, Public)

void UEngine::STATIC_ShowSoftKeyboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.ShowSoftKeyboard");

	UEngine_ShowSoftKeyboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsNavConnected
// (Final, Native, Static, Public)

void UEngine::STATIC_IsNavConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsNavConnected");

	UEngine_IsNavConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsEyeConnected
// (Final, Native, Static, Public)

void UEngine::STATIC_IsEyeConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsEyeConnected");

	UEngine_IsEyeConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.ClearMoveCalibration
// (Final, Native, Static, Public)

void UEngine::STATIC_ClearMoveCalibration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.ClearMoveCalibration");

	UEngine_ClearMoveCalibration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsMoveCalibrated
// (Final, Native, Static, Public)

void UEngine::STATIC_IsMoveCalibrated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsMoveCalibrated");

	UEngine_IsMoveCalibrated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsMoveConnected
// (Final, Native, Static, Public)

void UEngine::STATIC_IsMoveConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsMoveConnected");

	UEngine_IsMoveConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsStereoScopic3D
// (Final, Native, Static, Public)

void UEngine::STATIC_IsStereoScopic3D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsStereoScopic3D");

	UEngine_IsStereoScopic3D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.GetCurrentWorldInfo
// (Final, Native, Static, Public)

void UEngine::STATIC_GetCurrentWorldInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.GetCurrentWorldInfo");

	UEngine_GetCurrentWorldInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsGame
// (Final, Native, Static, Public)

void UEngine::STATIC_IsGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsGame");

	UEngine_IsGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Engine.IsEditor
// (Final, Native, Static, Public)

void UEngine::STATIC_IsEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Engine.IsEditor");

	UEngine_IsEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameEngine.GetOnlineSubsystem
// (Final, Native, Static, Public)

void UGameEngine::STATIC_GetOnlineSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameEngine.GetOnlineSubsystem");

	UGameEngine_GetOnlineSubsystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameEngine.DestroyNamedNetDriver
// (Final, Native, Public)

void UGameEngine::DestroyNamedNetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameEngine.DestroyNamedNetDriver");

	UGameEngine_DestroyNamedNetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameEngine.CreateNamedNetDriver
// (Final, Native, Public)

void UGameEngine::CreateNamedNetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameEngine.CreateNamedNetDriver");

	UGameEngine_CreateNamedNetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReplicationInlineRPCTrigger
// (Native, Public, HasOutParms)

void AActor::ReplicationInlineRPCTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReplicationInlineRPCTrigger");

	AActor_ReplicationInlineRPCTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ActorDirectMulticastFunction
// (Native, Static, HasOptionalParms, Public)

void AActor::STATIC_ActorDirectMulticastFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ActorDirectMulticastFunction");

	AActor_ActorDirectMulticastFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ActorInlineQueueMulticastFunction
// (Native, HasOptionalParms, Public)

void AActor::ActorInlineQueueMulticastFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ActorInlineQueueMulticastFunction");

	AActor_ActorInlineQueueMulticastFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ShouldBlockPlayerAim
// (Defined, Simulated, Public)

void AActor::ShouldBlockPlayerAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ShouldBlockPlayerAim");

	AActor_ShouldBlockPlayerAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AllowSpawn
// (Defined, Event, Static, Public)

void AActor::STATIC_AllowSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AllowSpawn");

	AActor_AllowSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsPlayingSound
// (Defined, Simulated, Public)

void AActor::IsPlayingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsPlayingSound");

	AActor_IsPlayingSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.StopSound
// (Defined, Simulated, Public)

void AActor::StopSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.StopSound");

	AActor_StopSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.LeadTarget
// (Simulated, Native, HasOptionalParms, Public)

void AActor::LeadTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.LeadTarget");

	AActor_LeadTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.InitializeDD
// (Simulated, Public)

void AActor::InitializeDD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.InitializeDD");

	AActor_InitializeDD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTickDisabled
// (Defined, Simulated, Public)

void AActor::GetTickDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTickDisabled");

	AActor_GetTickDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ExecReplicatedFunction
// (Defined, Simulated, HasOptionalParms, Public)

void AActor::ExecReplicatedFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ExecReplicatedFunction");

	AActor_ExecReplicatedFunction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.WillOverlap
// (Final, Native, Public, HasOutParms)

void AActor::WillOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.WillOverlap");

	AActor_WillOverlap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetAvoidanceVector
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AActor::GetAvoidanceVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetAvoidanceVector");

	AActor_GetAvoidanceVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsClient
// (Final, Defined, Simulated, Public)

void AActor::IsClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsClient");

	AActor_IsClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsServer
// (Final, Defined, Simulated, Public)

void AActor::IsServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsServer");

	AActor_IsServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsOwningClient
// (Defined, Simulated, Public)

void AActor::IsOwningClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsOwningClient");

	AActor_IsOwningClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReplicationEnded
// (Simulated, Event, Public)

void AActor::ReplicationEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReplicationEnded");

	AActor_ReplicationEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostDemoRewind
// (Simulated, Event, Public)

void AActor::PostDemoRewind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostDemoRewind");

	AActor_PostDemoRewind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AnimTreeUpdated
// (Simulated, Event, Public)

void AActor::AnimTreeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AnimTreeUpdated");

	AActor_AnimTreeUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SupportsKismetModification
// (Final, Native, Public, HasOutParms)

void AActor::SupportsKismetModification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SupportsKismetModification");

	AActor_SupportsKismetModification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TrailsNotifyEnd
// (Event, Public)

void AActor::TrailsNotifyEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TrailsNotifyEnd");

	AActor_TrailsNotifyEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TrailsNotifyTick
// (Event, Public)

void AActor::TrailsNotifyTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TrailsNotifyTick");

	AActor_TrailsNotifyTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TrailsNotify
// (Event, Public)

void AActor::TrailsNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TrailsNotify");

	AActor_TrailsNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PlayParticleEffect
// (Event, Public)

void AActor::PlayParticleEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PlayParticleEffect");

	AActor_PlayParticleEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetAimAdhesionExtent
// (Defined, Simulated, Public, HasOutParms)

void AActor::GetAimAdhesionExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetAimAdhesionExtent");

	AActor_GetAimAdhesionExtent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetAimFrictionExtent
// (Defined, Simulated, Public, HasOutParms)

void AActor::GetAimFrictionExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetAimFrictionExtent");

	AActor_GetAimFrictionExtent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsInPersistentLevel
// (Final, Native, Public)

void AActor::IsInPersistentLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsInPersistentLevel");

	AActor_IsInPersistentLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnRigidBodySpringOverextension
// (Simulated, Event, Public)

void AActor::OnRigidBodySpringOverextension()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnRigidBodySpringOverextension");

	AActor_OnRigidBodySpringOverextension_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetPackageGuid
// (Final, Native, Static, Public)

void AActor::STATIC_GetPackageGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetPackageGuid");

	AActor_GetPackageGuid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostInitAnimTree
// (Event, Public)

void AActor::PostInitAnimTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostInitAnimTree");

	AActor_PostInitAnimTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.RootMotionExtracted
// (Simulated, Event, Public, HasOutParms)

void AActor::RootMotionExtracted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.RootMotionExtracted");

	AActor_RootMotionExtracted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.RootMotionModeChanged
// (Simulated, Event, Public)

void AActor::RootMotionModeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.RootMotionModeChanged");

	AActor_RootMotionModeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostRenderFor
// (Simulated, Event, Public)

void AActor::PostRenderFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostRenderFor");

	AActor_PostRenderFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.NativePostRenderFor
// (Simulated, Native, Public)

void AActor::NativePostRenderFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.NativePostRenderFor");

	AActor_NativePostRenderFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetHUDLocation
// (Simulated, Native, Public)

void AActor::SetHUDLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetHUDLocation");

	AActor_SetHUDLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnRanOver
// (Event, Public)

void AActor::OnRanOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnRanOver");

	AActor_OnRanOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.RigidBodyCollision
// (Event, Public, HasOutParms)

void AActor::RigidBodyCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.RigidBodyCollision");

	AActor_RigidBodyCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.InterpolationChanged
// (Simulated, Event, Public)

void AActor::InterpolationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.InterpolationChanged");

	AActor_InterpolationChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.InterpolationFinished
// (Simulated, Event, Public)

void AActor::InterpolationFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.InterpolationFinished");

	AActor_InterpolationFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.InterpolationStarted
// (Simulated, Event, Public)

void AActor::InterpolationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.InterpolationStarted");

	AActor_InterpolationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PickedUpBy
// (Public)

void AActor::PickedUpBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PickedUpBy");

	AActor_PickedUpBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SpawnedByKismet
// (Event, Public)

void AActor::SpawnedByKismet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SpawnedByKismet");

	AActor_SpawnedByKismet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTargetLocation
// (Simulated, Native, HasOptionalParms, Public)

void AActor::GetTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTargetLocation");

	AActor_GetTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FindGoodEndView
// (Defined, Simulated, Public, HasOutParms)

void AActor::FindGoodEndView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FindGoodEndView");

	AActor_FindGoodEndView_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.NotifyLocalPlayerTeamReceived
// (Simulated, Public)

void AActor::NotifyLocalPlayerTeamReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.NotifyLocalPlayerTeamReceived");

	AActor_NotifyLocalPlayerTeamReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetLocationStringFor
// (Defined, Simulated, Public)

void AActor::GetLocationStringFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetLocationStringFor");

	AActor_GetLocationStringFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ScriptGetTeamNum
// (Defined, Simulated, Event, Public)

void AActor::ScriptGetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ScriptGetTeamNum");

	AActor_ScriptGetTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTeamNum
// (Simulated, Native, Public)

void AActor::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTeamNum");

	AActor_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PawnBaseDied
// (Public)

void AActor::PawnBaseDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PawnBaseDied");

	AActor_PawnBaseDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsPlayerOwned
// (Simulated, Native, Public)

void AActor::IsPlayerOwned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsPlayerOwned");

	AActor_IsPlayerOwned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetActorEyesViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void AActor::GetActorEyesViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetActorEyesViewPoint");

	AActor_GetActorEyesViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsStationary
// (Defined, Public)

void AActor::IsStationary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsStationary");

	AActor_IsStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetActorFaceFXAsset
// (Event, Public)

void AActor::GetActorFaceFXAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetActorFaceFXAsset");

	AActor_GetActorFaceFXAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CanActorPlayFaceFXAnim
// (Defined, Simulated, Public)

void AActor::CanActorPlayFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CanActorPlayFaceFXAnim");

	AActor_CanActorPlayFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsActorPlayingFaceFXAnim
// (Defined, Simulated, Public)

void AActor::IsActorPlayingFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsActorPlayingFaceFXAnim");

	AActor_IsActorPlayingFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetSkelControlScale
// (Event, Public)

void AActor::SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetSkelControlScale");

	AActor_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetMorphWeight
// (Event, Public)

void AActor::SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetMorphWeight");

	AActor_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.StopActorFaceFXAnim
// (Event, Public)

void AActor::StopActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.StopActorFaceFXAnim");

	AActor_StopActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PlayActorFaceFXAnim
// (Event, Public)

void AActor::PlayActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PlayActorFaceFXAnim");

	AActor_PlayActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FinishAnimControl
// (Event, Public)

void AActor::FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FinishAnimControl");

	AActor_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetAnimPosition
// (Event, Public)

void AActor::SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetAnimPosition");

	AActor_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BeginAnimControl
// (Event, Public)

void AActor::BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BeginAnimControl");

	AActor_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnAnimPlay
// (Event, Public)

void AActor::OnAnimPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnAnimPlay");

	AActor_OnAnimPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnAnimEnd
// (Event, Public)

void AActor::OnAnimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnAnimEnd");

	AActor_OnAnimEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DoKismetAttachment
// (Defined, Public, HasDefaults)

void AActor::DoKismetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DoKismetAttachment");

	AActor_DoKismetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnAttachToActor
// (Defined, Public)

void AActor::OnAttachToActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnAttachToActor");

	AActor_OnAttachToActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnToggleHidden
// (Defined, Simulated, Public)

void AActor::OnToggleHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnToggleHidden");

	AActor_OnToggleHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnChangeCollision
// (Defined, Public)

void AActor::OnChangeCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnChangeCollision");

	AActor_OnChangeCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnSetPhysics
// (Defined, Simulated, Public)

void AActor::OnSetPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnSetPhysics");

	AActor_OnSetPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnSetBlockRigidBody
// (Defined, Simulated, Public)

void AActor::OnSetBlockRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnSetBlockRigidBody");

	AActor_OnSetBlockRigidBody_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnSetVelocity
// (Defined, Simulated, Public, HasDefaults)

void AActor::OnSetVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnSetVelocity");

	AActor_OnSetVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnTeleport
// (Defined, Simulated, Public)

void AActor::OnTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnTeleport");

	AActor_OnTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnModifyHealth
// (Defined, Simulated, Public)

void AActor::OnModifyHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnModifyHealth");

	AActor_OnModifyHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PrestreamTextures
// (Native, Public)

void AActor::PrestreamTextures()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PrestreamTextures");

	AActor_PrestreamTextures_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ShutDown
// (Defined, Simulated, Event, Public)

void AActor::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ShutDown");

	AActor_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetNetUpdateTime
// (Final, Native, Public)

void AActor::SetNetUpdateTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetNetUpdateTime");

	AActor_SetNetUpdateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ForceNetRelevant
// (Defined, Event, Public)

void AActor::ForceNetRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ForceNetRelevant");

	AActor_ForceNetRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnDestroy
// (Defined, Simulated, Public)

void AActor::OnDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnDestroy");

	AActor_OnDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.UnbaseAttachments
// (Defined, Simulated, Public)

void AActor::UnbaseAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.UnbaseAttachments");

	AActor_UnbaseAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClearLatentAction
// (Final, Defined, Simulated, HasOptionalParms, Public)

void AActor::ClearLatentAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClearLatentAction");

	AActor_ClearLatentAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FindEventsOfClass
// (Final, Defined, Simulated, HasOptionalParms, Public, HasOutParms)

void AActor::FindEventsOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FindEventsOfClass");

	AActor_FindEventsOfClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ActivateEventClass
// (Final, Defined, Simulated, HasOptionalParms, Public, HasOutParms)

void AActor::ActivateEventClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ActivateEventClass");

	AActor_ActivateEventClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TriggerGlobalEventClass
// (Defined, Simulated, HasOptionalParms, Public)

void AActor::TriggerGlobalEventClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TriggerGlobalEventClass");

	AActor_TriggerGlobalEventClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReceivedNewEvent
// (Simulated, Event, Public)

void AActor::ReceivedNewEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReceivedNewEvent");

	AActor_ReceivedNewEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TriggerEventClass
// (Defined, Simulated, HasOptionalParms, Public, HasOutParms)

void AActor::TriggerEventClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TriggerEventClass");

	AActor_TriggerEventClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.EffectIsRelevant
// (Defined, Simulated, HasOptionalParms, Public)

void AActor::EffectIsRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.EffectIsRelevant");

	AActor_EffectIsRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CheckMaxEffectDistance
// (Defined, Simulated, HasOptionalParms, Public)

void AActor::CheckMaxEffectDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CheckMaxEffectDistance");

	AActor_CheckMaxEffectDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ApplyFluidSurfaceImpact
// (Defined, Simulated, Public)

void AActor::ApplyFluidSurfaceImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ApplyFluidSurfaceImpact");

	AActor_ApplyFluidSurfaceImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CanSplash
// (Defined, Simulated, Public)

void AActor::CanSplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CanSplash");

	AActor_CanSplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PlayTeleportEffect
// (Public)

void AActor::PlayTeleportEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PlayTeleportEffect");

	AActor_PlayTeleportEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsInPain
// (Defined, Public)

void AActor::IsInPain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsInPain");

	AActor_IsInPain_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsInVolume
// (Defined, Public)

void AActor::IsInVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsInVolume");

	AActor_IsInVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Reset
// (Event, Public)

void AActor::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Reset");

	AActor_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetFaceFXAudioComponent
// (Defined, Simulated, Event, Public)

void AActor::GetFaceFXAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetFaceFXAudioComponent");

	AActor_GetFaceFXAudioComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ModifyHearSoundComponent
// (Simulated, Event, Public)

void AActor::ModifyHearSoundComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ModifyHearSoundComponent");

	AActor_ModifyHearSoundComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetPhysicsName
// (Defined, Simulated, Public)

void AActor::GetPhysicsName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetPhysicsName");

	AActor_GetPhysicsName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AActor::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DisplayDebug");

	AActor_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetDebugName
// (Defined, Public)

void AActor::GetDebugName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetDebugName");

	AActor_GetDebugName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.MatchStarting
// (Public)

void AActor::MatchStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.MatchStarting");

	AActor_MatchStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetLocalString
// (Defined, Static, HasOptionalParms, Public)

void AActor::STATIC_GetLocalString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetLocalString");

	AActor_GetLocalString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReplaceText
// (Defined, Static, Public, HasOutParms)

void AActor::STATIC_ReplaceText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReplaceText");

	AActor_ReplaceText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetHumanReadableName
// (Defined, Simulated, Public)

void AActor::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetHumanReadableName");

	AActor_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetItemName
// (Defined, Simulated, Public)

void AActor::GetItemName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetItemName");

	AActor_GetItemName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CalcCamera
// (Defined, Simulated, Public, HasOutParms, HasDefaults)

void AActor::CalcCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CalcCamera");

	AActor_CalcCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.EndViewTarget
// (Event, Public)

void AActor::EndViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.EndViewTarget");

	AActor_EndViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BecomeViewTarget
// (Event, Public)

void AActor::BecomeViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BecomeViewTarget");

	AActor_BecomeViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CheckForErrors
// (Public)

void AActor::CheckForErrors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CheckForErrors");

	AActor_CheckForErrors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DebugFreezeGame
// (Event, HasOptionalParms, Public)

void AActor::DebugFreezeGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DebugFreezeGame");

	AActor_DebugFreezeGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetGravityZ
// (Native, Public)

void AActor::GetGravityZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetGravityZ");

	AActor_GetGravityZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CheckHitInfo
// (Final, Defined, Simulated, Public, HasOutParms, HasDefaults)

void AActor::CheckHitInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CheckHitInfo");

	AActor_CheckHitInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClientTakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public, HasDefaults)

void AActor::ClientTakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClientTakeRadiusDamage");

	AActor_ClientTakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClientTakeDamage
// (Simulated, HasOptionalParms, Public)

void AActor::ClientTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClientTakeDamage");

	AActor_ClientTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public, HasDefaults)

void AActor::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TakeRadiusDamage");

	AActor_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.HealDamage
// (Event, Public)

void AActor::HealDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.HealDamage");

	AActor_HealDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TakeDamage
// (Defined, Event, HasOptionalParms, Public)

void AActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TakeDamage");

	AActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.KilledBy
// (Public)

void AActor::KilledBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.KilledBy");

	AActor_KilledBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.HurtRadius
// (Defined, Simulated, HasOptionalParms, Public)

void AActor::HurtRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.HurtRadius");

	AActor_HurtRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.StopsProjectile
// (Defined, Simulated, Public)

void AActor::StopsProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.StopsProjectile");

	AActor_StopsProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.NotifySkelControlBeyondLimit
// (Simulated, Event, Public)

void AActor::NotifySkelControlBeyondLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.NotifySkelControlBeyondLimit");

	AActor_NotifySkelControlBeyondLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ConstraintBrokenNotify
// (Simulated, Event, Public)

void AActor::ConstraintBrokenNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ConstraintBrokenNotify");

	AActor_ConstraintBrokenNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetInitialState
// (Defined, Simulated, Event, Public)

void AActor::SetInitialState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetInitialState");

	AActor_SetInitialState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AttachAdditionalComponents
// (Defined, Simulated, Public)

void AActor::AttachAdditionalComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AttachAdditionalComponents");

	AActor_AttachAdditionalComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostBeginPlay");

	AActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BroadcastLocalizedTeamMessage
// (Defined, Event, HasOptionalParms, Public)

void AActor::BroadcastLocalizedTeamMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BroadcastLocalizedTeamMessage");

	AActor_BroadcastLocalizedTeamMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BroadcastLocalizedMessage
// (Defined, Event, HasOptionalParms, Public)

void AActor::BroadcastLocalizedMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BroadcastLocalizedMessage");

	AActor_BroadcastLocalizedMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PreBeginPlay
// (Defined, Event, Public)

void AActor::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PreBeginPlay");

	AActor_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FindActorsOfClass
// (Final, Defined, Public, HasOutParms)

void AActor::FindActorsOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FindActorsOfClass");

	AActor_FindActorsOfClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetALocalPlayerController
// (Final, Native, Public)

void AActor::GetALocalPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetALocalPlayerController");

	AActor_GetALocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.LocalPlayerControllers
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::LocalPlayerControllers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.LocalPlayerControllers");

	AActor_LocalPlayerControllers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AllOwnedComponents
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::AllOwnedComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AllOwnedComponents");

	AActor_AllOwnedComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ComponentList
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::ComponentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ComponentList");

	AActor_ComponentList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OverlappingActorArrayDotCheck
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::OverlappingActorArrayDotCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OverlappingActorArrayDotCheck");

	AActor_OverlappingActorArrayDotCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OverlappingActorArray
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::OverlappingActorArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OverlappingActorArray");

	AActor_OverlappingActorArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OverlappingActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::OverlappingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OverlappingActors");

	AActor_OverlappingActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CollidingActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::CollidingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CollidingActors");

	AActor_CollidingActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.VisibleCollidingActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::VisibleCollidingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.VisibleCollidingActors");

	AActor_VisibleCollidingActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.VisibleActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::VisibleActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.VisibleActors");

	AActor_VisibleActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TraceActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::TraceActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TraceActors");

	AActor_TraceActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TouchingActors
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::TouchingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TouchingActors");

	AActor_TouchingActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BasedActors
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::BasedActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BasedActors");

	AActor_BasedActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ChildActors
// (Final, Iterator, Native, Public, HasOutParms)

void AActor::ChildActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ChildActors");

	AActor_ChildActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DynamicActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::DynamicActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DynamicActors");

	AActor_DynamicActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AllActors
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AActor::AllActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AllActors");

	AActor_AllActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetURLMap
// (Final, Native, Public)

void AActor::GetURLMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetURLMap");

	AActor_GetURLMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostTeleport
// (Public)

void AActor::PostTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostTeleport");

	AActor_PostTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PreTeleport
// (Public)

void AActor::PreTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PreTeleport");

	AActor_PreTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetDestination
// (Final, Native, Public)

void AActor::GetDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetDestination");

	AActor_GetDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SuggestTossVelocity
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AActor::SuggestTossVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SuggestTossVelocity");

	AActor_SuggestTossVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PlayerCanSeeMe
// (Final, Native, Public)

void AActor::PlayerCanSeeMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PlayerCanSeeMe");

	AActor_PlayerCanSeeMe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.MakeNoise
// (Final, Native, HasOptionalParms, Public)

void AActor::MakeNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.MakeNoise");

	AActor_MakeNoise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PlaySound
// (Final, Native, HasOptionalParms, Public)

void AActor::PlaySound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PlaySound");

	AActor_PlaySound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CreateAudioComponent
// (Final, Native, HasOptionalParms, Public)

void AActor::CreateAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CreateAudioComponent");

	AActor_CreateAudioComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ResetTimerTimeDilation
// (Final, Native, HasOptionalParms, Public)

void AActor::ResetTimerTimeDilation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ResetTimerTimeDilation");

	AActor_ResetTimerTimeDilation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ModifyTimerTimeDilation
// (Final, Native, HasOptionalParms, Public)

void AActor::ModifyTimerTimeDilation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ModifyTimerTimeDilation");

	AActor_ModifyTimerTimeDilation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetRemainingTimeForTimer
// (Final, Defined, Simulated, HasOptionalParms, Public)

void AActor::GetRemainingTimeForTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetRemainingTimeForTimer");

	AActor_GetRemainingTimeForTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTimerRate
// (Final, Native, HasOptionalParms, Public)

void AActor::GetTimerRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTimerRate");

	AActor_GetTimerRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTimerCount
// (Final, Native, HasOptionalParms, Public)

void AActor::GetTimerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTimerCount");

	AActor_GetTimerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsTimerActive
// (Final, Native, HasOptionalParms, Public)

void AActor::IsTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsTimerActive");

	AActor_IsTimerActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PauseTimer
// (Final, Native, HasOptionalParms, Public)

void AActor::PauseTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PauseTimer");

	AActor_PauseTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClearAllTimers
// (Final, Native, HasOptionalParms, Public)

void AActor::ClearAllTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClearAllTimers");

	AActor_ClearAllTimers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClearTimer
// (Final, Native, HasOptionalParms, Public)

void AActor::ClearTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClearTimer");

	AActor_ClearTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetTimer
// (Final, Native, HasOptionalParms, Public)

void AActor::SetTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetTimer");

	AActor_SetTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TornOff
// (Event, Public)

void AActor::TornOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TornOff");

	AActor_TornOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Destroy
// (Final, Native, Public)

void AActor::Destroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Destroy");

	AActor_Destroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Spawn
// (Final, Native, HasOptionalParms, Public)

void AActor::Spawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Spawn");

	AActor_Spawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetCollisionRadius
// (Defined, Simulated, Public)

void AActor::GetCollisionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetCollisionRadius");

	AActor_GetCollisionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetBoundingCylinder
// (Native, Public, HasOutParms)

void AActor::GetBoundingCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetBoundingCylinder");

	AActor_GetBoundingCylinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetComponentsBoundingBox
// (Final, Native, Public, HasOutParms)

void AActor::GetComponentsBoundingBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetComponentsBoundingBox");

	AActor_GetComponentsBoundingBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsOverlapping
// (Final, Native, Public)

void AActor::IsOverlapping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsOverlapping");

	AActor_IsOverlapping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ContainsPoint
// (Final, Native, Public)

void AActor::ContainsPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ContainsPoint");

	AActor_ContainsPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FindSpot
// (Final, Native, Public, HasOutParms)

void AActor::FindSpot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FindSpot");

	AActor_FindSpot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TraceAllPhysicsAssetInteractions
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AActor::TraceAllPhysicsAssetInteractions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TraceAllPhysicsAssetInteractions");

	AActor_TraceAllPhysicsAssetInteractions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FastTrace
// (Final, Native, HasOptionalParms, Public)

void AActor::FastTrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FastTrace");

	AActor_FastTrace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PointCheckComponent
// (Final, Native, Public)

void AActor::PointCheckComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PointCheckComponent");

	AActor_PointCheckComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.TraceComponent
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AActor::TraceComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.TraceComponent");

	AActor_TraceComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Trace
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AActor::Trace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Trace");

	AActor_Trace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.VolumeBasedDestroy
// (Defined, Simulated, Public)

void AActor::VolumeBasedDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.VolumeBasedDestroy");

	AActor_VolumeBasedDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OutsideWorldBounds
// (Defined, Simulated, Event, Public)

void AActor::OutsideWorldBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OutsideWorldBounds");

	AActor_OutsideWorldBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FellOutOfWorld
// (Defined, Simulated, Event, Public)

void AActor::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FellOutOfWorld");

	AActor_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.UsedBy
// (Defined, Public)

void AActor::UsedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.UsedBy");

	AActor_UsedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OverRotated
// (Simulated, Event, Public, HasOutParms)

void AActor::OverRotated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OverRotated");

	AActor_OverRotated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ClampRotation
// (Final, Simulated, Native, Public, HasOutParms)

void AActor::ClampRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ClampRotation");

	AActor_ClampRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnSleepRBPhysics
// (Event, Public)

void AActor::OnSleepRBPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnSleepRBPhysics");

	AActor_OnSleepRBPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.OnWakeRBPhysics
// (Event, Public)

void AActor::OnWakeRBPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.OnWakeRBPhysics");

	AActor_OnWakeRBPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.RanInto
// (Event, Public)

void AActor::RanInto()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.RanInto");

	AActor_RanInto_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.EncroachedBy
// (Event, Public)

void AActor::EncroachedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.EncroachedBy");

	AActor_EncroachedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.EncroachingOn
// (Event, Public)

void AActor::EncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.EncroachingOn");

	AActor_EncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.CollisionChanged
// (Event, Public)

void AActor::CollisionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.CollisionChanged");

	AActor_CollisionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SpecialHandling
// (Event, Public)

void AActor::SpecialHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SpecialHandling");

	AActor_SpecialHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Detach
// (Event, Public)

void AActor::Detach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Detach");

	AActor_Detach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Attach
// (Event, Public)

void AActor::Attach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Attach");

	AActor_Attach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BaseChange
// (Event, Public)

void AActor::BaseChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BaseChange");

	AActor_BaseChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Bump
// (Event, Public)

void AActor::Bump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Bump");

	AActor_Bump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.UnTouch
// (Event, Public)

void AActor::UnTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.UnTouch");

	AActor_UnTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PostTouch
// (Event, Public)

void AActor::PostTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PostTouch");

	AActor_PostTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Touch
// (Event, Public)

void AActor::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Touch");

	AActor_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.PhysicsVolumeChange
// (Event, Public)

void AActor::PhysicsVolumeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.PhysicsVolumeChange");

	AActor_PhysicsVolumeChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Landed
// (Event, Public)

void AActor::Landed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Landed");

	AActor_Landed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Falling
// (Event, Public)

void AActor::Falling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Falling");

	AActor_Falling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.HitWall
// (Defined, Event, Public)

void AActor::HitWall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.HitWall");

	AActor_HitWall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Timer
// (Event, Public)

void AActor::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Timer");

	AActor_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Tick
// (Event, Public)

void AActor::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Tick");

	AActor_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.LostChild
// (Event, Public)

void AActor::LostChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.LostChild");

	AActor_LostChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GainedChild
// (Event, Public)

void AActor::GainedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GainedChild");

	AActor_GainedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Destroyed
// (Event, Public)

void AActor::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Destroyed");

	AActor_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetTickIsDisabled
// (Final, Native, Public)

void AActor::SetTickIsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetTickIsDisabled");

	AActor_SetTickIsDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetTickGroup
// (Final, Native, Public)

void AActor::SetTickGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetTickGroup");

	AActor_SetTickGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReattachComponent
// (Final, Native, Public)

void AActor::ReattachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReattachComponent");

	AActor_ReattachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DetachComponent
// (Final, Native, Public)

void AActor::DetachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DetachComponent");

	AActor_DetachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AttachComponent
// (Final, Native, Public)

void AActor::AttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AttachComponent");

	AActor_AttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.UnClock
// (Final, Native, Public, HasOutParms)

void AActor::UnClock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.UnClock");

	AActor_UnClock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Clock
// (Final, Native, Public, HasOutParms)

void AActor::Clock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Clock");

	AActor_Clock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetPhysics
// (Final, Simulated, Native, Public)

void AActor::SetPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetPhysics");

	AActor_SetPhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetOnlyOwnerSee
// (Final, Native, Public)

void AActor::SetOnlyOwnerSee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetOnlyOwnerSee");

	AActor_SetOnlyOwnerSee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetHidden
// (Final, Native, Public)

void AActor::SetHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetHidden");

	AActor_SetHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ChartData
// (Final, Native, Public)

void AActor::ChartData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ChartData");

	AActor_ChartData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FlushDebugStrings
// (Final, Native, Static, Public)

void AActor::STATIC_FlushDebugStrings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FlushDebugStrings");

	AActor_FlushDebugStrings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugString
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugString");

	AActor_DrawDebugString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugCone
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugCone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugCone");

	AActor_DrawDebugCone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugCylinder
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugCylinder");

	AActor_DrawDebugCylinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugSphere
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugSphere");

	AActor_DrawDebugSphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugCoordinateSystem
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugCoordinateSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugCoordinateSystem");

	AActor_DrawDebugCoordinateSystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugStar
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugStar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugStar");

	AActor_DrawDebugStar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugBox
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugBox");

	AActor_DrawDebugBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugPoint
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugPoint");

	AActor_DrawDebugPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.DrawDebugLine
// (Final, Native, Static, HasOptionalParms, Public)

void AActor::STATIC_DrawDebugLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.DrawDebugLine");

	AActor_DrawDebugLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FlushPersistentDebugLines
// (Final, Native, Static, Public)

void AActor::STATIC_FlushPersistentDebugLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FlushPersistentDebugLines");

	AActor_FlushPersistentDebugLines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetBasedPosition
// (Final, Native, Static, Public)

void AActor::STATIC_GetBasedPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetBasedPosition");

	AActor_GetBasedPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetBasedPosition
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void AActor::STATIC_SetBasedPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetBasedPosition");

	AActor_SetBasedPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.BP2Vect
// (Final, Native, Static, Public)

void AActor::STATIC_BP2Vect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.BP2Vect");

	AActor_BP2Vect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Vect2BP
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void AActor::STATIC_Vect2BP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Vect2BP");

	AActor_Vect2BP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetEnemyTargetingDesirability
// (Event, Public)

void AActor::GetEnemyTargetingDesirability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetEnemyTargetingDesirability");

	AActor_GetEnemyTargetingDesirability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTopOwner
// (Final, Native, Public)

void AActor::GetTopOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTopOwner");

	AActor_GetTopOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsOwnedByAnySplitPlayer
// (Final, Native, HasOptionalParms, Public)

void AActor::IsOwnedByAnySplitPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsOwnedByAnySplitPlayer");

	AActor_IsOwnedByAnySplitPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetForcedInitialReplicatedProperty
// (Final, Native, Public)

void AActor::SetForcedInitialReplicatedProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetForcedInitialReplicatedProperty");

	AActor_SetForcedInitialReplicatedProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReplicatedDataBinding
// (Simulated, Event, Public)

void AActor::ReplicatedDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReplicatedDataBinding");

	AActor_ReplicatedDataBinding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ReplicatedEvent
// (Simulated, Event, Public)

void AActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ReplicatedEvent");

	AActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsOwnedBy
// (Final, Native, Public)

void AActor::IsOwnedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsOwnedBy");

	AActor_IsOwnedBy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetBaseMost
// (Native, Public)

void AActor::GetBaseMost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetBaseMost");

	AActor_GetBaseMost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.IsBasedOn
// (Final, Native, Public)

void AActor::IsBasedOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.IsBasedOn");

	AActor_IsBasedOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FindBase
// (Native, Public)

void AActor::FindBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FindBase");

	AActor_FindBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetOwner
// (Final, Native, Public)

void AActor::SetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetOwner");

	AActor_SetOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetBase
// (Final, Native, HasOptionalParms, Public)

void AActor::SetBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetBase");

	AActor_SetBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.GetTerminalVelocity
// (Native, Public)

void AActor::GetTerminalVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.GetTerminalVelocity");

	AActor_GetTerminalVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.AutonomousPhysics
// (Final, Native, Public)

void AActor::AutonomousPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.AutonomousPhysics");

	AActor_AutonomousPhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.MoveSmooth
// (Final, Native, Public)

void AActor::MoveSmooth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.MoveSmooth");

	AActor_MoveSmooth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.fixedTurn
// (Final, Native, Public)

void AActor::fixedTurn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.fixedTurn");

	AActor_fixedTurn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetHardAttach
// (Final, Native, HasOptionalParms, Public)

void AActor::SetHardAttach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetHardAttach");

	AActor_SetHardAttach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetRelativeLocation
// (Final, Native, Public)

void AActor::SetRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetRelativeLocation");

	AActor_SetRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetRelativeRotation
// (Final, Native, Public)

void AActor::SetRelativeRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetRelativeRotation");

	AActor_SetRelativeRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetZone
// (Final, Native, Public)

void AActor::SetZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetZone");

	AActor_SetZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.MovingWhichWay
// (Native, Public, HasOutParms)

void AActor::MovingWhichWay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.MovingWhichWay");

	AActor_MovingWhichWay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetRotation
// (Final, Native, Public)

void AActor::SetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetRotation");

	AActor_SetRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetLocation
// (Native, Public)

void AActor::SetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetLocation");

	AActor_SetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Move
// (Final, Native, Public)

void AActor::Move()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Move");

	AActor_Move_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetDrawScale3D
// (Final, Native, Public)

void AActor::SetDrawScale3D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetDrawScale3D");

	AActor_SetDrawScale3D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetDrawScale
// (Final, Native, Public)

void AActor::SetDrawScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetDrawScale");

	AActor_SetDrawScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetCollisionType
// (Final, Native, Public)

void AActor::SetCollisionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetCollisionType");

	AActor_SetCollisionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetCollisionSize
// (Final, Native, Public)

void AActor::SetCollisionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetCollisionSize");

	AActor_SetCollisionSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.SetCollision
// (Final, Native, HasOptionalParms, Public)

void AActor::SetCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.SetCollision");

	AActor_SetCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.FinishAnim
// (Final, Latent, Native, Public)

void AActor::FinishAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.FinishAnim");

	AActor_FinishAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.Sleep
// (Final, Latent, Native, Public)

void AActor::Sleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.Sleep");

	AActor_Sleep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ConsoleCommand
// (Native, HasOptionalParms, Public, K2Call)

void AActor::ConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ConsoleCommand");

	AActor_ConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Actor.ForceUpdateComponents
// (Native, HasOptionalParms, Public)

void AActor::ForceUpdateComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Actor.ForceUpdateComponents");

	AActor_ForceUpdateComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.ProcessActorSetVolume
// (Event, Public)

void AVolume::ProcessActorSetVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.ProcessActorSetVolume");

	AVolume_ProcessActorSetVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.CollisionChanged
// (Defined, Simulated, Event, Public)

void AVolume::CollisionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.CollisionChanged");

	AVolume_CollisionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.OnToggle
// (Defined, Simulated, Public)

void AVolume::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.OnToggle");

	AVolume_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AVolume::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.DisplayDebug");

	AVolume_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.GetLocationStringFor
// (Defined, Simulated, Public)

void AVolume::GetLocationStringFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.GetLocationStringFor");

	AVolume_GetLocationStringFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AVolume::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.PostBeginPlay");

	AVolume_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.EncompassesPoint
// (Native, Public)

void AVolume::EncompassesPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.EncompassesPoint");

	AVolume_EncompassesPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Volume.Encompasses
// (Native, Public)

void AVolume::Encompasses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Volume.Encompasses");

	AVolume_Encompasses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BlockingVolume.OnToggle
// (Defined, Simulated, Public)

void ABlockingVolume::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BlockingVolume.OnToggle");

	ABlockingVolume_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicBlockingVolume.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ADynamicBlockingVolume::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicBlockingVolume.ApplyCheckpointRecord");

	ADynamicBlockingVolume_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicBlockingVolume.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ADynamicBlockingVolume::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicBlockingVolume.CreateCheckpointRecord");

	ADynamicBlockingVolume_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LevelStreamingVolume.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ALevelStreamingVolume::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LevelStreamingVolume.ApplyCheckpointRecord");

	ALevelStreamingVolume_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LevelStreamingVolume.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ALevelStreamingVolume::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LevelStreamingVolume.CreateCheckpointRecord");

	ALevelStreamingVolume_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LevelStreamingVolume.OnToggle
// (Defined, Simulated, Public)

void ALevelStreamingVolume::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LevelStreamingVolume.OnToggle");

	ALevelStreamingVolume_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void APhysicsVolume::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.ApplyCheckpointRecord");

	APhysicsVolume_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void APhysicsVolume::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.CreateCheckpointRecord");

	APhysicsVolume_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.ShouldSaveForCheckpoint
// (Defined, Public)

void APhysicsVolume::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.ShouldSaveForCheckpoint");

	APhysicsVolume_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.OnSetDamageInstigator
// (Defined, Public)

void APhysicsVolume::OnSetDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.OnSetDamageInstigator");

	APhysicsVolume_OnSetDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.NotifyPawnBecameViewTarget
// (Public)

void APhysicsVolume::NotifyPawnBecameViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.NotifyPawnBecameViewTarget");

	APhysicsVolume_NotifyPawnBecameViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.ModifyPlayer
// (Public)

void APhysicsVolume::ModifyPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.ModifyPlayer");

	APhysicsVolume_ModifyPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.CausePainTo
// (Defined, Public)

void APhysicsVolume::CausePainTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.CausePainTo");

	APhysicsVolume_CausePainTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.Touch
// (Defined, Simulated, Event, Public)

void APhysicsVolume::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.Touch");

	APhysicsVolume_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.TimerPop
// (Defined, Public)

void APhysicsVolume::TimerPop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.TimerPop");

	APhysicsVolume_TimerPop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.CollisionChanged
// (Simulated, Event, Public)

void APhysicsVolume::CollisionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.CollisionChanged");

	APhysicsVolume_CollisionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.OnToggle
// (Defined, Simulated, Public)

void APhysicsVolume::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.OnToggle");

	APhysicsVolume_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.PawnLeavingVolume
// (Event, Public)

void APhysicsVolume::PawnLeavingVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.PawnLeavingVolume");

	APhysicsVolume_PawnLeavingVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.PawnEnteredVolume
// (Event, Public)

void APhysicsVolume::PawnEnteredVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.PawnEnteredVolume");

	APhysicsVolume_PawnEnteredVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.ActorLeavingVolume
// (Event, Public)

void APhysicsVolume::ActorLeavingVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.ActorLeavingVolume");

	APhysicsVolume_ActorLeavingVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.ActorEnteredVolume
// (Event, Public)

void APhysicsVolume::ActorEnteredVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.ActorEnteredVolume");

	APhysicsVolume_ActorEnteredVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.PhysicsChangedFor
// (Event, Public)

void APhysicsVolume::PhysicsChangedFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.PhysicsChangedFor");

	APhysicsVolume_PhysicsChangedFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.Reset
// (Defined, Public)

void APhysicsVolume::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.Reset");

	APhysicsVolume_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.PostBeginPlay
// (Defined, Simulated, Event, Public)

void APhysicsVolume::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.PostBeginPlay");

	APhysicsVolume_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.GetZoneVelocityForActor
// (Native, Public)

void APhysicsVolume::GetZoneVelocityForActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.GetZoneVelocityForActor");

	APhysicsVolume_GetZoneVelocityForActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsVolume.GetGravityZ
// (Native, Public)

void APhysicsVolume::GetGravityZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsVolume.GetGravityZ");

	APhysicsVolume_GetGravityZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DefaultPhysicsVolume.Destroyed
// (Defined, Event, Public)

void ADefaultPhysicsVolume::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DefaultPhysicsVolume.Destroyed");

	ADefaultPhysicsVolume_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LadderVolume.PhysicsChangedFor
// (Defined, Simulated, Event, Public)

void ALadderVolume::PhysicsChangedFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LadderVolume.PhysicsChangedFor");

	ALadderVolume_PhysicsChangedFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LadderVolume.PawnLeavingVolume
// (Defined, Simulated, Event, Public)

void ALadderVolume::PawnLeavingVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LadderVolume.PawnLeavingVolume");

	ALadderVolume_PawnLeavingVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LadderVolume.PawnEnteredVolume
// (Defined, Simulated, Event, Public, HasDefaults)

void ALadderVolume::PawnEnteredVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LadderVolume.PawnEnteredVolume");

	ALadderVolume_PawnEnteredVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LadderVolume.InUse
// (Defined, Public)

void ALadderVolume::InUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LadderVolume.InUse");

	ALadderVolume_InUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LadderVolume.PostBeginPlay
// (Defined, Simulated, Event, Public, HasDefaults)

void ALadderVolume::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LadderVolume.PostBeginPlay");

	ALadderVolume_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PostProcessVolume.OnToggle
// (Defined, Simulated, Public)

void APostProcessVolume::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PostProcessVolume.OnToggle");

	APostProcessVolume_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggerVolume.StopsProjectile
// (Defined, Simulated, Public)

void ATriggerVolume::StopsProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggerVolume.StopsProjectile");

	ATriggerVolume_StopsProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggerVolume.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ATriggerVolume::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggerVolume.PostBeginPlay");

	ATriggerVolume_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.RecheckValidTouch
// (Public)

void ADroppedPickup::RecheckValidTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.RecheckValidTouch");

	ADroppedPickup_RecheckValidTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.PickedUpBy
// (Defined, Public)

void ADroppedPickup::PickedUpBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.PickedUpBy");

	ADroppedPickup_PickedUpBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.GiveTo
// (Defined, Public)

void ADroppedPickup::GiveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.GiveTo");

	ADroppedPickup_GiveTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.Landed
// (Defined, Event, Public)

void ADroppedPickup::Landed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.Landed");

	ADroppedPickup_Landed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.DetourWeight
// (Defined, Public)

void ADroppedPickup::DetourWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.DetourWeight");

	ADroppedPickup_DetourWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.EncroachedBy
// (Defined, Event, Public)

void ADroppedPickup::EncroachedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.EncroachedBy");

	ADroppedPickup_EncroachedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.SetPickupParticles
// (Defined, Simulated, Event, Public)

void ADroppedPickup::SetPickupParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.SetPickupParticles");

	ADroppedPickup_SetPickupParticles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.SetPickupMesh
// (Defined, Simulated, Event, Public)

void ADroppedPickup::SetPickupMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.SetPickupMesh");

	ADroppedPickup_SetPickupMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.Reset
// (Defined, Public)

void ADroppedPickup::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.Reset");

	ADroppedPickup_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ADroppedPickup::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.ReplicatedEvent");

	ADroppedPickup_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.Destroyed
// (Defined, Event, Public)

void ADroppedPickup::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.Destroyed");

	ADroppedPickup_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.RemoveFromNavigation
// (Final, Native, Public)

void ADroppedPickup::RemoveFromNavigation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.RemoveFromNavigation");

	ADroppedPickup_RemoveFromNavigation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DroppedPickup.AddToNavigation
// (Final, Native, Public)

void ADroppedPickup::AddToNavigation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DroppedPickup.AddToNavigation");

	ADroppedPickup_AddToNavigation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.SetLightEnvironmentToNotBeDynamic
// (Final, Defined, Simulated, Public)

void ADynamicSMActor::SetLightEnvironmentToNotBeDynamic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.SetLightEnvironmentToNotBeDynamic");

	ADynamicSMActor_SetLightEnvironmentToNotBeDynamic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.Detach
// (Defined, Event, Public)

void ADynamicSMActor::Detach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.Detach");

	ADynamicSMActor_Detach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.Attach
// (Defined, Event, Public)

void ADynamicSMActor::Attach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.Attach");

	ADynamicSMActor_Attach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.CanBasePawn
// (Defined, Simulated, Public)

void ADynamicSMActor::CanBasePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.CanBasePawn");

	ADynamicSMActor_CanBasePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.SetStaticMesh
// (Defined, HasOptionalParms, Public)

void ADynamicSMActor::SetStaticMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.SetStaticMesh");

	ADynamicSMActor_SetStaticMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.OnSetMaterial
// (Defined, Public)

void ADynamicSMActor::OnSetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.OnSetMaterial");

	ADynamicSMActor_OnSetMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.OnSetMesh
// (Defined, Public)

void ADynamicSMActor::OnSetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.OnSetMesh");

	ADynamicSMActor_OnSetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ADynamicSMActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.ReplicatedEvent");

	ADynamicSMActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicSMActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ADynamicSMActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicSMActor.PostBeginPlay");

	ADynamicSMActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void AInterpActor::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.ApplyCheckpointRecord");

	AInterpActor_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void AInterpActor::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.CreateCheckpointRecord");

	AInterpActor_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.ShouldSaveForCheckpoint
// (Defined, Public)

void AInterpActor::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.ShouldSaveForCheckpoint");

	AInterpActor_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.ShutDown
// (Defined, Simulated, Public)

void AInterpActor::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.ShutDown");

	AInterpActor_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.InterpolationChanged
// (Defined, Simulated, Event, Public)

void AInterpActor::InterpolationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.InterpolationChanged");

	AInterpActor_InterpolationChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.InterpolationFinished
// (Defined, Simulated, Event, Public)

void AInterpActor::InterpolationFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.InterpolationFinished");

	AInterpActor_InterpolationFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.InterpolationStarted
// (Defined, Simulated, Event, Public)

void AInterpActor::InterpolationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.InterpolationStarted");

	AInterpActor_InterpolationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.PlayMovingSound
// (Defined, Simulated, Public)

void AInterpActor::PlayMovingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.PlayMovingSound");

	AInterpActor_PlayMovingSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.FinishedOpen
// (Defined, Public)

void AInterpActor::FinishedOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.FinishedOpen");

	AInterpActor_FinishedOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.Restart
// (Defined, Public)

void AInterpActor::Restart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.Restart");

	AInterpActor_Restart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.Detach
// (Defined, Event, Public)

void AInterpActor::Detach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.Detach");

	AInterpActor_Detach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.Attach
// (Defined, Event, Public)

void AInterpActor::Attach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.Attach");

	AInterpActor_Attach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.RanInto
// (Defined, Event, Public)

void AInterpActor::RanInto()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.RanInto");

	AInterpActor_RanInto_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.EncroachingOn
// (Defined, Event, Public, HasDefaults)

void AInterpActor::EncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.EncroachingOn");

	AInterpActor_EncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.SetShadowParentOnAllAttachedComponents
// (Simulated, Native, Public)

void AInterpActor::SetShadowParentOnAllAttachedComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.SetShadowParentOnAllAttachedComponents");

	AInterpActor_SetShadowParentOnAllAttachedComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InterpActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AInterpActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InterpActor.PostBeginPlay");

	AInterpActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.HideSelf
// (Simulated, Public)

void AEmitter::HideSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.HideSelf");

	AEmitter_HideSelf_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void AEmitter::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.ApplyCheckpointRecord");

	AEmitter_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void AEmitter::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.CreateCheckpointRecord");

	AEmitter_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.ShouldSaveForCheckpoint
// (Defined, Public)

void AEmitter::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.ShouldSaveForCheckpoint");

	AEmitter_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.OnSetParticleSysParam
// (Defined, Simulated, Public)

void AEmitter::OnSetParticleSysParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.OnSetParticleSysParam");

	AEmitter_OnSetParticleSysParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetActorParameter
// (Defined, Simulated, Public)

void AEmitter::SetActorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetActorParameter");

	AEmitter_SetActorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetExtColorParameter
// (Defined, Simulated, Public, HasDefaults)

void AEmitter::SetExtColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetExtColorParameter");

	AEmitter_SetExtColorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetColorParameter
// (Defined, Simulated, Public)

void AEmitter::SetColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetColorParameter");

	AEmitter_SetColorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetVectorParameter
// (Defined, Simulated, Public)

void AEmitter::SetVectorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetVectorParameter");

	AEmitter_SetVectorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetFloatParameter
// (Defined, Simulated, Public)

void AEmitter::SetFloatParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetFloatParameter");

	AEmitter_SetFloatParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.ShutDown
// (Defined, Simulated, Public)

void AEmitter::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.ShutDown");

	AEmitter_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.OnParticleEventGenerator
// (Public)

void AEmitter::OnParticleEventGenerator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.OnParticleEventGenerator");

	AEmitter_OnParticleEventGenerator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.OnToggle
// (Defined, Public)

void AEmitter::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.OnToggle");

	AEmitter_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.OnParticleSystemFinished
// (Defined, Simulated, Public)

void AEmitter::OnParticleSystemFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.OnParticleSystemFinished");

	AEmitter_OnParticleSystemFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AEmitter::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.ReplicatedEvent");

	AEmitter_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AEmitter::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.PostBeginPlay");

	AEmitter_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Emitter.SetTemplate
// (Native, Event, HasOptionalParms, Public)

void AEmitter::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Emitter.SetTemplate");

	AEmitter_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.SpawnEmitterCustomLifetime
// (Defined, Public)

void AEmitterPool::SpawnEmitterCustomLifetime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.SpawnEmitterCustomLifetime");

	AEmitterPool_SpawnEmitterCustomLifetime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.SpawnEmitterMeshAttachment
// (Defined, HasOptionalParms, Public)

void AEmitterPool::SpawnEmitterMeshAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.SpawnEmitterMeshAttachment");

	AEmitterPool_SpawnEmitterMeshAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.SpawnEmitter
// (Defined, HasOptionalParms, Public)

void AEmitterPool::SpawnEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.SpawnEmitter");

	AEmitterPool_SpawnEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.GetPooledComponent
// (Final, Native, Protected)

void AEmitterPool::GetPooledComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.GetPooledComponent");

	AEmitterPool_GetPooledComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.GetFreeMatInstConsts
// (Final, Native, HasOptionalParms, Protected)

void AEmitterPool::GetFreeMatInstConsts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.GetFreeMatInstConsts");

	AEmitterPool_GetFreeMatInstConsts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.FreeMaterialInstanceConstants
// (Final, Native, Protected)

void AEmitterPool::FreeMaterialInstanceConstants()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.FreeMaterialInstanceConstants");

	AEmitterPool_FreeMaterialInstanceConstants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.GetFreeStaticMeshComponent
// (Final, Native, HasOptionalParms, Protected)

void AEmitterPool::GetFreeStaticMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.GetFreeStaticMeshComponent");

	AEmitterPool_GetFreeStaticMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.FreeStaticMeshComponents
// (Final, Native, Public)

void AEmitterPool::FreeStaticMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.FreeStaticMeshComponents");

	AEmitterPool_FreeStaticMeshComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.ReturnToPool
// (Final, Native, Protected)

void AEmitterPool::ReturnToPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.ReturnToPool");

	AEmitterPool_ReturnToPool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.ClearPoolComponents
// (Final, Native, Public)

void AEmitterPool::ClearPoolComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.ClearPoolComponents");

	AEmitterPool_ClearPoolComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterPool.OnParticleSystemFinished
// (Defined, Public)

void AEmitterPool::OnParticleSystemFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterPool.OnParticleSystemFinished");

	AEmitterPool_OnParticleSystemFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.GetWidescreenScale
// (Defined, Public)

void UCanvas::GetWidescreenScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.GetWidescreenScale");

	UCanvas_GetWidescreenScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetTextCharacterClipping
// (Native, Public)

void UCanvas::SetTextCharacterClipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetTextCharacterClipping");

	UCanvas_SetTextCharacterClipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetForceDropShadows
// (Native, Public)

void UCanvas::SetForceDropShadows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetForceDropShadows");

	UCanvas_SetForceDropShadows_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTileBase
// (Defined, Public)

void UCanvas::DrawTileBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTileBase");

	UCanvas_DrawTileBase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.WrapString
// (Native, Static, Public, HasOutParms)

void UCanvas::STATIC_WrapString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.WrapString");

	UCanvas_WrapString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.GetSmallestNudgedScale
// (Native, HasOptionalParms, Public)

void UCanvas::GetSmallestNudgedScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.GetSmallestNudgedScale");

	UCanvas_GetSmallestNudgedScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.GetNudgedScaleTo768
// (Native, HasOptionalParms, Public)

void UCanvas::GetNudgedScaleTo768()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.GetNudgedScaleTo768");

	UCanvas_GetNudgedScaleTo768_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.GetScaleTo768
// (Defined, Public)

void UCanvas::GetScaleTo768()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.GetScaleTo768");

	UCanvas_GetScaleTo768_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawDebugGraph
// (Defined, Public)

void UCanvas::DrawDebugGraph()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawDebugGraph");

	UCanvas_DrawDebugGraph_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.GetCanvasAlpha
// (Final, Native, Public)

void UCanvas::GetCanvasAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.GetCanvasAlpha");

	UCanvas_GetCanvasAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DoFlush
// (Final, Native, Public)

void UCanvas::DoFlush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DoFlush");

	UCanvas_DoFlush_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextureDoubleLine
// (Final, Native, Public)

void UCanvas::DrawTextureDoubleLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextureDoubleLine");

	UCanvas_DrawTextureDoubleLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextureLine
// (Final, Native, Public)

void UCanvas::DrawTextureLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextureLine");

	UCanvas_DrawTextureLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.Draw2DLine
// (Final, Native, Public)

void UCanvas::Draw2DLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.Draw2DLine");

	UCanvas_Draw2DLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawRotatedMaterialTile
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawRotatedMaterialTile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawRotatedMaterialTile");

	UCanvas_DrawRotatedMaterialTile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawRotatedTile
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawRotatedTile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawRotatedTile");

	UCanvas_DrawRotatedTile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetDrawColor
// (Final, Native, HasOptionalParms, Public)

void UCanvas::SetDrawColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetDrawColor");

	UCanvas_SetDrawColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawBox
// (Final, Defined, Simulated, Public)

void UCanvas::DrawBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawBox");

	UCanvas_DrawBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawRect
// (Final, Defined, HasOptionalParms, Public)

void UCanvas::DrawRect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawRect");

	UCanvas_DrawRect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawIconSection
// (Final, Defined, HasOptionalParms, Public)

void UCanvas::DrawIconSection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawIconSection");

	UCanvas_DrawIconSection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawIcon
// (Final, Defined, HasOptionalParms, Public)

void UCanvas::DrawIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawIcon");

	UCanvas_DrawIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.MakeIcon
// (Final, Defined, HasOptionalParms, Public, HasDefaults)

void UCanvas::MakeIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.MakeIcon");

	UCanvas_MakeIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTexture
// (Final, Defined, Simulated, Public)

void UCanvas::DrawTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTexture");

	UCanvas_DrawTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetClip
// (Final, Defined, Public)

void UCanvas::SetClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetClip");

	UCanvas_SetClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetOrigin
// (Final, Defined, Public)

void UCanvas::SetOrigin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetOrigin");

	UCanvas_SetOrigin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.SetPos
// (Final, Native, Public)

void UCanvas::SetPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.SetPos");

	UCanvas_SetPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.Reset
// (Defined, Event, HasOptionalParms, Public)

void UCanvas::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.Reset");

	UCanvas_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawColorizedTile
// (Final, Native, Public)

void UCanvas::DrawColorizedTile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawColorizedTile");

	UCanvas_DrawColorizedTile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTileStretched
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawTileStretched()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTileStretched");

	UCanvas_DrawTileStretched_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.PopTransform
// (Final, Native, Public)

void UCanvas::PopTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.PopTransform");

	UCanvas_PopTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.PushTranslationMatrix
// (Final, Native, Public)

void UCanvas::PushTranslationMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.PushTranslationMatrix");

	UCanvas_PushTranslationMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DeProject
// (Final, Native, Public, HasOutParms)

void UCanvas::DeProject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DeProject");

	UCanvas_DeProject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.ProjectNoClip
// (Final, Native, Public)

void UCanvas::ProjectNoClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.ProjectNoClip");

	UCanvas_ProjectNoClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.Project
// (Final, Native, Public)

void UCanvas::Project()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.Project");

	UCanvas_Project_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTileClipped
// (Final, Native, Public)

void UCanvas::DrawTileClipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTileClipped");

	UCanvas_DrawTileClipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextRA
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawTextRA()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextRA");

	UCanvas_DrawTextRA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextShadowed
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UCanvas::DrawTextShadowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextShadowed");

	UCanvas_DrawTextShadowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextCenteredShadowed
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UCanvas::DrawTextCenteredShadowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextCenteredShadowed");

	UCanvas_DrawTextCenteredShadowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTextCentered
// (Final, Defined, HasOptionalParms, Public, HasDefaults)

void UCanvas::DrawTextCentered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTextCentered");

	UCanvas_DrawTextCentered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.AddColoredText
// (Final, Defined, Static, Public, HasOutParms, HasDefaults)

void UCanvas::STATIC_AddColoredText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.AddColoredText");

	UCanvas_AddColoredText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawText
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UCanvas::DrawText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawText");

	UCanvas_DrawText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.TextSize
// (Final, Native, Public, HasOutParms)

void UCanvas::TextSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.TextSize");

	UCanvas_TextSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.StrLen
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UCanvas::StrLen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.StrLen");

	UCanvas_StrLen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.CreateFontRenderInfo
// (Final, Defined, Static, HasOptionalParms, Public, HasDefaults)

void UCanvas::STATIC_CreateFontRenderInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.CreateFontRenderInfo");

	UCanvas_CreateFontRenderInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawMaterialTileClipped
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawMaterialTileClipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawMaterialTileClipped");

	UCanvas_DrawMaterialTileClipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawMaterialTile
// (Final, Native, HasOptionalParms, Public)

void UCanvas::DrawMaterialTile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawMaterialTile");

	UCanvas_DrawMaterialTile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Canvas.DrawTile
// (Final, Native, Public)

void UCanvas::DrawTile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Canvas.DrawTile");

	UCanvas_DrawTile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.OnLostFocusPause
// (Defined, Event, Public)

void AHUD::OnLostFocusPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.OnLostFocusPause");

	AHUD_OnLostFocusPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.PlayerOwnerDied
// (Public)

void AHUD::PlayerOwnerDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.PlayerOwnerDied");

	AHUD_PlayerOwnerDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.GetRYGColorRamp
// (Defined, Static, Public, HasDefaults)

void AHUD::STATIC_GetRYGColorRamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.GetRYGColorRamp");

	AHUD_GetRYGColorRamp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.GetFontSizeIndex
// (Defined, Static, Public)

void AHUD::STATIC_GetFontSizeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.GetFontSizeIndex");

	AHUD_GetFontSizeIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DisplayKismetMessages
// (Defined, Public)

void AHUD::DisplayKismetMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DisplayKismetMessages");

	AHUD_DisplayKismetMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DisplayChatMessages
// (Defined, Public)

void AHUD::DisplayChatMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DisplayChatMessages");

	AHUD_DisplayChatMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DisplayLocalMessages
// (Defined, Public)

void AHUD::DisplayLocalMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DisplayLocalMessages");

	AHUD_DisplayLocalMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawChatMessageText
// (Defined, HasOptionalParms, Public, HasDefaults)

void AHUD::DrawChatMessageText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawChatMessageText");

	AHUD_DrawChatMessageText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawMessageText
// (Defined, HasOptionalParms, Public, HasDefaults)

void AHUD::DrawMessageText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawMessageText");

	AHUD_DrawMessageText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawMessageIcon
// (Defined, HasOptionalParms, Public, HasDefaults)

void AHUD::DrawMessageIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawMessageIcon");

	AHUD_DrawMessageIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawChatMessage
// (Defined, Public, HasOutParms)

void AHUD::DrawChatMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawChatMessage");

	AHUD_DrawChatMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawMessage
// (Defined, Public, HasOutParms)

void AHUD::DrawMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawMessage");

	AHUD_DrawMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.GetScreenCoords
// (Defined, Public, HasOutParms)

void AHUD::GetScreenCoords()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.GetScreenCoords");

	AHUD_GetScreenCoords_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.GetHUDCanvasScale
// (Defined, Public)

void AHUD::GetHUDCanvasScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.GetHUDCanvasScale");

	AHUD_GetHUDCanvasScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.AddChatMessage
// (Defined, HasOptionalParms, Public)

void AHUD::AddChatMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.AddChatMessage");

	AHUD_AddChatMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.AddLocalizedMessage
// (Defined, HasOptionalParms, Public)

void AHUD::AddLocalizedMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.AddLocalizedMessage");

	AHUD_AddLocalizedMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ChatMessage
// (Defined, HasOptionalParms, Public)

void AHUD::ChatMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ChatMessage");

	AHUD_ChatMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.LocalizedMessage
// (Defined, HasOptionalParms, Public)

void AHUD::LocalizedMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.LocalizedMessage");

	AHUD_LocalizedMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.AddConsoleMessage
// (Defined, HasOptionalParms, Public)

void AHUD::AddConsoleMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.AddConsoleMessage");

	AHUD_AddConsoleMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DisplayConsoleMessages
// (Defined, Public)

void AHUD::DisplayConsoleMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DisplayConsoleMessages");

	AHUD_DisplayConsoleMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.IsOnCanvas
// (Native, Public)

void AHUD::IsOnCanvas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.IsOnCanvas");

	AHUD_IsOnCanvas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.Message
// (Defined, HasOptionalParms, Public)

void AHUD::Message()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.Message");

	AHUD_Message_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ClearMessage
// (Defined, Public, HasOutParms)

void AHUD::ClearMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ClearMessage");

	AHUD_ClearMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DisplayBadConnectionAlert
// (Public)

void AHUD::DisplayBadConnectionAlert()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DisplayBadConnectionAlert");

	AHUD_DisplayBadConnectionAlert_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawEngineHUD
// (Defined, Public)

void AHUD::DrawEngineHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawEngineHUD");

	AHUD_DrawEngineHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawDemoHUD
// (Public)

void AHUD::DrawDemoHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawDemoHUD");

	AHUD_DrawDemoHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawHUD
// (Defined, Public)

void AHUD::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawHUD");

	AHUD_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawMessages
// (Defined, Public)

void AHUD::DrawMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawMessages");

	AHUD_DrawMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.PostRender
// (Defined, Event, Public)

void AHUD::PostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.PostRender");

	AHUD_PostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.PreCalcValues
// (Defined, Public)

void AHUD::PreCalcValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.PreCalcValues");

	AHUD_PreCalcValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawRoute
// (Defined, Public, HasDefaults)

void AHUD::DrawRoute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawRoute");

	AHUD_DrawRoute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.FXStop
// (Defined, Exec, Public)

void AHUD::FXStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.FXStop");

	AHUD_FXStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.FXPlay
// (Defined, Exec, Public)

void AHUD::FXPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.FXPlay");

	AHUD_FXPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ShouldDisplayDebug
// (Defined, Public)

void AHUD::ShouldDisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ShouldDisplayDebug");

	AHUD_ShouldDisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ShowDebug
// (Defined, Exec, HasOptionalParms, Public)

void AHUD::ShowDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ShowDebug");

	AHUD_ShowDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ShowGameDebug
// (Defined, Exec, Public)

void AHUD::ShowGameDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ShowGameDebug");

	AHUD_ShowGameDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.SetShowScores
// (Defined, Exec, Public)

void AHUD::SetShowScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.SetShowScores");

	AHUD_SetShowScores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ShowScores
// (Defined, Exec, Public)

void AHUD::ShowScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ShowScores");

	AHUD_ShowScores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ShowHUD
// (Defined, Exec, Public)

void AHUD::ShowHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ShowHUD");

	AHUD_ShowHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.ToggleHUD
// (Defined, Exec, Public)

void AHUD::ToggleHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.ToggleHUD");

	AHUD_ToggleHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.AddPostRenderedActor
// (Defined, Public)

void AHUD::AddPostRenderedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.AddPostRenderedActor");

	AHUD_AddPostRenderedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.RemovePostRenderedActor
// (Defined, Public)

void AHUD::RemovePostRenderedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.RemovePostRenderedActor");

	AHUD_RemovePostRenderedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.DrawActorOverlays
// (Native, Public)

void AHUD::DrawActorOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.DrawActorOverlays");

	AHUD_DrawActorOverlays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.Destroyed
// (Defined, Event, Public)

void AHUD::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.Destroyed");

	AHUD_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.SpawnScoreBoard
// (Defined, Public)

void AHUD::SpawnScoreBoard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.SpawnScoreBoard");

	AHUD_SpawnScoreBoard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AHUD::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.PostBeginPlay");

	AHUD_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.Draw2DLine
// (Final, Native, Public)

void AHUD::Draw2DLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.Draw2DLine");

	AHUD_Draw2DLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HUD.Draw3DLine
// (Final, Native, Public)

void AHUD::Draw3DLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HUD.Draw3DLine");

	AHUD_Draw3DLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.CheckForSentinelRun
// (Defined, Public)

void AAutoTestManager::CheckForSentinelRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.CheckForSentinelRun");

	AAutoTestManager_CheckForSentinelRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.StartMatch
// (Defined, Public)

void AAutoTestManager::StartMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.StartMatch");

	AAutoTestManager_StartMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.GetNextAutomatedTestingMap
// (Defined, Public)

void AAutoTestManager::GetNextAutomatedTestingMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.GetNextAutomatedTestingMap");

	AAutoTestManager_GetNextAutomatedTestingMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.IncrementNumberOfMatchesPlayed
// (Defined, Public)

void AAutoTestManager::IncrementNumberOfMatchesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.IncrementNumberOfMatchesPlayed");

	AAutoTestManager_IncrementNumberOfMatchesPlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.IncrementAutomatedTestingMapIndex
// (Defined, Public)

void AAutoTestManager::IncrementAutomatedTestingMapIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.IncrementAutomatedTestingMapIndex");

	AAutoTestManager_IncrementAutomatedTestingMapIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.CloseAutomatedMapTestTimer
// (Defined, Public)

void AAutoTestManager::CloseAutomatedMapTestTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.CloseAutomatedMapTestTimer");

	AAutoTestManager_CloseAutomatedMapTestTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.StartAutomatedMapTestTimerWorker
// (Defined, Public)

void AAutoTestManager::StartAutomatedMapTestTimerWorker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.StartAutomatedMapTestTimerWorker");

	AAutoTestManager_StartAutomatedMapTestTimerWorker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.StartAutomatedMapTestTimer
// (Defined, Event, Public)

void AAutoTestManager::StartAutomatedMapTestTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.StartAutomatedMapTestTimer");

	AAutoTestManager_StartAutomatedMapTestTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.DoTimeBasedSentinelStatGathering
// (Defined, Public, HasDefaults)

void AAutoTestManager::DoTimeBasedSentinelStatGathering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.DoTimeBasedSentinelStatGathering");

	AAutoTestManager_DoTimeBasedSentinelStatGathering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.DoSentinel_PerfAtSpecificLocation
// (Native, Public)

void AAutoTestManager::DoSentinel_PerfAtSpecificLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.DoSentinel_PerfAtSpecificLocation");

	AAutoTestManager_DoSentinel_PerfAtSpecificLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.DoSentinel_MemoryAtSpecificLocation
// (Native, Public)

void AAutoTestManager::DoSentinel_MemoryAtSpecificLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.DoSentinel_MemoryAtSpecificLocation");

	AAutoTestManager_DoSentinel_MemoryAtSpecificLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.GetTravelLocations
// (Native, Public, HasOutParms)

void AAutoTestManager::GetTravelLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.GetTravelLocations");

	AAutoTestManager_GetTravelLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.HandlePerLoadedMapAudioStats
// (Native, Public)

void AAutoTestManager::HandlePerLoadedMapAudioStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.HandlePerLoadedMapAudioStats");

	AAutoTestManager_HandlePerLoadedMapAudioStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.DoSentinelActionPerLoadedMap
// (Native, Public)

void AAutoTestManager::DoSentinelActionPerLoadedMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.DoSentinelActionPerLoadedMap");

	AAutoTestManager_DoSentinelActionPerLoadedMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.DoTravelTheWorld
// (Defined, Public)

void AAutoTestManager::DoTravelTheWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.DoTravelTheWorld");

	AAutoTestManager_DoTravelTheWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.EndSentinelRun
// (Native, Public)

void AAutoTestManager::EndSentinelRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.EndSentinelRun");

	AAutoTestManager_EndSentinelRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.AddSentinelPerTimePeriodStats
// (Native, Public)

void AAutoTestManager::AddSentinelPerTimePeriodStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.AddSentinelPerTimePeriodStats");

	AAutoTestManager_AddSentinelPerTimePeriodStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.BeginSentinelRun
// (Native, Public)

void AAutoTestManager::BeginSentinelRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.BeginSentinelRun");

	AAutoTestManager_BeginSentinelRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.InitializeOptions
// (Defined, Public)

void AAutoTestManager::InitializeOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.InitializeOptions");

	AAutoTestManager_InitializeOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.Timer
// (Defined, Event, Public)

void AAutoTestManager::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.Timer");

	AAutoTestManager_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AutoTestManager.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AAutoTestManager::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AutoTestManager.PostBeginPlay");

	AAutoTestManager_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverGroup.OnToggle
// (Defined, Simulated, Public)

void ACoverGroup::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverGroup.OnToggle");

	ACoverGroup_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverGroup.ToggleGroup
// (Native, Public)

void ACoverGroup::ToggleGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverGroup.ToggleGroup");

	ACoverGroup_ToggleGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverGroup.DisableGroup
// (Native, Public)

void ACoverGroup::DisableGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverGroup.DisableGroup");

	ACoverGroup_DisableGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverGroup.EnableGroup
// (Native, Public)

void ACoverGroup::EnableGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverGroup.EnableGroup");

	ACoverGroup_EnableGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileWriter.Destroyed
// (Defined, Event, Public)

void AFileWriter::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileWriter.Destroyed");

	AFileWriter_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileWriter.Logf
// (Final, Native, Public)

void AFileWriter::Logf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileWriter.Logf");

	AFileWriter_Logf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileWriter.CloseFile
// (Final, Native, Public)

void AFileWriter::CloseFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileWriter.CloseFile");

	AFileWriter_CloseFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileWriter.OpenFile
// (Final, Native, HasOptionalParms, Public)

void AFileWriter::OpenFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileWriter.OpenFile");

	AFileWriter_OpenFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileLog.CloseLog
// (Defined, Public)

void AFileLog::CloseLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileLog.CloseLog");

	AFileLog_CloseLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FileLog.OpenLog
// (Defined, HasOptionalParms, Public)

void AFileLog::OpenLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FileLog.OpenLog");

	AFileLog_OpenLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetDebugSpewLevel
// (Public)

void UOnlineSubsystem::SetDebugSpewLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetDebugSpewLevel");

	UOnlineSubsystem_SetDebugSpewLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.DumpVoiceRegistration
// (Public)

void UOnlineSubsystem::DumpVoiceRegistration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.DumpVoiceRegistration");

	UOnlineSubsystem_DumpVoiceRegistration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.DumpSessionState
// (Defined, Public, HasDefaults)

void UOnlineSubsystem::DumpSessionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.DumpSessionState");

	UOnlineSubsystem_DumpSessionState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.GetPrimarySessionName
// (Defined, Public)

void UOnlineSubsystem::GetPrimarySessionName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.GetPrimarySessionName");

	UOnlineSubsystem_GetPrimarySessionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.DumpGameSettings
// (Defined, Static, Public)

void UOnlineSubsystem::STATIC_DumpGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.DumpGameSettings");

	UOnlineSubsystem_DumpGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.GetNumSupportedLogins
// (Final, Native, Static, Public)

void UOnlineSubsystem::STATIC_GetNumSupportedLogins()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.GetNumSupportedLogins");

	UOnlineSubsystem_GetNumSupportedLogins_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.GetBuildUniqueId
// (Native, Public)

void UOnlineSubsystem::GetBuildUniqueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.GetBuildUniqueId");

	UOnlineSubsystem_GetBuildUniqueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.AreUniqueNetIdsEqual
// (Final, Native, Static, Public, HasOutParms)

void UOnlineSubsystem::STATIC_AreUniqueNetIdsEqual()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.AreUniqueNetIdsEqual");

	UOnlineSubsystem_AreUniqueNetIdsEqual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.StringToUniqueNetId
// (Final, Native, Static, Public, HasOutParms)

void UOnlineSubsystem::STATIC_StringToUniqueNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.StringToUniqueNetId");

	UOnlineSubsystem_StringToUniqueNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.UniqueNetIdToString
// (Final, Native, Static, Public, HasOutParms)

void UOnlineSubsystem::STATIC_UniqueNetIdToString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.UniqueNetIdToString");

	UOnlineSubsystem_UniqueNetIdToString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.GetNamedInterface
// (Defined, Event, Public)

void UOnlineSubsystem::GetNamedInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.GetNamedInterface");

	UOnlineSubsystem_GetNamedInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetNamedInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetNamedInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetNamedInterface");

	UOnlineSubsystem_SetNamedInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetPartyChatInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetPartyChatInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetPartyChatInterface");

	UOnlineSubsystem_SetPartyChatInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetNewsInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetNewsInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetNewsInterface");

	UOnlineSubsystem_SetNewsInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetStatsInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetStatsInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetStatsInterface");

	UOnlineSubsystem_SetStatsInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetVoiceInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetVoiceInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetVoiceInterface");

	UOnlineSubsystem_SetVoiceInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetContentInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetContentInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetContentInterface");

	UOnlineSubsystem_SetContentInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetGameInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetGameInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetGameInterface");

	UOnlineSubsystem_SetGameInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetSystemInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetSystemInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetSystemInterface");

	UOnlineSubsystem_SetSystemInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetPlayerInterfaceEx
// (Defined, Event, Public)

void UOnlineSubsystem::SetPlayerInterfaceEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetPlayerInterfaceEx");

	UOnlineSubsystem_SetPlayerInterfaceEx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetPlayerInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetPlayerInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetPlayerInterface");

	UOnlineSubsystem_SetPlayerInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.SetAccountInterface
// (Defined, Event, Public)

void UOnlineSubsystem::SetAccountInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.SetAccountInterface");

	UOnlineSubsystem_SetAccountInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.Exit
// (Event, Public)

void UOnlineSubsystem::Exit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.Exit");

	UOnlineSubsystem_Exit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.PostInit
// (Defined, Event, Public)

void UOnlineSubsystem::PostInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.PostInit");

	UOnlineSubsystem_PostInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSubsystem.Init
// (Native, Event, Public)

void UOnlineSubsystem::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSubsystem.Init");

	UOnlineSubsystem_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StandbyCheatDetected
// (Event, Public)

void AGameInfo::StandbyCheatDetected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StandbyCheatDetected");

	AGameInfo_StandbyCheatDetected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.EnableStandbyCheatDetection
// (Native, Public)

void AGameInfo::EnableStandbyCheatDetection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.EnableStandbyCheatDetection");

	AGameInfo_EnableStandbyCheatDetection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.BeginBVT
// (Defined, Simulated, Exec, HasOptionalParms, Public)

void AGameInfo::BeginBVT()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.BeginBVT");

	AGameInfo_BeginBVT_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CheckForSentinelRun
// (Defined, Public)

void AGameInfo::CheckForSentinelRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CheckForSentinelRun");

	AGameInfo_CheckForSentinelRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ShouldAutoContinueToNextRound
// (Defined, Public)

void AGameInfo::ShouldAutoContinueToNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ShouldAutoContinueToNextRound");

	AGameInfo_ShouldAutoContinueToNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.IsDoingASentinelRun
// (Defined, Public)

void AGameInfo::IsDoingASentinelRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.IsDoingASentinelRun");

	AGameInfo_IsDoingASentinelRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.IsCheckingForMemLeaks
// (Defined, Public)

void AGameInfo::IsCheckingForMemLeaks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.IsCheckingForMemLeaks");

	AGameInfo_IsCheckingForMemLeaks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.IsCheckingForFragmentation
// (Defined, Public)

void AGameInfo::IsCheckingForFragmentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.IsCheckingForFragmentation");

	AGameInfo_IsCheckingForFragmentation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.IsAutomatedPerfTesting
// (Defined, Public)

void AGameInfo::IsAutomatedPerfTesting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.IsAutomatedPerfTesting");

	AGameInfo_IsAutomatedPerfTesting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.TellClientsToTravelToSession
// (Defined, Public)

void AGameInfo::TellClientsToTravelToSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.TellClientsToTravelToSession");

	AGameInfo_TellClientsToTravelToSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.TellClientsToReturnToPartyHost
// (Defined, Public, HasDefaults)

void AGameInfo::TellClientsToReturnToPartyHost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.TellClientsToReturnToPartyHost");

	AGameInfo_TellClientsToReturnToPartyHost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.OnServerCreateComplete
// (Defined, Public)

void AGameInfo::OnServerCreateComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.OnServerCreateComplete");

	AGameInfo_OnServerCreateComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RegisterServer
// (Defined, Public)

void AGameInfo::RegisterServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RegisterServer");

	AGameInfo_RegisterServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.OnLoginChange
// (Defined, Public)

void AGameInfo::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.OnLoginChange");

	AGameInfo_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.OnLoginFailed
// (Defined, Public)

void AGameInfo::OnLoginFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.OnLoginFailed");

	AGameInfo_OnLoginFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ClearAutoLoginDelegates
// (Defined, Public)

void AGameInfo::ClearAutoLoginDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ClearAutoLoginDelegates");

	AGameInfo_ClearAutoLoginDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ProcessServerLogin
// (Defined, Public)

void AGameInfo::ProcessServerLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ProcessServerLogin");

	AGameInfo_ProcessServerLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.MatineeCancelled
// (Event, Public)

void AGameInfo::MatineeCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.MatineeCancelled");

	AGameInfo_MatineeCancelled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RecalculateSkillRating
// (Defined, Public, HasDefaults)

void AGameInfo::RecalculateSkillRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RecalculateSkillRating");

	AGameInfo_RecalculateSkillRating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UpdateGameplayMuteList
// (Defined, Public)

void AGameInfo::UpdateGameplayMuteList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UpdateGameplayMuteList");

	AGameInfo_UpdateGameplayMuteList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.NotifyArbitratedMatchEnd
// (Defined, Public)

void AGameInfo::NotifyArbitratedMatchEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.NotifyArbitratedMatchEnd");

	AGameInfo_NotifyArbitratedMatchEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.MatchIsInProgress
// (Defined, Public)

void AGameInfo::MatchIsInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.MatchIsInProgress");

	AGameInfo_MatchIsInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ArbitrationRegistrationComplete
// (Public)

void AGameInfo::ArbitrationRegistrationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ArbitrationRegistrationComplete");

	AGameInfo_ArbitrationRegistrationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RegisterServerForArbitration
// (Public)

void AGameInfo::RegisterServerForArbitration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RegisterServerForArbitration");

	AGameInfo_RegisterServerForArbitration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartArbitratedMatch
// (Public)

void AGameInfo::StartArbitratedMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartArbitratedMatch");

	AGameInfo_StartArbitratedMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartArbitrationRegistration
// (Public)

void AGameInfo::StartArbitrationRegistration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartArbitrationRegistration");

	AGameInfo_StartArbitrationRegistration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ProcessClientRegistrationCompletion
// (Public)

void AGameInfo::ProcessClientRegistrationCompletion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ProcessClientRegistrationCompletion");

	AGameInfo_ProcessClientRegistrationCompletion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UpdateGameSettingsCounts
// (Defined, Public)

void AGameInfo::UpdateGameSettingsCounts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UpdateGameSettingsCounts");

	AGameInfo_UpdateGameSettingsCounts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SetSeamlessTravelViewTarget
// (Defined, Public)

void AGameInfo::SetSeamlessTravelViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SetSeamlessTravelViewTarget");

	AGameInfo_SetSeamlessTravelViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.HandleSeamlessTravelPlayer
// (Defined, Event, Public, HasOutParms, HasDefaults)

void AGameInfo::HandleSeamlessTravelPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.HandleSeamlessTravelPlayer");

	AGameInfo_HandleSeamlessTravelPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UpdateGameSettings
// (Public)

void AGameInfo::UpdateGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UpdateGameSettings");

	AGameInfo_UpdateGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PostSeamlessTravel
// (Defined, Event, Public)

void AGameInfo::PostSeamlessTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PostSeamlessTravel");

	AGameInfo_PostSeamlessTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SwapPlayerControllers
// (Final, Native, Public)

void AGameInfo::SwapPlayerControllers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SwapPlayerControllers");

	AGameInfo_SwapPlayerControllers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetSeamlessTravelActorList
// (Defined, Event, Public, HasOutParms)

void AGameInfo::GetSeamlessTravelActorList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetSeamlessTravelActorList");

	AGameInfo_GetSeamlessTravelActorList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.OverridePRI
// (Defined, Public)

void AGameInfo::OverridePRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.OverridePRI");

	AGameInfo_OverridePRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.FindInactivePRI
// (Defined, Public)

void AGameInfo::FindInactivePRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.FindInactivePRI");

	AGameInfo_FindInactivePRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AddInactivePRI
// (Defined, Public)

void AGameInfo::AddInactivePRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AddInactivePRI");

	AGameInfo_AddInactivePRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PostCommitMapChange
// (Event, Public)

void AGameInfo::PostCommitMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PostCommitMapChange");

	AGameInfo_PostCommitMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PreCommitMapChange
// (Event, Public)

void AGameInfo::PreCommitMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PreCommitMapChange");

	AGameInfo_PreCommitMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AllowPausing
// (Defined, HasOptionalParms, Public)

void AGameInfo::AllowPausing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AllowPausing");

	AGameInfo_AllowPausing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AllowCheats
// (Defined, Public)

void AGameInfo::AllowCheats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AllowCheats");

	AGameInfo_AllowCheats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AllowMutator
// (Defined, Static, Public)

void AGameInfo::STATIC_AllowMutator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AllowMutator");

	AGameInfo_AllowMutator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PlayerCanRestart
// (Defined, Public)

void AGameInfo::PlayerCanRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PlayerCanRestart");

	AGameInfo_PlayerCanRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PlayerCanRestartGame
// (Defined, Public)

void AGameInfo::PlayerCanRestartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PlayerCanRestartGame");

	AGameInfo_PlayerCanRestartGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.KillBots
// (Exec, Public)

void AGameInfo::KillBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.KillBots");

	AGameInfo_KillBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DriverLeftVehicle
// (Defined, Public)

void AGameInfo::DriverLeftVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DriverLeftVehicle");

	AGameInfo_DriverLeftVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CanLeaveVehicle
// (Defined, Public)

void AGameInfo::CanLeaveVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CanLeaveVehicle");

	AGameInfo_CanLeaveVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DriverEnteredVehicle
// (Defined, Public)

void AGameInfo::DriverEnteredVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DriverEnteredVehicle");

	AGameInfo_DriverEnteredVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ModifyScoreKill
// (Defined, Public)

void AGameInfo::ModifyScoreKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ModifyScoreKill");

	AGameInfo_ModifyScoreKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ScoreKill
// (Defined, Public)

void AGameInfo::ScoreKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ScoreKill");

	AGameInfo_ScoreKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CheckScore
// (Defined, Public)

void AGameInfo::CheckScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CheckScore");

	AGameInfo_CheckScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ScoreObjective
// (Defined, Public)

void AGameInfo::ScoreObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ScoreObjective");

	AGameInfo_ScoreObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AddObjectiveScore
// (Defined, Public)

void AGameInfo::AddObjectiveScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AddObjectiveScore");

	AGameInfo_AddObjectiveScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RatePlayerStart
// (Defined, Public)

void AGameInfo::RatePlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RatePlayerStart");

	AGameInfo_RatePlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ChoosePlayerStart
// (Defined, HasOptionalParms, Public)

void AGameInfo::ChoosePlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ChoosePlayerStart");

	AGameInfo_ChoosePlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.FindPlayerStart
// (Defined, HasOptionalParms, Public)

void AGameInfo::FindPlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.FindPlayerStart");

	AGameInfo_FindPlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ShouldSpawnAtStartSpot
// (Defined, Public)

void AGameInfo::ShouldSpawnAtStartSpot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ShouldSpawnAtStartSpot");

	AGameInfo_ShouldSpawnAtStartSpot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.EndLogging
// (Public)

void AGameInfo::EndLogging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.EndLogging");

	AGameInfo_EndLogging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.EndOnlineGame
// (Defined, Public)

void AGameInfo::EndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.EndOnlineGame");

	AGameInfo_EndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PerformEndGameHandling
// (Defined, Public)

void AGameInfo::PerformEndGameHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PerformEndGameHandling");

	AGameInfo_PerformEndGameHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.EndGame
// (Defined, Public)

void AGameInfo::EndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.EndGame");

	AGameInfo_EndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.WriteOnlinePlayerScores
// (Defined, Public)

void AGameInfo::WriteOnlinePlayerScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.WriteOnlinePlayerScores");

	AGameInfo_WriteOnlinePlayerScores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.WriteOnlineStats
// (Defined, Public)

void AGameInfo::WriteOnlineStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.WriteOnlineStats");

	AGameInfo_WriteOnlineStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CheckEndGame
// (Defined, Public)

void AGameInfo::CheckEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CheckEndGame");

	AGameInfo_CheckEndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CheckModifiedEndGame
// (Defined, Public)

void AGameInfo::CheckModifiedEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CheckModifiedEndGame");

	AGameInfo_CheckModifiedEndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.BroadcastLocalizedTeam
// (Defined, Event, HasOptionalParms, Public)

void AGameInfo::BroadcastLocalizedTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.BroadcastLocalizedTeam");

	AGameInfo_BroadcastLocalizedTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.BroadcastLocalized
// (Defined, Event, HasOptionalParms, Public)

void AGameInfo::BroadcastLocalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.BroadcastLocalized");

	AGameInfo_BroadcastLocalized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.BroadcastTeam
// (Defined, HasOptionalParms, Public)

void AGameInfo::BroadcastTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.BroadcastTeam");

	AGameInfo_BroadcastTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Broadcast
// (Defined, Event, HasOptionalParms, Public)

void AGameInfo::Broadcast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Broadcast");

	AGameInfo_Broadcast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RestartGame
// (Defined, Public)

void AGameInfo::RestartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RestartGame");

	AGameInfo_RestartGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetTravelType
// (Defined, Public)

void AGameInfo::GetTravelType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetTravelType");

	AGameInfo_GetTravelType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetNextMap
// (Public)

void AGameInfo::GetNextMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetNextMap");

	AGameInfo_GetNextMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SendPlayer
// (Defined, Public)

void AGameInfo::SendPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SendPlayer");

	AGameInfo_SendPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PickTeam
// (Defined, Public)

void AGameInfo::PickTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PickTeam");

	AGameInfo_PickTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ChangeTeam
// (Defined, Public)

void AGameInfo::ChangeTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ChangeTeam");

	AGameInfo_ChangeTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ChangeName
// (Defined, Public)

void AGameInfo::ChangeName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ChangeName");

	AGameInfo_ChangeName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DiscardInventory
// (Defined, HasOptionalParms, Public)

void AGameInfo::DiscardInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DiscardInventory");

	AGameInfo_DiscardInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PickupQuery
// (Defined, Public)

void AGameInfo::PickupQuery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PickupQuery");

	AGameInfo_PickupQuery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ShouldRespawn
// (Defined, Public)

void AGameInfo::ShouldRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ShouldRespawn");

	AGameInfo_ShouldRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CheckRelevance
// (Defined, Public)

void AGameInfo::CheckRelevance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CheckRelevance");

	AGameInfo_CheckRelevance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ReduceDamage
// (Defined, Public, HasOutParms)

void AGameInfo::ReduceDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ReduceDamage");

	AGameInfo_ReduceDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CanSpectate
// (Defined, Public)

void AGameInfo::CanSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CanSpectate");

	AGameInfo_CanSpectate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.KickBan
// (Defined, Public)

void AGameInfo::KickBan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.KickBan");

	AGameInfo_KickBan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Kick
// (Defined, Public)

void AGameInfo::Kick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Kick");

	AGameInfo_Kick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ParseKillMessage
// (Defined, Static, Public)

void AGameInfo::STATIC_ParseKillMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ParseKillMessage");

	AGameInfo_ParseKillMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.BroadcastDeathMessage
// (Defined, Public)

void AGameInfo::BroadcastDeathMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.BroadcastDeathMessage");

	AGameInfo_BroadcastDeathMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PreventDeath
// (Defined, Public)

void AGameInfo::PreventDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PreventDeath");

	AGameInfo_PreventDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Killed
// (Defined, Public)

void AGameInfo::Killed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Killed");

	AGameInfo_Killed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.NotifyKilled
// (Defined, Public)

void AGameInfo::NotifyKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.NotifyKilled");

	AGameInfo_NotifyKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SetPlayerDefaults
// (Defined, Public)

void AGameInfo::SetPlayerDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SetPlayerDefaults");

	AGameInfo_SetPlayerDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Mutate
// (Defined, Public)

void AGameInfo::Mutate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Mutate");

	AGameInfo_Mutate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AddDefaultInventory
// (Defined, Event, Public)

void AGameInfo::AddDefaultInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AddDefaultInventory");

	AGameInfo_AddDefaultInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AcceptInventory
// (Event, Public)

void AGameInfo::AcceptInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AcceptInventory");

	AGameInfo_AcceptInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UnregisterPlayer
// (Defined, Public)

void AGameInfo::UnregisterPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UnregisterPlayer");

	AGameInfo_UnregisterPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Logout
// (Defined, Public)

void AGameInfo::Logout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Logout");

	AGameInfo_Logout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PreExit
// (Event, Public)

void AGameInfo::PreExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PreExit");

	AGameInfo_PreExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CalculatedNetSpeed
// (Defined, Public)

void AGameInfo::CalculatedNetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CalculatedNetSpeed");

	AGameInfo_CalculatedNetSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UpdateNetSpeeds
// (Defined, Public)

void AGameInfo::UpdateNetSpeeds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UpdateNetSpeeds");

	AGameInfo_UpdateNetSpeeds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PostLogin
// (Defined, Event, Public)

void AGameInfo::PostLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PostLogin");

	AGameInfo_PostLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GenericPlayerInitialization
// (Defined, Public)

void AGameInfo::GenericPlayerInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GenericPlayerInitialization");

	AGameInfo_GenericPlayerInitialization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ReplicateStreamingStatus
// (Defined, Public)

void AGameInfo::ReplicateStreamingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ReplicateStreamingStatus");

	AGameInfo_ReplicateStreamingStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetDefaultPlayerClass
// (Defined, Public)

void AGameInfo::GetDefaultPlayerClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetDefaultPlayerClass");

	AGameInfo_GetDefaultPlayerClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SpawnDefaultPawnFor
// (Defined, Public, HasDefaults)

void AGameInfo::SpawnDefaultPawnFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SpawnDefaultPawnFor");

	AGameInfo_SpawnDefaultPawnFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RestartPlayer
// (Defined, Public)

void AGameInfo::RestartPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RestartPlayer");

	AGameInfo_RestartPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UsedSpotForPlayer
// (Public)

void AGameInfo::UsedSpotForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UsedSpotForPlayer");

	AGameInfo_UsedSpotForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartBots
// (Defined, Public)

void AGameInfo::StartBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartBots");

	AGameInfo_StartBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartHumans
// (Defined, Public)

void AGameInfo::StartHumans()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartHumans");

	AGameInfo_StartHumans_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.OnStartOnlineGameComplete
// (Defined, Public)

void AGameInfo::OnStartOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.OnStartOnlineGameComplete");

	AGameInfo_OnStartOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartOnlineGame
// (Defined, Public)

void AGameInfo::StartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartOnlineGame");

	AGameInfo_StartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.StartMatch
// (Defined, Public)

void AGameInfo::StartMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.StartMatch");

	AGameInfo_StartMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Login
// (Defined, Event, Public, HasOutParms, HasDefaults)

void AGameInfo::Login()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Login");

	AGameInfo_Login_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SpawnPlayerController
// (Defined, Public)

void AGameInfo::SpawnPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SpawnPlayerController");

	AGameInfo_SpawnPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetNextPlayerID
// (Final, Native, Public)

void AGameInfo::GetNextPlayerID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetNextPlayerID");

	AGameInfo_GetNextPlayerID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AtCapacity
// (Defined, Public)

void AGameInfo::AtCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AtCapacity");

	AGameInfo_AtCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PreLogin
// (Defined, Event, Public, HasOutParms)

void AGameInfo::PreLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PreLogin");

	AGameInfo_PreLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RequiresPassword
// (Defined, Public)

void AGameInfo::RequiresPassword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RequiresPassword");

	AGameInfo_RequiresPassword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ProcessClientTravel
// (Defined, Public, HasOutParms)

void AGameInfo::ProcessClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ProcessClientTravel");

	AGameInfo_ProcessClientTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ProcessServerTravel
// (Defined, HasOptionalParms, Public, HasDefaults)

void AGameInfo::ProcessServerTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ProcessServerTravel");

	AGameInfo_ProcessServerTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.RemoveMutator
// (Defined, Public)

void AGameInfo::RemoveMutator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.RemoveMutator");

	AGameInfo_RemoveMutator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.AddMutator
// (Defined, HasOptionalParms, Public)

void AGameInfo::AddMutator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.AddMutator");

	AGameInfo_AddMutator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.NotifyPendingConnectionLost
// (Event, Public)

void AGameInfo::NotifyPendingConnectionLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.NotifyPendingConnectionLost");

	AGameInfo_NotifyPendingConnectionLost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.InitGame
// (Defined, Event, Public, HasOutParms)

void AGameInfo::InitGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.InitGame");

	AGameInfo_InitGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SetGameType
// (Defined, Event, Static, Public)

void AGameInfo::STATIC_SetGameType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SetGameType");

	AGameInfo_SetGameType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetDefaultGameClassPath
// (Defined, Event, Static, Public)

void AGameInfo::STATIC_GetDefaultGameClassPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetDefaultGameClassPath");

	AGameInfo_GetDefaultGameClassPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetIntOption
// (Defined, Static, Public)

void AGameInfo::STATIC_GetIntOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetIntOption");

	AGameInfo_GetIntOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.HasOption
// (Defined, Static, Public)

void AGameInfo::STATIC_HasOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.HasOption");

	AGameInfo_HasOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ParseOption
// (Defined, Static, Public)

void AGameInfo::STATIC_ParseOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ParseOption");

	AGameInfo_ParseOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetKeyValue
// (Defined, Static, Public, HasOutParms)

void AGameInfo::STATIC_GetKeyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetKeyValue");

	AGameInfo_GetKeyValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GrabOption
// (Defined, Static, Public, HasOutParms)

void AGameInfo::STATIC_GrabOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GrabOption");

	AGameInfo_GrabOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SetGameSpeed
// (Defined, Public)

void AGameInfo::SetGameSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SetGameSpeed");

	AGameInfo_SetGameSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DebugPause
// (Defined, Public)

void AGameInfo::DebugPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DebugPause");

	AGameInfo_DebugPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ForceClearUnpauseDelegates
// (Final, Native, Public)

void AGameInfo::ForceClearUnpauseDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ForceClearUnpauseDelegates");

	AGameInfo_ForceClearUnpauseDelegates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ClearPause
// (Defined, Event, Public)

void AGameInfo::ClearPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ClearPause");

	AGameInfo_ClearPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.SetPause
// (Defined, HasOptionalParms, Public)

void AGameInfo::SetPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.SetPause");

	AGameInfo_SetPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.CanUnpause
// (Defined, Public, Delegate)

void AGameInfo::CanUnpause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.CanUnpause");

	AGameInfo_CanUnpause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetServerPort
// (Defined, Public)

void AGameInfo::GetServerPort()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetServerPort");

	AGameInfo_GetServerPort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetNumPlayers
// (Defined, Public)

void AGameInfo::GetNumPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetNumPlayers");

	AGameInfo_GetNumPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetNetworkNumber
// (Native, Public)

void AGameInfo::GetNetworkNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetNetworkNumber");

	AGameInfo_GetNetworkNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.InitGameReplicationInfo
// (Defined, Public)

void AGameInfo::InitGameReplicationInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.InitGameReplicationInfo");

	AGameInfo_InitGameReplicationInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ForceKickPlayer
// (Defined, Event, Public)

void AGameInfo::ForceKickPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ForceKickPlayer");

	AGameInfo_ForceKickPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.KickIdler
// (Defined, Event, Public)

void AGameInfo::KickIdler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.KickIdler");

	AGameInfo_KickIdler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GameEnding
// (Defined, Event, Public)

void AGameInfo::GameEnding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GameEnding");

	AGameInfo_GameEnding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.NotifyNavigationChanged
// (Public)

void AGameInfo::NotifyNavigationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.NotifyNavigationChanged");

	AGameInfo_NotifyNavigationChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DoNavFearCostFallOff
// (Final, Native, Public)

void AGameInfo::DoNavFearCostFallOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DoNavFearCostFallOff");

	AGameInfo_DoNavFearCostFallOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Timer
// (Defined, Event, Public)

void AGameInfo::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Timer");

	AGameInfo_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ResetLevel
// (Defined, Public)

void AGameInfo::ResetLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ResetLevel");

	AGameInfo_ResetLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.ShouldReset
// (Defined, Public)

void AGameInfo::ShouldReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.ShouldReset");

	AGameInfo_ShouldReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.Reset
// (Defined, Public)

void AGameInfo::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.Reset");

	AGameInfo_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AGameInfo::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.DisplayDebug");

	AGameInfo_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AGameInfo::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PostBeginPlay");

	AGameInfo_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.GetCoverReplicator
// (Defined, Public)

void AGameInfo::GetCoverReplicator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.GetCoverReplicator");

	AGameInfo_GetCoverReplicator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.UseLowGore
// (Defined, Static, Public)

void AGameInfo::STATIC_UseLowGore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.UseLowGore");

	AGameInfo_UseLowGore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.FindPlayerByID
// (Defined, Public)

void AGameInfo::FindPlayerByID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.FindPlayerByID");

	AGameInfo_FindPlayerByID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfo.PreBeginPlay
// (Defined, Event, Public)

void AGameInfo::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfo.PreBeginPlay");

	AGameInfo_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MCPTools.DoLoggedIn
// (Native, Public)

void AMCPTools::DoLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MCPTools.DoLoggedIn");

	AMCPTools_DoLoggedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MCPTools.InitGame
// (Defined, Event, Public, HasOutParms)

void AMCPTools::InitGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MCPTools.InitGame");

	AMCPTools_InitGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MCPTools.RegisterServer
// (Defined, Public)

void AMCPTools::RegisterServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MCPTools.RegisterServer");

	AMCPTools_RegisterServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.NetDamage
// (Defined, Public, HasOutParms)

void AMutator::NetDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.NetDamage");

	AMutator_NetDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.ScoreKill
// (Defined, Public)

void AMutator::ScoreKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.ScoreKill");

	AMutator_ScoreKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.ScoreObjective
// (Defined, Public)

void AMutator::ScoreObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.ScoreObjective");

	AMutator_ScoreObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.PreventDeath
// (Defined, Public)

void AMutator::PreventDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.PreventDeath");

	AMutator_PreventDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.OverridePickupQuery
// (Defined, Public, HasOutParms)

void AMutator::OverridePickupQuery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.OverridePickupQuery");

	AMutator_OverridePickupQuery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.CheckEndGame
// (Defined, Public)

void AMutator::CheckEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.CheckEndGame");

	AMutator_CheckEndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.HandleRestartGame
// (Defined, Public)

void AMutator::HandleRestartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.HandleRestartGame");

	AMutator_HandleRestartGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.FindPlayerStart
// (Defined, HasOptionalParms, Public)

void AMutator::FindPlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.FindPlayerStart");

	AMutator_FindPlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.GetSeamlessTravelActorList
// (Defined, Public, HasOutParms)

void AMutator::GetSeamlessTravelActorList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.GetSeamlessTravelActorList");

	AMutator_GetSeamlessTravelActorList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.InitMutator
// (Defined, Public, HasOutParms)

void AMutator::InitMutator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.InitMutator");

	AMutator_InitMutator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.DriverLeftVehicle
// (Defined, Public)

void AMutator::DriverLeftVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.DriverLeftVehicle");

	AMutator_DriverLeftVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.CanLeaveVehicle
// (Defined, Public)

void AMutator::CanLeaveVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.CanLeaveVehicle");

	AMutator_CanLeaveVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.DriverEnteredVehicle
// (Defined, Public)

void AMutator::DriverEnteredVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.DriverEnteredVehicle");

	AMutator_DriverEnteredVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.NotifyLogin
// (Defined, Public)

void AMutator::NotifyLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.NotifyLogin");

	AMutator_NotifyLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.NotifyLogout
// (Defined, Public)

void AMutator::NotifyLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.NotifyLogout");

	AMutator_NotifyLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.ParseChatPercVar
// (Defined, Public)

void AMutator::ParseChatPercVar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.ParseChatPercVar");

	AMutator_ParseChatPercVar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.GetServerPlayers
// (Public, HasOutParms)

void AMutator::GetServerPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.GetServerPlayers");

	AMutator_GetServerPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.GetServerDetails
// (Defined, Public, HasOutParms)

void AMutator::GetServerDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.GetServerDetails");

	AMutator_GetServerDetails_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.CheckReplacement
// (Defined, Public)

void AMutator::CheckReplacement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.CheckReplacement");

	AMutator_CheckReplacement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.CheckRelevance
// (Defined, Public)

void AMutator::CheckRelevance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.CheckRelevance");

	AMutator_CheckRelevance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.IsRelevant
// (Defined, Public)

void AMutator::IsRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.IsRelevant");

	AMutator_IsRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.AlwaysKeep
// (Defined, Public)

void AMutator::AlwaysKeep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.AlwaysKeep");

	AMutator_AlwaysKeep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.AddMutator
// (Defined, Public)

void AMutator::AddMutator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.AddMutator");

	AMutator_AddMutator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.ModifyPlayer
// (Defined, Public)

void AMutator::ModifyPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.ModifyPlayer");

	AMutator_ModifyPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.ModifyLogin
// (Defined, Public, HasOutParms)

void AMutator::ModifyLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.ModifyLogin");

	AMutator_ModifyLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.Mutate
// (Defined, Public)

void AMutator::Mutate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.Mutate");

	AMutator_Mutate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.Destroyed
// (Defined, Event, Public)

void AMutator::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.Destroyed");

	AMutator_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.MutatorIsAllowed
// (Defined, Public)

void AMutator::MutatorIsAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.MutatorIsAllowed");

	AMutator_MutatorIsAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Mutator.PreBeginPlay
// (Defined, Event, Public)

void AMutator::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Mutator.PreBeginPlay");

	AMutator_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PotentialClimbWatcher.Tick
// (Defined, Simulated, Event, Public, HasDefaults)

void APotentialClimbWatcher::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PotentialClimbWatcher.Tick");

	APotentialClimbWatcher_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Route.MoveOntoRoutePath
// (Final, Native, HasOptionalParms, Public)

void ARoute::MoveOntoRoutePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Route.MoveOntoRoutePath");

	ARoute_MoveOntoRoutePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Route.ResolveRouteIndex
// (Final, Native, Public, HasOutParms)

void ARoute::ResolveRouteIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Route.ResolveRouteIndex");

	ARoute_ResolveRouteIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetActorWithTag
// (Defined, Simulated, Public)

void AWorldInfo::GetActorWithTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetActorWithTag");

	AWorldInfo_GetActorWithTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.PlayHighPrioritySound
// (Defined, Simulated, Public)

void AWorldInfo::PlayHighPrioritySound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.PlayHighPrioritySound");

	AWorldInfo_PlayHighPrioritySound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.FindEnvironmentVolume
// (Final, Native, Public)

void AWorldInfo::FindEnvironmentVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.FindEnvironmentVolume");

	AWorldInfo_FindEnvironmentVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetWorldInfo
// (Final, Native, Static, Public)

void AWorldInfo::STATIC_GetWorldInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetWorldInfo");

	AWorldInfo_GetWorldInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetWorldFractureSettings
// (Final, Native, Public)

void AWorldInfo::GetWorldFractureSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetWorldFractureSettings");

	AWorldInfo_GetWorldFractureSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.DoMemoryTracking
// (Final, Native, Public)

void AWorldInfo::DoMemoryTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.DoMemoryTracking");

	AWorldInfo_DoMemoryTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetDemoRewindPoints
// (Final, Native, Public, HasOutParms)

void AWorldInfo::GetDemoRewindPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetDemoRewindPoints");

	AWorldInfo_GetDemoRewindPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetDemoFrameInfo
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AWorldInfo::GetDemoFrameInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetDemoFrameInfo");

	AWorldInfo_GetDemoFrameInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsPlayingDemo
// (Final, Native, Public)

void AWorldInfo::IsPlayingDemo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsPlayingDemo");

	AWorldInfo_IsPlayingDemo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsRecordingDemo
// (Final, Native, Public)

void AWorldInfo::IsRecordingDemo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsRecordingDemo");

	AWorldInfo_IsRecordingDemo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetDetailMode
// (Final, Native, Public)

void AWorldInfo::GetDetailMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetDetailMode");

	AWorldInfo_GetDetailMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetMapName
// (Final, Native, HasOptionalParms, Public)

void AWorldInfo::GetMapName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetMapName");

	AWorldInfo_GetMapName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.SetMapInfo
// (Final, Native, Public)

void AWorldInfo::SetMapInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.SetMapInfo");

	AWorldInfo_SetMapInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetMapInfo
// (Final, Native, Public)

void AWorldInfo::GetMapInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetMapInfo");

	AWorldInfo_GetMapInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.SetSeamlessTravelMidpointPause
// (Final, Native, Public)

void AWorldInfo::SetSeamlessTravelMidpointPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.SetSeamlessTravelMidpointPause");

	AWorldInfo_SetSeamlessTravelMidpointPause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsInSeamlessTravel
// (Final, Native, Public)

void AWorldInfo::IsInSeamlessTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsInSeamlessTravel");

	AWorldInfo_IsInSeamlessTravel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.SeamlessTravel
// (Final, Native, HasOptionalParms, Public)

void AWorldInfo::SeamlessTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.SeamlessTravel");

	AWorldInfo_SeamlessTravel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.CommitMapChange
// (Final, Native, Public)

void AWorldInfo::CommitMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.CommitMapChange");

	AWorldInfo_CommitMapChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.CancelPendingMapChange
// (Final, Native, Public)

void AWorldInfo::CancelPendingMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.CancelPendingMapChange");

	AWorldInfo_CancelPendingMapChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsMapChangeReady
// (Final, Native, Public)

void AWorldInfo::IsMapChangeReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsMapChangeReady");

	AWorldInfo_IsMapChangeReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsPreparingMapChange
// (Final, Native, Public)

void AWorldInfo::IsPreparingMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsPreparingMapChange");

	AWorldInfo_IsPreparingMapChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.PrepareMapChange
// (Final, Native, Public, HasOutParms)

void AWorldInfo::PrepareMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.PrepareMapChange");

	AWorldInfo_PrepareMapChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.NotifyMatchStarted
// (Final, Native, HasOptionalParms, Public)

void AWorldInfo::NotifyMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.NotifyMatchStarted");

	AWorldInfo_NotifyMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.AllPawns
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void AWorldInfo::AllPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.AllPawns");

	AWorldInfo_AllPawns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.AllControllers
// (Final, Iterator, Native, Public, HasOutParms)

void AWorldInfo::AllControllers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.AllControllers");

	AWorldInfo_AllControllers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.NavigationPointCheck
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void AWorldInfo::NavigationPointCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.NavigationPointCheck");

	AWorldInfo_NavigationPointCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.RadiusNavigationPoints
// (Final, Iterator, Native, Public, HasOutParms)

void AWorldInfo::RadiusNavigationPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.RadiusNavigationPoints");

	AWorldInfo_RadiusNavigationPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.AllNavigationPoints
// (Final, Iterator, Native, Public, HasOutParms)

void AWorldInfo::AllNavigationPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.AllNavigationPoints");

	AWorldInfo_AllNavigationPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.Reset
// (Defined, Public)

void AWorldInfo::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.Reset");

	AWorldInfo_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.PostBeginPlay
// (Defined, Simulated, Public)

void AWorldInfo::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.PostBeginPlay");

	AWorldInfo_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.PreBeginPlay
// (Defined, Simulated, Public)

void AWorldInfo::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.PreBeginPlay");

	AWorldInfo_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.ThisIsNeverExecuted
// (Defined, Public)

void AWorldInfo::ThisIsNeverExecuted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.ThisIsNeverExecuted");

	AWorldInfo_ThisIsNeverExecuted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.ServerTravel
// (Defined, Simulated, Event, HasOptionalParms, Public)

void AWorldInfo::ServerTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.ServerTravel");

	AWorldInfo_ServerTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetGameClass
// (Defined, Simulated, Public)

void AWorldInfo::GetGameClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetGameClass");

	AWorldInfo_GetGameClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetAddressURL
// (Simulated, Native, Public)

void AWorldInfo::GetAddressURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetAddressURL");

	AWorldInfo_GetAddressURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.VerifyNavList
// (Final, Simulated, Native, Public)

void AWorldInfo::VerifyNavList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.VerifyNavList");

	AWorldInfo_VerifyNavList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.ForceGarbageCollection
// (Final, Simulated, Native, HasOptionalParms, Public)

void AWorldInfo::ForceGarbageCollection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.ForceGarbageCollection");

	AWorldInfo_ForceGarbageCollection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsPlayInEditor
// (Final, Simulated, Native, Static, Public)

void AWorldInfo::STATIC_IsPlayInEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsPlayInEditor");

	AWorldInfo_IsPlayInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsSteamBuild
// (Final, Simulated, Native, Static, Public)

void AWorldInfo::STATIC_IsSteamBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsSteamBuild");

	AWorldInfo_IsSteamBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsConsoleBuild
// (Final, Simulated, Native, Static, HasOptionalParms, Public)

void AWorldInfo::STATIC_IsConsoleBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsConsoleBuild");

	AWorldInfo_IsConsoleBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsDemoBuild
// (Final, Simulated, Native, Static, Public)

void AWorldInfo::STATIC_IsDemoBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsDemoBuild");

	AWorldInfo_IsDemoBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetLocalURL
// (Simulated, Native, Public)

void AWorldInfo::GetLocalURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetLocalURL");

	AWorldInfo_GetLocalURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.SetLevelRBGravity
// (Final, Native, Public)

void AWorldInfo::SetLevelRBGravity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.SetLevelRBGravity");

	AWorldInfo_SetLevelRBGravity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetAllRootSequences
// (Final, Simulated, Native, Public)

void AWorldInfo::GetAllRootSequences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetAllRootSequences");

	AWorldInfo_GetAllRootSequences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetGameSequence
// (Final, Simulated, Native, Public)

void AWorldInfo::GetGameSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetGameSequence");

	AWorldInfo_GetGameSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetGravityZ
// (Native, Public)

void AWorldInfo::GetGravityZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetGravityZ");

	AWorldInfo_GetGravityZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.UpdateMusicTrack
// (Final, Native, Public)

void AWorldInfo::UpdateMusicTrack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.UpdateMusicTrack");

	AWorldInfo_UpdateMusicTrack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.IsMenuLevel
// (Final, Native, Static, HasOptionalParms, Public)

void AWorldInfo::STATIC_IsMenuLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.IsMenuLevel");

	AWorldInfo_IsMenuLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.AddOnScreenDebugMessage
// (Final, Native, Public)

void AWorldInfo::AddOnScreenDebugMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.AddOnScreenDebugMessage");

	AWorldInfo_AddOnScreenDebugMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AWorldInfo::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.ReplicatedEvent");

	AWorldInfo_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetNavMeshPathGoalEvaluatorFromCache
// (Native, Public)

void AWorldInfo::GetNavMeshPathGoalEvaluatorFromCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetNavMeshPathGoalEvaluatorFromCache");

	AWorldInfo_GetNavMeshPathGoalEvaluatorFromCache_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.GetNavMeshPathConstraintFromCache
// (Native, Public)

void AWorldInfo::GetNavMeshPathConstraintFromCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.GetNavMeshPathConstraintFromCache");

	AWorldInfo_GetNavMeshPathConstraintFromCache_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WorldInfo.ReleaseCachedConstraintsAndEvaluators
// (Native, Public)

void AWorldInfo::ReleaseCachedConstraintsAndEvaluators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WorldInfo.ReleaseCachedConstraintsAndEvaluators");

	AWorldInfo_ReleaseCachedConstraintsAndEvaluators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.OwnerEvent
// (Public)

void AInventory::OwnerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.OwnerEvent");

	AInventory_OwnerEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.GetLocalString
// (Defined, Static, HasOptionalParms, Public)

void AInventory::STATIC_GetLocalString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.GetLocalString");

	AInventory_GetLocalString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.DropFrom
// (Defined, Public)

void AInventory::DropFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.DropFrom");

	AInventory_DropFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.DenyPickupQuery
// (Defined, Public)

void AInventory::DenyPickupQuery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.DenyPickupQuery");

	AInventory_DenyPickupQuery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.ItemRemovedFromInvManager
// (Public)

void AInventory::ItemRemovedFromInvManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.ItemRemovedFromInvManager");

	AInventory_ItemRemovedFromInvManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.ClientGivenTo
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AInventory::ClientGivenTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.ClientGivenTo");

	AInventory_ClientGivenTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.GivenTo
// (Defined, HasOptionalParms, Public)

void AInventory::GivenTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.GivenTo");

	AInventory_GivenTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.AnnouncePickup
// (Defined, Public)

void AInventory::AnnouncePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.AnnouncePickup");

	AInventory_AnnouncePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.GiveTo
// (Final, Defined, Public)

void AInventory::GiveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.GiveTo");

	AInventory_GiveTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.DetourWeight
// (Defined, Static, Public)

void AInventory::STATIC_DetourWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.DetourWeight");

	AInventory_DetourWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.BotDesireability
// (Defined, Static, Public)

void AInventory::STATIC_BotDesireability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.BotDesireability");

	AInventory_BotDesireability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.Destroyed
// (Defined, Event, Public)

void AInventory::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.Destroyed");

	AInventory_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.GetHumanReadableName
// (Defined, Simulated, Public)

void AInventory::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.GetHumanReadableName");

	AInventory_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.ActiveRenderOverlays
// (Simulated, Public)

void AInventory::ActiveRenderOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.ActiveRenderOverlays");

	AInventory_ActiveRenderOverlays_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Inventory.RenderOverlays
// (Simulated, Public)

void AInventory::RenderOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Inventory.RenderOverlays");

	AInventory_RenderOverlays_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.CacheAIController
// (Defined, Simulated, Public)

void AWeapon::CacheAIController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.CacheAIController");

	AWeapon_CacheAIController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.WeaponIsDown
// (Simulated, Public)

void AWeapon::WeaponIsDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.WeaponIsDown");

	AWeapon_WeaponIsDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.StillFiring
// (Defined, Simulated, Public)

void AWeapon::StillFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.StillFiring");

	AWeapon_StillFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ShouldRefire
// (Defined, Simulated, Public)

void AWeapon::ShouldRefire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ShouldRefire");

	AWeapon_ShouldRefire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.NotifyWeaponFinishedFiring
// (Defined, Public)

void AWeapon::NotifyWeaponFinishedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.NotifyWeaponFinishedFiring");

	AWeapon_NotifyWeaponFinishedFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.NotifyWeaponFired
// (Defined, Public)

void AWeapon::NotifyWeaponFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.NotifyWeaponFired");

	AWeapon_NotifyWeaponFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.HandleFinishedFiring
// (Defined, Simulated, Public)

void AWeapon::HandleFinishedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.HandleFinishedFiring");

	AWeapon_HandleFinishedFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.TryPutDown
// (Defined, Simulated, Public)

void AWeapon::TryPutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.TryPutDown");

	AWeapon_TryPutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetPhysicalFireStartLoc
// (Simulated, Native, Event, HasOptionalParms, Public)

void AWeapon::GetPhysicalFireStartLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetPhysicalFireStartLoc");

	AWeapon_GetPhysicalFireStartLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetMuzzleLoc
// (Defined, Simulated, Event, Public)

void AWeapon::GetMuzzleLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetMuzzleLoc");

	AWeapon_GetMuzzleLoc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.CustomFire
// (Simulated, Public)

void AWeapon::CustomFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.CustomFire");

	AWeapon_CustomFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ProjectileFire
// (Defined, Simulated, Public, HasDefaults)

void AWeapon::ProjectileFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ProjectileFire");

	AWeapon_ProjectileFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ProcessInstantHit
// (Defined, Simulated, HasOptionalParms, Public)

void AWeapon::ProcessInstantHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ProcessInstantHit");

	AWeapon_ProcessInstantHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.InstantFire
// (Defined, Simulated, Public, HasDefaults)

void AWeapon::InstantFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.InstantFire");

	AWeapon_InstantFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PassThroughDamage
// (Defined, Simulated, Static, Public)

void AWeapon::STATIC_PassThroughDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PassThroughDamage");

	AWeapon_PassThroughDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.CalcWeaponFire
// (Defined, Simulated, HasOptionalParms, Public, HasOutParms, HasDefaults)

void AWeapon::CalcWeaponFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.CalcWeaponFire");

	AWeapon_CalcWeaponFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetTraceOwner
// (Defined, Simulated, Public)

void AWeapon::GetTraceOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetTraceOwner");

	AWeapon_GetTraceOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetTraceRange
// (Defined, Simulated, Event, Public)

void AWeapon::GetTraceRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetTraceRange");

	AWeapon_GetTraceRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetAdjustedAim
// (Defined, Simulated, Public, HasDefaults)

void AWeapon::GetAdjustedAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetAdjustedAim");

	AWeapon_GetAdjustedAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.FireAmmunition
// (Defined, Simulated, Public)

void AWeapon::FireAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.FireAmmunition");

	AWeapon_FireAmmunition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.FireModeUpdated
// (Simulated, Public)

void AWeapon::FireModeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.FireModeUpdated");

	AWeapon_FireModeUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SetCurrentFireMode
// (Defined, Simulated, Public)

void AWeapon::SetCurrentFireMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SetCurrentFireMode");

	AWeapon_SetCurrentFireMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SendToFiringState
// (Defined, Simulated, Public)

void AWeapon::SendToFiringState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SendToFiringState");

	AWeapon_SendToFiringState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ForceEndFire
// (Defined, Simulated, Public)

void AWeapon::ForceEndFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ForceEndFire");

	AWeapon_ForceEndFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.EndFire
// (Defined, Simulated, Public)

void AWeapon::EndFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.EndFire");

	AWeapon_EndFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ServerStopFire
// (Defined, Net, NetReliable, Public, NetServer)

void AWeapon::ServerStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ServerStopFire");

	AWeapon_ServerStopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.StopFire
// (Defined, Simulated, Public)

void AWeapon::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.StopFire");

	AWeapon_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.BeginFire
// (Defined, Simulated, Public)

void AWeapon::BeginFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.BeginFire");

	AWeapon_BeginFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ServerStartFire
// (Defined, Net, NetReliable, Public, NetServer)

void AWeapon::ServerStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ServerStartFire");

	AWeapon_ServerStartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.StartFire
// (Defined, Simulated, Public)

void AWeapon::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.StartFire");

	AWeapon_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.WeaponCalcCamera
// (Simulated, Public, HasOutParms)

void AWeapon::WeaponCalcCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.WeaponCalcCamera");

	AWeapon_WeaponCalcCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClientCheckWeaponSet
// (Defined, Simulated, Public)

void AWeapon::ClientCheckWeaponSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClientCheckWeaponSet");

	AWeapon_ClientCheckWeaponSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClientWeaponSet
// (Defined, Net, NetReliable, Simulated, HasOptionalParms, Public, NetClient)

void AWeapon::ClientWeaponSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClientWeaponSet");

	AWeapon_ClientWeaponSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClientGivenTo
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AWeapon::ClientGivenTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClientGivenTo");

	AWeapon_ClientGivenTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.AdjustFOVAngle
// (Defined, Simulated, Public)

void AWeapon::AdjustFOVAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.AdjustFOVAngle");

	AWeapon_AdjustFOVAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetViewAxes
// (Defined, Simulated, Public, HasOutParms, HasDefaults)

void AWeapon::GetViewAxes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetViewAxes");

	AWeapon_GetViewAxes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DetachWeapon
// (Simulated, Public)

void AWeapon::DetachWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DetachWeapon");

	AWeapon_DetachWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.AttachWeaponTo
// (Simulated, HasOptionalParms, Public)

void AWeapon::AttachWeaponTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.AttachWeaponTo");

	AWeapon_AttachWeaponTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClearFlashLocation
// (Defined, Public)

void AWeapon::ClearFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClearFlashLocation");

	AWeapon_ClearFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SetFlashLocation
// (Defined, Public)

void AWeapon::SetFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SetFlashLocation");

	AWeapon_SetFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClearFlashCount
// (Defined, Simulated, Public)

void AWeapon::ClearFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClearFlashCount");

	AWeapon_ClearFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.IncrementFlashCount
// (Defined, Simulated, Public)

void AWeapon::IncrementFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.IncrementFlashCount");

	AWeapon_IncrementFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.WeaponEmpty
// (Simulated, Public)

void AWeapon::WeaponEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.WeaponEmpty");

	AWeapon_WeaponEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DenyPickupQuery
// (Defined, Public)

void AWeapon::DenyPickupQuery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DenyPickupQuery");

	AWeapon_DenyPickupQuery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PutDownWeapon
// (Defined, Simulated, Public)

void AWeapon::PutDownWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PutDownWeapon");

	AWeapon_PutDownWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.Activate
// (Defined, Simulated, Public)

void AWeapon::Activate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.Activate");

	AWeapon_Activate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.TimeWeaponEquipping
// (Defined, Simulated, Public)

void AWeapon::TimeWeaponEquipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.TimeWeaponEquipping");

	AWeapon_TimeWeaponEquipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.TimeWeaponPutDown
// (Defined, Simulated, Public)

void AWeapon::TimeWeaponPutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.TimeWeaponPutDown");

	AWeapon_TimeWeaponPutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.RefireCheckTimer
// (Simulated, Public)

void AWeapon::RefireCheckTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.RefireCheckTimer");

	AWeapon_RefireCheckTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.TimeWeaponFiring
// (Defined, Simulated, Public)

void AWeapon::TimeWeaponFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.TimeWeaponFiring");

	AWeapon_TimeWeaponFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetFireInterval
// (Defined, Simulated, Public)

void AWeapon::GetFireInterval()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetFireInterval");

	AWeapon_GetFireInterval_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PlayFiringSound
// (Simulated, Public)

void AWeapon::PlayFiringSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PlayFiringSound");

	AWeapon_PlayFiringSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.StopFireEffects
// (Simulated, Public)

void AWeapon::StopFireEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.StopFireEffects");

	AWeapon_StopFireEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PlayFireEffects
// (Simulated, HasOptionalParms, Public)

void AWeapon::PlayFireEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PlayFireEffects");

	AWeapon_PlayFireEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.StopWeaponAnimation
// (Defined, Simulated, Public)

void AWeapon::StopWeaponAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.StopWeaponAnimation");

	AWeapon_StopWeaponAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PlayWeaponAnimation
// (Defined, Simulated, HasOptionalParms, Public)

void AWeapon::PlayWeaponAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PlayWeaponAnimation");

	AWeapon_PlayWeaponAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.WeaponPlaySound
// (Defined, Simulated, HasOptionalParms, Public)

void AWeapon::WeaponPlaySound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.WeaponPlaySound");

	AWeapon_WeaponPlaySound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetWeaponAnimNodeSeq
// (Defined, Simulated, Public)

void AWeapon::GetWeaponAnimNodeSeq()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetWeaponAnimNodeSeq");

	AWeapon_GetWeaponAnimNodeSeq_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.FireOnRelease
// (Defined, Public)

void AWeapon::FireOnRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.FireOnRelease");

	AWeapon_FireOnRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SuggestDefenseStyle
// (Defined, Public)

void AWeapon::SuggestDefenseStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SuggestDefenseStyle");

	AWeapon_SuggestDefenseStyle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SuggestAttackStyle
// (Defined, Public)

void AWeapon::SuggestAttackStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SuggestAttackStyle");

	AWeapon_SuggestAttackStyle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.CanAttack
// (Defined, Public)

void AWeapon::CanAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.CanAttack");

	AWeapon_CanAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.RangedAttackTime
// (Defined, Public)

void AWeapon::RangedAttackTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.RangedAttackTime");

	AWeapon_RangedAttackTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.RecommendLongRangedAttack
// (Defined, Public)

void AWeapon::RecommendLongRangedAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.RecommendLongRangedAttack");

	AWeapon_RecommendLongRangedAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.FocusOnLeader
// (Defined, Public)

void AWeapon::FocusOnLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.FocusOnLeader");

	AWeapon_FocusOnLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.RecommendRangedAttack
// (Defined, Public)

void AWeapon::RecommendRangedAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.RecommendRangedAttack");

	AWeapon_RecommendRangedAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetWeaponRating
// (Defined, Simulated, Public)

void AWeapon::GetWeaponRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetWeaponRating");

	AWeapon_GetWeaponRating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.RelativeStrengthVersus
// (Defined, Public)

void AWeapon::RelativeStrengthVersus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.RelativeStrengthVersus");

	AWeapon_RelativeStrengthVersus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetAIRating
// (Defined, Public)

void AWeapon::GetAIRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetAIRating");

	AWeapon_GetAIRating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetDamageRadius
// (Defined, Public)

void AWeapon::GetDamageRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetDamageRadius");

	AWeapon_GetDamageRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.MaxRange
// (Defined, Simulated, Public)

void AWeapon::MaxRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.MaxRange");

	AWeapon_MaxRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.AddSpread
// (Defined, Simulated, Public, HasDefaults)

void AWeapon::AddSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.AddSpread");

	AWeapon_AddSpread_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetProjectileClass
// (Defined, Public)

void AWeapon::GetProjectileClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetProjectileClass");

	AWeapon_GetProjectileClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClearAllPendingFire
// (Final, Defined, Simulated, Public)

void AWeapon::ClearAllPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClearAllPendingFire");

	AWeapon_ClearAllPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClearPendingFire
// (Final, Defined, Simulated, Public)

void AWeapon::ClearPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClearPendingFire");

	AWeapon_ClearPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.SetPendingFire
// (Final, Defined, Simulated, Public)

void AWeapon::SetPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.SetPendingFire");

	AWeapon_SetPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.PendingFire
// (Final, Defined, Simulated, Public)

void AWeapon::PendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.PendingFire");

	AWeapon_PendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetPendingFireLength
// (Final, Defined, Simulated, Public)

void AWeapon::GetPendingFireLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetPendingFireLength");

	AWeapon_GetPendingFireLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.HasAnyAmmo
// (Defined, Simulated, Public)

void AWeapon::HasAnyAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.HasAnyAmmo");

	AWeapon_HasAnyAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.HasAmmo
// (Defined, Simulated, HasOptionalParms, Public)

void AWeapon::HasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.HasAmmo");

	AWeapon_HasAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.AddAmmo
// (Public)

void AWeapon::AddAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.AddAmmo");

	AWeapon_AddAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ConsumeAmmo
// (Public)

void AWeapon::ConsumeAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ConsumeAmmo");

	AWeapon_ConsumeAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.GetWeaponDebug
// (Defined, Simulated, Public, HasOutParms)

void AWeapon::GetWeaponDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.GetWeaponDebug");

	AWeapon_GetWeaponDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AWeapon::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DisplayDebug");

	AWeapon_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DenyClientWeaponSet
// (Defined, Simulated, Public)

void AWeapon::DenyClientWeaponSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DenyClientWeaponSet");

	AWeapon_DenyClientWeaponSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.IsFiring
// (Defined, Simulated, Event, Public)

void AWeapon::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.IsFiring");

	AWeapon_IsFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ClientWeaponThrown
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AWeapon::ClientWeaponThrown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ClientWeaponThrown");

	AWeapon_ClientWeaponThrown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.CanThrow
// (Defined, Simulated, Public)

void AWeapon::CanThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.CanThrow");

	AWeapon_CanThrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DropFrom
// (Defined, Public)

void AWeapon::DropFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DropFrom");

	AWeapon_DropFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DoOverridePrevWeapon
// (Defined, Simulated, Public)

void AWeapon::DoOverridePrevWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DoOverridePrevWeapon");

	AWeapon_DoOverridePrevWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.DoOverrideNextWeapon
// (Defined, Simulated, Public)

void AWeapon::DoOverrideNextWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.DoOverrideNextWeapon");

	AWeapon_DoOverrideNextWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.HolderDied
// (Defined, Public)

void AWeapon::HolderDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.HolderDied");

	AWeapon_HolderDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.IsActiveWeapon
// (Defined, Simulated, Public)

void AWeapon::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.IsActiveWeapon");

	AWeapon_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.ItemRemovedFromInvManager
// (Defined, Public)

void AWeapon::ItemRemovedFromInvManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.ItemRemovedFromInvManager");

	AWeapon_ItemRemovedFromInvManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Weapon.Destroyed
// (Defined, Simulated, Event, Public)

void AWeapon::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Weapon.Destroyed");

	AWeapon_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.UpdateController
// (Defined, Simulated, Public)

void AInventoryManager::UpdateController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.UpdateController");

	AInventoryManager_UpdateController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ClientSyncWeapon
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AInventoryManager::ClientSyncWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ClientSyncWeapon");

	AInventoryManager_ClientSyncWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ClientWeaponSet
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::ClientWeaponSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ClientWeaponSet");

	AInventoryManager_ClientWeaponSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ChangedWeapon
// (Defined, Simulated, Public)

void AInventoryManager::ChangedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ChangedWeapon");

	AInventoryManager_ChangedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.CancelWeaponChange
// (Defined, Simulated, Public)

void AInventoryManager::CancelWeaponChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.CancelWeaponChange");

	AInventoryManager_CancelWeaponChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.SetPendingWeapon
// (Defined, Simulated, Public)

void AInventoryManager::SetPendingWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.SetPendingWeapon");

	AInventoryManager_SetPendingWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.InternalSetCurrentWeapon
// (Final, Defined, Simulated, Private)

void AInventoryManager::InternalSetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.InternalSetCurrentWeapon");

	AInventoryManager_InternalSetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ServerSetCurrentWeapon
// (Defined, Net, NetReliable, Public, NetServer)

void AInventoryManager::ServerSetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ServerSetCurrentWeapon");

	AInventoryManager_ServerSetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.SetCurrentWeapon
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AInventoryManager::SetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.SetCurrentWeapon");

	AInventoryManager_SetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.NextWeapon
// (Defined, Simulated, Public)

void AInventoryManager::NextWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.NextWeapon");

	AInventoryManager_NextWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.PrevWeapon
// (Defined, Simulated, Public)

void AInventoryManager::PrevWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.PrevWeapon");

	AInventoryManager_PrevWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.SwitchToBestWeapon
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::SwitchToBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.SwitchToBestWeapon");

	AInventoryManager_SwitchToBestWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.GetBestWeapon
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::GetBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.GetBestWeapon");

	AInventoryManager_GetBestWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.GetWeaponRatingFor
// (Defined, Simulated, Public)

void AInventoryManager::GetWeaponRatingFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.GetWeaponRatingFor");

	AInventoryManager_GetWeaponRatingFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.IsActiveWeapon
// (Defined, Simulated, Public)

void AInventoryManager::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.IsActiveWeapon");

	AInventoryManager_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.StopFire
// (Defined, Simulated, Public)

void AInventoryManager::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.StopFire");

	AInventoryManager_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.StartFire
// (Defined, Simulated, Public)

void AInventoryManager::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.StartFire");

	AInventoryManager_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.DrawHUD
// (Defined, Simulated, Public)

void AInventoryManager::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.DrawHUD");

	AInventoryManager_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.OwnerEvent
// (Defined, Simulated, Public)

void AInventoryManager::OwnerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.OwnerEvent");

	AInventoryManager_OwnerEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.OwnerDied
// (Defined, Public)

void AInventoryManager::OwnerDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.OwnerDied");

	AInventoryManager_OwnerDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ModifyDamage
// (Defined, Public)

void AInventoryManager::ModifyDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ModifyDamage");

	AInventoryManager_ModifyDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.DiscardInventory
// (Defined, Simulated, Event, Public, HasDefaults)

void AInventoryManager::DiscardInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.DiscardInventory");

	AInventoryManager_DiscardInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.RemoveClassFromInventory
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::RemoveClassFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.RemoveClassFromInventory");

	AInventoryManager_RemoveClassFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.RemoveFromInventory
// (Defined, Simulated, Public)

void AInventoryManager::RemoveFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.RemoveFromInventory");

	AInventoryManager_RemoveFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.AddInventory
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::AddInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.AddInventory");

	AInventoryManager_AddInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.CreateInventory
// (Defined, Simulated, HasOptionalParms, Public)

void AInventoryManager::CreateInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.CreateInventory");

	AInventoryManager_CreateInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.FindInventoryType
// (Defined, Simulated, Event, HasOptionalParms, Public)

void AInventoryManager::FindInventoryType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.FindInventoryType");

	AInventoryManager_FindInventoryType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.HandlePickupQuery
// (Defined, Public)

void AInventoryManager::HandlePickupQuery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.HandlePickupQuery");

	AInventoryManager_HandlePickupQuery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.Destroyed
// (Defined, Event, Public)

void AInventoryManager::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.Destroyed");

	AInventoryManager_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.SetupFor
// (Defined, Public)

void AInventoryManager::SetupFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.SetupFor");

	AInventoryManager_SetupFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.InventoryActors
// (Final, Iterator, Native, Public, HasOutParms)

void AInventoryManager::InventoryActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.InventoryActors");

	AInventoryManager_InventoryActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ClearAllPendingFire
// (Defined, Simulated, Public)

void AInventoryManager::ClearAllPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ClearAllPendingFire");

	AInventoryManager_ClearAllPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.IsPendingFire
// (Defined, Simulated, Public)

void AInventoryManager::IsPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.IsPendingFire");

	AInventoryManager_IsPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.ClearPendingFire
// (Defined, Simulated, Public)

void AInventoryManager::ClearPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.ClearPendingFire");

	AInventoryManager_ClearPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.SetPendingFire
// (Defined, Simulated, Public)

void AInventoryManager::SetPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.SetPendingFire");

	AInventoryManager_SetPendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.GetPendingFireLength
// (Defined, Simulated, Public)

void AInventoryManager::GetPendingFireLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.GetPendingFireLength");

	AInventoryManager_GetPendingFireLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InventoryManager.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AInventoryManager::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InventoryManager.PostBeginPlay");

	AInventoryManager_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MatineeActor.CheckPriorityRefresh
// (Defined, Public)

void AMatineeActor::CheckPriorityRefresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MatineeActor.CheckPriorityRefresh");

	AMatineeActor_CheckPriorityRefresh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MatineeActor.Update
// (Defined, Event, Public)

void AMatineeActor::Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MatineeActor.Update");

	AMatineeActor_Update_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetDebugAbbrev
// (Defined, Simulated, Event, Public)

void ANavigationPoint::GetDebugAbbrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetDebugAbbrev");

	ANavigationPoint_GetDebugAbbrev_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ANavigationPoint::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.ApplyCheckpointRecord");

	ANavigationPoint_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ANavigationPoint::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.CreateCheckpointRecord");

	ANavigationPoint_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.ShouldSaveForCheckpoint
// (Defined, Public)

void ANavigationPoint::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.ShouldSaveForCheckpoint");

	ANavigationPoint_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.ShutDown
// (Defined, Simulated, Event, Public)

void ANavigationPoint::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.ShutDown");

	ANavigationPoint_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.OnToggle
// (Defined, Public)

void ANavigationPoint::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.OnToggle");

	ANavigationPoint_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.IsOnDifferentNetwork
// (Final, Native, Public)

void ANavigationPoint::IsOnDifferentNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.IsOnDifferentNetwork");

	ANavigationPoint_IsOnDifferentNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetAllNavInRadius
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void ANavigationPoint::STATIC_GetAllNavInRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetAllNavInRadius");

	ANavigationPoint_GetAllNavInRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetNearestNavToPoint
// (Final, Defined, Static, HasOptionalParms, Public)

void ANavigationPoint::STATIC_GetNearestNavToPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetNearestNavToPoint");

	ANavigationPoint_GetNearestNavToPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetNearestNavToActor
// (Final, Defined, Static, HasOptionalParms, Public)

void ANavigationPoint::STATIC_GetNearestNavToActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetNearestNavToActor");

	ANavigationPoint_GetNearestNavToActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.ProceedWithMove
// (Defined, Public)

void ANavigationPoint::ProceedWithMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.ProceedWithMove");

	ANavigationPoint_ProceedWithMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.SuggestMovePreparation
// (Defined, Event, Public)

void ANavigationPoint::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.SuggestMovePreparation");

	ANavigationPoint_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.DetourWeight
// (Event, Public)

void ANavigationPoint::DetourWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.DetourWeight");

	ANavigationPoint_DetourWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.Accept
// (Defined, Event, Public)

void ANavigationPoint::Accept()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.Accept");

	ANavigationPoint_Accept_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.SpecialCost
// (Event, Public)

void ANavigationPoint::SpecialCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.SpecialCost");

	ANavigationPoint_SpecialCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.CanTeleport
// (Native, Public)

void ANavigationPoint::CanTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.CanTeleport");

	ANavigationPoint_CanTeleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.IsUsableAnchorFor
// (Native, Public)

void ANavigationPoint::IsUsableAnchorFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.IsUsableAnchorFor");

	ANavigationPoint_IsUsableAnchorFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetReachSpecTo
// (Final, Native, HasOptionalParms, Public)

void ANavigationPoint::GetReachSpecTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetReachSpecTo");

	ANavigationPoint_GetReachSpecTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationPoint.GetBoundingCylinder
// (Native, Public, HasOutParms)

void ANavigationPoint::GetBoundingCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationPoint.GetBoundingCylinder");

	ANavigationPoint_GetBoundingCylinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pylon.CanReachPylon
// (Native, Public)

void APylon::CanReachPylon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pylon.CanReachPylon");

	APylon_CanReachPylon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pylon.OnToggle
// (Defined, Public)

void APylon::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pylon.OnToggle");

	APylon_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pylon.IsEnabled
// (Defined, Event, Public)

void APylon::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pylon.IsEnabled");

	APylon_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pylon.SetEnabled
// (Defined, Event, Public)

void APylon::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pylon.SetEnabled");

	APylon_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetDebugAbbrev
// (Defined, Simulated, Event, Public)

void ACoverLink::GetDebugAbbrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetDebugAbbrev");

	ACoverLink_GetDebugAbbrev_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetLocationDescription
// (Final, Simulated, Native, Public)

void ACoverLink::GetLocationDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetLocationDescription");

	ACoverLink_GetLocationDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetDebugString
// (Final, Defined, Simulated, Event, Public)

void ACoverLink::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetDebugString");

	ACoverLink_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.AddCoverSlot
// (Final, Native, HasOptionalParms, Public)

void ACoverLink::AddCoverSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.AddCoverSlot");

	ACoverLink_AddCoverSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSwatTurnTarget
// (Defined, Simulated, Public, HasOutParms)

void ACoverLink::GetSwatTurnTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSwatTurnTarget");

	ACoverLink_GetSwatTurnTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.ShutDown
// (Defined, Simulated, Event, Public)

void ACoverLink::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.ShutDown");

	ACoverLink_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ACoverLink::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.ApplyCheckpointRecord");

	ACoverLink_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ACoverLink::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.CreateCheckpointRecord");

	ACoverLink_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.OnToggle
// (Defined, Public)

void ACoverLink::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.OnToggle");

	ACoverLink_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsEnabled
// (Final, Native, Public)

void ACoverLink::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsEnabled");

	ACoverLink_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.AutoAdjustSlot
// (Final, Native, Public)

void ACoverLink::AutoAdjustSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.AutoAdjustSlot");

	ACoverLink_AutoAdjustSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.OnModifyCover
// (Defined, Public)

void ACoverLink::OnModifyCover()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.OnModifyCover");

	ACoverLink_OnModifyCover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.NotifySlotOwnerCoverDisabled
// (Defined, Simulated, Public)

void ACoverLink::NotifySlotOwnerCoverDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.NotifySlotOwnerCoverDisabled");

	ACoverLink_NotifySlotOwnerCoverDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.SetSlotEnabled
// (Defined, Simulated, Event, Public)

void ACoverLink::SetSlotEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.SetSlotEnabled");

	ACoverLink_SetSlotEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.SetDisabled
// (Defined, Simulated, Event, Public)

void ACoverLink::SetDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.SetDisabled");

	ACoverLink_SetDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotActions
// (Final, Native, Public, HasOutParms)

void ACoverLink::GetSlotActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotActions");

	ACoverLink_GetSlotActions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.HasFireLinkTo
// (Native, HasOptionalParms, Public)

void ACoverLink::HasFireLinkTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.HasFireLinkTo");

	ACoverLink_HasFireLinkTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetFireLinkTo
// (Native, Public, HasOutParms)

void ACoverLink::GetFireLinkTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetFireLinkTo");

	ACoverLink_GetFireLinkTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.AllowLeftTransition
// (Final, Defined, Simulated, Public)

void ACoverLink::AllowLeftTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.AllowLeftTransition");

	ACoverLink_AllowLeftTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.AllowRightTransition
// (Final, Defined, Simulated, Public)

void ACoverLink::AllowRightTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.AllowRightTransition");

	ACoverLink_AllowRightTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotIdxToRight
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::GetSlotIdxToRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotIdxToRight");

	ACoverLink_GetSlotIdxToRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotIdxToLeft
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::GetSlotIdxToLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotIdxToLeft");

	ACoverLink_GetSlotIdxToLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsRightEdgeSlot
// (Final, Simulated, Native, Public)

void ACoverLink::IsRightEdgeSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsRightEdgeSlot");

	ACoverLink_IsRightEdgeSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsLeftEdgeSlot
// (Final, Simulated, Native, Public)

void ACoverLink::IsLeftEdgeSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsLeftEdgeSlot");

	ACoverLink_IsLeftEdgeSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsEdgeSlot
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::IsEdgeSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsEdgeSlot");

	ACoverLink_IsEdgeSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.FindSlots
// (Final, Simulated, Native, Public, HasOutParms)

void ACoverLink::FindSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.FindSlots");

	ACoverLink_FindSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsStationarySlot
// (Final, Defined, Simulated, Public)

void ACoverLink::IsStationarySlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsStationarySlot");

	ACoverLink_IsStationarySlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsValidClaim
// (Final, Native, HasOptionalParms, Public)

void ACoverLink::IsValidClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsValidClaim");

	ACoverLink_IsValidClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.UnClaim
// (Final, Defined, Simulated, Event, Public)

void ACoverLink::UnClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.UnClaim");

	ACoverLink_UnClaim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.Claim
// (Final, Defined, Simulated, Event, Public)

void ACoverLink::Claim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.Claim");

	ACoverLink_Claim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.SetInvalidUntil
// (Final, Defined, Simulated, Event, Public)

void ACoverLink::SetInvalidUntil()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.SetInvalidUntil");

	ACoverLink_SetInvalidUntil_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.IsExposedTo
// (Final, Simulated, Native, Public, HasOutParms)

void ACoverLink::IsExposedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.IsExposedTo");

	ACoverLink_IsExposedTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotMarker
// (Final, Simulated, Native, Public)

void ACoverLink::GetSlotMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotMarker");

	ACoverLink_GetSlotMarker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotViewPoint
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::GetSlotViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotViewPoint");

	ACoverLink_GetSlotViewPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotRotation
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::GetSlotRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotRotation");

	ACoverLink_GetSlotRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverLink.GetSlotLocation
// (Final, Simulated, Native, HasOptionalParms, Public)

void ACoverLink::GetSlotLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverLink.GetSlotLocation");

	ACoverLink_GetSlotLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.GetDebugString
// (Final, Defined, Simulated, Event, Public)

void ACoverSlotMarker::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.GetDebugString");

	ACoverSlotMarker_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.GetDebugAbbrev
// (Defined, Simulated, Event, Public)

void ACoverSlotMarker::GetDebugAbbrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.GetDebugAbbrev");

	ACoverSlotMarker_GetDebugAbbrev_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.IsValidClaim
// (Final, Native, HasOptionalParms, Public)

void ACoverSlotMarker::IsValidClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.IsValidClaim");

	ACoverSlotMarker_IsValidClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.SetSlotEnabled
// (Simulated, Native, Public)

void ACoverSlotMarker::SetSlotEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.SetSlotEnabled");

	ACoverSlotMarker_SetSlotEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.GetSlotRotation
// (Simulated, Native, Public)

void ACoverSlotMarker::GetSlotRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.GetSlotRotation");

	ACoverSlotMarker_GetSlotRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverSlotMarker.GetSlotLocation
// (Simulated, Native, Public)

void ACoverSlotMarker::GetSlotLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverSlotMarker.GetSlotLocation");

	ACoverSlotMarker_GetSlotLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.SuggestMovePreparation
// (Defined, Event, Public)

void ADoorMarker::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.SuggestMovePreparation");

	ADoorMarker_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.ProceedWithMove
// (Defined, Public)

void ADoorMarker::ProceedWithMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.ProceedWithMove");

	ADoorMarker_ProceedWithMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.SpecialHandling
// (Defined, Event, Public)

void ADoorMarker::SpecialHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.SpecialHandling");

	ADoorMarker_SpecialHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.MoverClosed
// (Defined, Public)

void ADoorMarker::MoverClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.MoverClosed");

	ADoorMarker_MoverClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.MoverOpened
// (Defined, Public)

void ADoorMarker::MoverOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.MoverOpened");

	ADoorMarker_MoverOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DoorMarker.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ADoorMarker::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DoorMarker.PostBeginPlay");

	ADoorMarker_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Ladder.SuggestMovePreparation
// (Defined, Event, Public)

void ALadder::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Ladder.SuggestMovePreparation");

	ALadder_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftCenter.ProceedWithMove
// (Defined, Public)

void ALiftCenter::ProceedWithMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftCenter.ProceedWithMove");

	ALiftCenter_ProceedWithMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftCenter.SuggestMovePreparation
// (Defined, Event, Public)

void ALiftCenter::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftCenter.SuggestMovePreparation");

	ALiftCenter_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftCenter.SpecialHandling
// (Defined, Event, Public)

void ALiftCenter::SpecialHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftCenter.SpecialHandling");

	ALiftCenter_SpecialHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftCenter.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ALiftCenter::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftCenter.PostBeginPlay");

	ALiftCenter_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftExit.SuggestMovePreparation
// (Defined, Event, Public)

void ALiftExit::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftExit.SuggestMovePreparation");

	ALiftExit_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftExit.WaitForLift
// (Defined, Public)

void ALiftExit::WaitForLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftExit.WaitForLift");

	ALiftExit_WaitForLift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LiftExit.CanBeReachedFromLiftBy
// (Defined, Public)

void ALiftExit::CanBeReachedFromLiftBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LiftExit.CanBeReachedFromLiftBy");

	ALiftExit_CanBeReachedFromLiftBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathNode.GetDebugAbbrev
// (Defined, Simulated, Event, Public)

void APathNode::GetDebugAbbrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathNode.GetDebugAbbrev");

	APathNode_GetDebugAbbrev_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.DelayRespawn
// (Defined, Public)

void APickupFactory::DelayRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.DelayRespawn");

	APickupFactory_DelayRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.Destroyed
// (Defined, Event, Public)

void APickupFactory::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.Destroyed");

	APickupFactory_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SetPickupVisible
// (Defined, Simulated, Public)

void APickupFactory::SetPickupVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SetPickupVisible");

	APickupFactory_SetPickupVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SetPickupHidden
// (Defined, Simulated, Public)

void APickupFactory::SetPickupHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SetPickupHidden");

	APickupFactory_SetPickupHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.RespawnEffect
// (Public)

void APickupFactory::RespawnEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.RespawnEffect");

	APickupFactory_RespawnEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.GetRespawnTime
// (Defined, Public)

void APickupFactory::GetRespawnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.GetRespawnTime");

	APickupFactory_GetRespawnTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.RecheckValidTouch
// (Public)

void APickupFactory::RecheckValidTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.RecheckValidTouch");

	APickupFactory_RecheckValidTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.PickedUpBy
// (Defined, Public)

void APickupFactory::PickedUpBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.PickedUpBy");

	APickupFactory_PickedUpBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.GiveTo
// (Defined, Public)

void APickupFactory::GiveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.GiveTo");

	APickupFactory_GiveTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.ReadyToPickup
// (Defined, Public)

void APickupFactory::ReadyToPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.ReadyToPickup");

	APickupFactory_ReadyToPickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SpawnCopyFor
// (Defined, Public)

void APickupFactory::SpawnCopyFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SpawnCopyFor");

	APickupFactory_SpawnCopyFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.DetourWeight
// (Defined, Event, Public)

void APickupFactory::DetourWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.DetourWeight");

	APickupFactory_DetourWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.StartSleeping
// (Defined, Public)

void APickupFactory::StartSleeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.StartSleeping");

	APickupFactory_StartSleeping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SetRespawn
// (Defined, Public)

void APickupFactory::SetRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SetRespawn");

	APickupFactory_SetRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.CheckForErrors
// (Defined, Public, HasDefaults)

void APickupFactory::CheckForErrors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.CheckForErrors");

	APickupFactory_CheckForErrors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.Reset
// (Defined, Public)

void APickupFactory::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.Reset");

	APickupFactory_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.StaticPrecache
// (Static, Public)

void APickupFactory::STATIC_StaticPrecache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.StaticPrecache");

	APickupFactory_StaticPrecache_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SetPickupMesh
// (Defined, Simulated, Public)

void APickupFactory::SetPickupMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SetPickupMesh");

	APickupFactory_SetPickupMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.ShutDown
// (Defined, Simulated, Public)

void APickupFactory::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.ShutDown");

	APickupFactory_ShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.SetInitialState
// (Defined, Simulated, Event, Public)

void APickupFactory::SetInitialState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.SetInitialState");

	APickupFactory_SetInitialState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.InitializePickup
// (Defined, Simulated, Public)

void APickupFactory::InitializePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.InitializePickup");

	APickupFactory_InitializePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.PreBeginPlay
// (Defined, Simulated, Event, Public)

void APickupFactory::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.PreBeginPlay");

	APickupFactory_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PickupFactory.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void APickupFactory::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PickupFactory.ReplicatedEvent");

	APickupFactory_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerStart.OnToggle
// (Defined, Simulated, Public)

void APlayerStart::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerStart.OnToggle");

	APlayerStart_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalMarker.CanTeleport
// (Native, Public)

void APortalMarker::CanTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalMarker.CanTeleport");

	APortalMarker_CanTeleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AISwitchablePylon.IsEnabled
// (Defined, Event, Public)

void AAISwitchablePylon::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AISwitchablePylon.IsEnabled");

	AAISwitchablePylon_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AISwitchablePylon.SetEnabled
// (Defined, Event, Public)

void AAISwitchablePylon::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AISwitchablePylon.SetEnabled");

	AAISwitchablePylon_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AISwitchablePylon.PostBeginPlay
// (Defined, Simulated, Public)

void AAISwitchablePylon::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AISwitchablePylon.PostBeginPlay");

	AAISwitchablePylon_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicPylon.StoppedMoving
// (Defined, Event, Public)

void ADynamicPylon::StoppedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicPylon.StoppedMoving");

	ADynamicPylon_StoppedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicPylon.StartedMoving
// (Defined, Event, Public)

void ADynamicPylon::StartedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicPylon.StartedMoving");

	ADynamicPylon_StartedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicPylon.FlushDynamicEdges
// (Native, Public)

void ADynamicPylon::FlushDynamicEdges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicPylon.FlushDynamicEdges");

	ADynamicPylon_FlushDynamicEdges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicPylon.RebuildDynamicEdges
// (Native, Public)

void ADynamicPylon::RebuildDynamicEdges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicPylon.RebuildDynamicEdges");

	ADynamicPylon_RebuildDynamicEdges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DynamicPylon.PostBeginPlay
// (Defined, Simulated, Public)

void ADynamicPylon::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DynamicPylon.PostBeginPlay");

	ADynamicPylon_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.SpecialHandling
// (Defined, Event, Public)

void ATeleporter::SpecialHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.SpecialHandling");

	ATeleporter_SpecialHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.PostTouch
// (Defined, Simulated, Event, Public)

void ATeleporter::PostTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.PostTouch");

	ATeleporter_PostTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.Touch
// (Defined, Event, Public)

void ATeleporter::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.Touch");

	ATeleporter_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.Accept
// (Defined, Simulated, Event, Public, HasDefaults)

void ATeleporter::Accept()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.Accept");

	ATeleporter_Accept_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ATeleporter::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.PostBeginPlay");

	ATeleporter_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Teleporter.CanTeleport
// (Native, Public)

void ATeleporter::CanTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Teleporter.CanTeleport");

	ATeleporter_CanTeleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.ApplyFluidSurfaceImpact
// (Defined, Simulated, Public)

void AProjectile::ApplyFluidSurfaceImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.ApplyFluidSurfaceImpact");

	AProjectile_ApplyFluidSurfaceImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.GetRange
// (Defined, Simulated, Static, Public)

void AProjectile::STATIC_GetRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.GetRange");

	AProjectile_GetRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.StaticGetTimeToLocation
// (Defined, Simulated, Static, Public)

void AProjectile::STATIC_StaticGetTimeToLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.StaticGetTimeToLocation");

	AProjectile_StaticGetTimeToLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.GetTimeToLocation
// (Defined, Simulated, Public)

void AProjectile::GetTimeToLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.GetTimeToLocation");

	AProjectile_GetTimeToLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.FellOutOfWorld
// (Defined, Simulated, Event, Public)

void AProjectile::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.FellOutOfWorld");

	AProjectile_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.IsStationary
// (Defined, Public)

void AProjectile::IsStationary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.IsStationary");

	AProjectile_IsStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.RandSpin
// (Final, Defined, Simulated, Public)

void AProjectile::RandSpin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.RandSpin");

	AProjectile_RandSpin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.Explode
// (Defined, Simulated, Public)

void AProjectile::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.Explode");

	AProjectile_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.EncroachedBy
// (Defined, Simulated, Event, Public)

void AProjectile::EncroachedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.EncroachedBy");

	AProjectile_EncroachedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.HitWall
// (Defined, Singular, Simulated, Event, Public)

void AProjectile::HitWall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.HitWall");

	AProjectile_HitWall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.ProcessTouch
// (Defined, Simulated, Public)

void AProjectile::ProcessTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.ProcessTouch");

	AProjectile_ProcessTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.Touch
// (Defined, Singular, Simulated, Event, Public)

void AProjectile::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.Touch");

	AProjectile_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.HurtRadius
// (Defined, Simulated, HasOptionalParms, Public)

void AProjectile::HurtRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.HurtRadius");

	AProjectile_HurtRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.Reset
// (Defined, Public)

void AProjectile::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.Reset");

	AProjectile_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.CanSplash
// (Defined, Simulated, Public)

void AProjectile::CanSplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.CanSplash");

	AProjectile_CanSplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.GetTeamNum
// (Simulated, Native, Public)

void AProjectile::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.GetTeamNum");

	AProjectile_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.Init
// (Defined, Public)

void AProjectile::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.Init");

	AProjectile_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.Destroyed
// (Defined, Simulated, Public)

void AProjectile::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.Destroyed");

	AProjectile_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AProjectile::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.PostBeginPlay");

	AProjectile_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.PreBeginPlay
// (Defined, Event, Public)

void AProjectile::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.PreBeginPlay");

	AProjectile_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Projectile.EncroachingOn
// (Defined, Event, Public)

void AProjectile::EncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Projectile.EncroachingOn");

	AProjectile_EncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCaptureActor.OnToggle
// (Defined, Simulated, Public)

void ASceneCaptureActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCaptureActor.OnToggle");

	ASceneCaptureActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalTeleporter.StopsProjectile
// (Defined, Simulated, Public)

void APortalTeleporter::StopsProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalTeleporter.StopsProjectile");

	APortalTeleporter_StopsProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalTeleporter.CreatePortalTexture
// (Final, Native, Public)

void APortalTeleporter::CreatePortalTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalTeleporter.CreatePortalTexture");

	APortalTeleporter_CreatePortalTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalTeleporter.TransformHitLocation
// (Final, Native, Public)

void APortalTeleporter::TransformHitLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalTeleporter.TransformHitLocation");

	APortalTeleporter_TransformHitLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalTeleporter.TransformVectorDir
// (Final, Native, Public)

void APortalTeleporter::TransformVectorDir()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalTeleporter.TransformVectorDir");

	APortalTeleporter_TransformVectorDir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PortalTeleporter.TransformActor
// (Final, Native, Public)

void APortalTeleporter::TransformActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PortalTeleporter.TransformActor");

	APortalTeleporter_TransformActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshActor.PreBeginPlay
// (Event, Public)

void AStaticMeshActor::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshActor.PreBeginPlay");

	AStaticMeshActor_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent
// (Defined, Simulated, Public)

void AStaticMeshActorBasedOnExtremeContent::SetMaterialBasedOnExtremeContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent");

	AStaticMeshActorBasedOnExtremeContent_SetMaterialBasedOnExtremeContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshActorBasedOnExtremeContent.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AStaticMeshActorBasedOnExtremeContent::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshActorBasedOnExtremeContent.PostBeginPlay");

	AStaticMeshActorBasedOnExtremeContent_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ATrigger::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.ApplyCheckpointRecord");

	ATrigger_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ATrigger::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.CreateCheckpointRecord");

	ATrigger_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.ShouldSaveForCheckpoint
// (Defined, Public)

void ATrigger::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.ShouldSaveForCheckpoint");

	ATrigger_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.StopsProjectile
// (Defined, Simulated, Public)

void ATrigger::StopsProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.StopsProjectile");

	ATrigger_StopsProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.UnTrigger
// (Defined, Public)

void ATrigger::UnTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.UnTrigger");

	ATrigger_UnTrigger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.NotifyTriggered
// (Defined, Public)

void ATrigger::NotifyTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.NotifyTriggered");

	ATrigger_NotifyTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger.Touch
// (Defined, Event, Public)

void ATrigger::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger.Touch");

	ATrigger_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ActorComponent.DetachFromAny
// (Final, Native, Public)

void UActorComponent::DetachFromAny()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ActorComponent.DetachFromAny");

	UActorComponent_DetachFromAny_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ActorComponent.ForceUpdate
// (Final, Native, Public)

void UActorComponent::ForceUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ActorComponent.ForceUpdate");

	UActorComponent_ForceUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ActorComponent.SetComponentRBFixed
// (Final, Native, Public)

void UActorComponent::SetComponentRBFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ActorComponent.SetComponentRBFixed");

	UActorComponent_SetComponentRBFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ActorComponent.SetTickGroup
// (Final, Native, Public)

void UActorComponent::SetTickGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ActorComponent.SetTickGroup");

	UActorComponent_SetTickGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.OcclusionChanged
// (Defined, Event, Public)

void UAudioComponent::OcclusionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.OcclusionChanged");

	UAudioComponent_OcclusionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.OnQueueSubtitles
// (Public, Delegate)

void UAudioComponent::OnQueueSubtitles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.OnQueueSubtitles");

	UAudioComponent_OnQueueSubtitles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.OnAudioFinished
// (Public, Delegate)

void UAudioComponent::OnAudioFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.OnAudioFinished");

	UAudioComponent_OnAudioFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.ResetToDefaults
// (Final, Native, Public)

void UAudioComponent::ResetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.ResetToDefaults");

	UAudioComponent_ResetToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.SetWaveParameter
// (Final, Native, Public)

void UAudioComponent::SetWaveParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.SetWaveParameter");

	UAudioComponent_SetWaveParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.SetFloatParameter
// (Final, Native, Public)

void UAudioComponent::SetFloatParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.SetFloatParameter");

	UAudioComponent_SetFloatParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.AdjustVolume
// (Final, Native, Public)

void UAudioComponent::AdjustVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.AdjustVolume");

	UAudioComponent_AdjustVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.FadeOut
// (Final, Native, Public)

void UAudioComponent::FadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.FadeOut");

	UAudioComponent_FadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.FadeIn
// (Final, Native, Public)

void UAudioComponent::FadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.FadeIn");

	UAudioComponent_FadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.IsPlaying
// (Final, Native, Public)

void UAudioComponent::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.IsPlaying");

	UAudioComponent_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.Stop
// (Final, Native, Public)

void UAudioComponent::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.Stop");

	UAudioComponent_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioComponent.Play
// (Final, Native, Public)

void UAudioComponent::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioComponent.Play");

	UAudioComponent_Play_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HeightFogComponent.SetEnabled
// (Final, Native, Public)

void UHeightFogComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HeightFogComponent.SetEnabled");

	UHeightFogComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightEnvironmentComponent.IsEnabled
// (Final, Native, Public)

void ULightEnvironmentComponent::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightEnvironmentComponent.IsEnabled");

	ULightEnvironmentComponent_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightEnvironmentComponent.SetEnabled
// (Final, Native, Public)

void ULightEnvironmentComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightEnvironmentComponent.SetEnabled");

	ULightEnvironmentComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightComponent.UpdateColorAndBrightness
// (Final, Native, Public)

void ULightComponent::UpdateColorAndBrightness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightComponent.UpdateColorAndBrightness");

	ULightComponent_UpdateColorAndBrightness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightComponent.GetDirection
// (Final, Native, Public)

void ULightComponent::GetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightComponent.GetDirection");

	ULightComponent_GetDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightComponent.GetOrigin
// (Final, Native, Public)

void ULightComponent::GetOrigin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightComponent.GetOrigin");

	ULightComponent_GetOrigin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightComponent.SetLightProperties
// (Final, Native, HasOptionalParms, Public)

void ULightComponent::SetLightProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightComponent.SetLightProperties");

	ULightComponent_SetLightProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LightComponent.SetEnabled
// (Final, Native, Public)

void ULightComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LightComponent.SetEnabled");

	ULightComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.ClosestPointOnComponentToComponent
// (Native, Public, HasOutParms)

void UPrimitiveComponent::ClosestPointOnComponentToComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.ClosestPointOnComponentToComponent");

	UPrimitiveComponent_ClosestPointOnComponentToComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.ClosestPointOnComponentToPoint
// (Native, Public, HasOutParms)

void UPrimitiveComponent::ClosestPointOnComponentToPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.ClosestPointOnComponentToPoint");

	UPrimitiveComponent_ClosestPointOnComponentToPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.GetRotation
// (Final, Native, Public)

void UPrimitiveComponent::GetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.GetRotation");

	UPrimitiveComponent_GetRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.GetPosition
// (Final, Defined, Public, HasDefaults)

void UPrimitiveComponent::GetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.GetPosition");

	UPrimitiveComponent_GetPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetAbsolute
// (Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetAbsolute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetAbsolute");

	UPrimitiveComponent_SetAbsolute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetTransform
// (Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetTransform");

	UPrimitiveComponent_SetTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetScale3D
// (Native, Public)

void UPrimitiveComponent::SetScale3D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetScale3D");

	UPrimitiveComponent_SetScale3D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetScale
// (Native, Public)

void UPrimitiveComponent::SetScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetScale");

	UPrimitiveComponent_SetScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRotation
// (Native, Public)

void UPrimitiveComponent::SetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRotation");

	UPrimitiveComponent_SetRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetTranslation
// (Native, Public)

void UPrimitiveComponent::SetTranslation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetTranslation");

	UPrimitiveComponent_SetTranslation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetActorCollision
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetActorCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetActorCollision");

	UPrimitiveComponent_SetActorCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetTraceBlocking
// (Final, Native, Public)

void UPrimitiveComponent::SetTraceBlocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetTraceBlocking");

	UPrimitiveComponent_SetTraceBlocking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetViewOwnerDepthPriorityGroup
// (Final, Native, Public)

void UPrimitiveComponent::SetViewOwnerDepthPriorityGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetViewOwnerDepthPriorityGroup");

	UPrimitiveComponent_SetViewOwnerDepthPriorityGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetDepthPriorityGroup
// (Final, Native, Public)

void UPrimitiveComponent::SetDepthPriorityGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetDepthPriorityGroup");

	UPrimitiveComponent_SetDepthPriorityGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetLightingChannels
// (Final, Native, Public)

void UPrimitiveComponent::SetLightingChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetLightingChannels");

	UPrimitiveComponent_SetLightingChannels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetCullDistance
// (Final, Native, Public)

void UPrimitiveComponent::SetCullDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetCullDistance");

	UPrimitiveComponent_SetCullDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetLightEnvironment
// (Final, Native, Public)

void UPrimitiveComponent::SetLightEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetLightEnvironment");

	UPrimitiveComponent_SetLightEnvironment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetShadowParent
// (Final, Native, Public)

void UPrimitiveComponent::SetShadowParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetShadowParent");

	UPrimitiveComponent_SetShadowParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetIgnoreOwnerHidden
// (Final, Native, Public)

void UPrimitiveComponent::SetIgnoreOwnerHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetIgnoreOwnerHidden");

	UPrimitiveComponent_SetIgnoreOwnerHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
// (Final, Native, Public)

void UPrimitiveComponent::SetOnlyOwnerSee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetOnlyOwnerSee");

	UPrimitiveComponent_SetOnlyOwnerSee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetOwnerNoSee
// (Final, Native, Public)

void UPrimitiveComponent::SetOwnerNoSee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetOwnerNoSee");

	UPrimitiveComponent_SetOwnerNoSee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetHidden
// (Final, Native, Public)

void UPrimitiveComponent::SetHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetHidden");

	UPrimitiveComponent_SetHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBDominanceGroup
// (Final, Native, Public)

void UPrimitiveComponent::SetRBDominanceGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBDominanceGroup");

	UPrimitiveComponent_SetRBDominanceGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.GetRootBodyInstance
// (Final, Native, Public)

void UPrimitiveComponent::GetRootBodyInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.GetRootBodyInstance");

	UPrimitiveComponent_GetRootBodyInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
// (Final, Native, Public)

void UPrimitiveComponent::SetPhysMaterialOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetPhysMaterialOverride");

	UPrimitiveComponent_SetPhysMaterialOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.InitRBPhys
// (Final, Native, Public)

void UPrimitiveComponent::InitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.InitRBPhys");

	UPrimitiveComponent_InitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
// (Final, Native, Public)

void UPrimitiveComponent::SetNotifyRigidBodyCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision");

	UPrimitiveComponent_SetNotifyRigidBodyCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBChannel
// (Final, Native, Public)

void UPrimitiveComponent::SetRBChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBChannel");

	UPrimitiveComponent_SetRBChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBCollisionChannels
// (Final, Native, Public)

void UPrimitiveComponent::SetRBCollisionChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBCollisionChannels");

	UPrimitiveComponent_SetRBCollisionChannels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBCollidesWithChannel
// (Final, Native, Public)

void UPrimitiveComponent::SetRBCollidesWithChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBCollidesWithChannel");

	UPrimitiveComponent_SetRBCollidesWithChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetBlockRigidBody
// (Final, Native, Public)

void UPrimitiveComponent::SetBlockRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetBlockRigidBody");

	UPrimitiveComponent_SetBlockRigidBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.RigidBodyIsAwake
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::RigidBodyIsAwake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.RigidBodyIsAwake");

	UPrimitiveComponent_RigidBodyIsAwake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::PutRigidBodyToSleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.PutRigidBodyToSleep");

	UPrimitiveComponent_PutRigidBodyToSleep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.WakeRigidBody
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::WakeRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.WakeRigidBody");

	UPrimitiveComponent_WakeRigidBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBRotation
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetRBRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBRotation");

	UPrimitiveComponent_SetRBRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBPosition
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetRBPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBPosition");

	UPrimitiveComponent_SetRBPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.RetardRBLinearVelocity
// (Final, Native, Public)

void UPrimitiveComponent::RetardRBLinearVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.RetardRBLinearVelocity");

	UPrimitiveComponent_RetardRBLinearVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBAngularVelocity
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetRBAngularVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBAngularVelocity");

	UPrimitiveComponent_SetRBAngularVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.SetRBLinearVelocity
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::SetRBLinearVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.SetRBLinearVelocity");

	UPrimitiveComponent_SetRBLinearVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.AddTorque
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::AddTorque()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.AddTorque");

	UPrimitiveComponent_AddTorque_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.AddRadialForce
// (Final, Native, Public)

void UPrimitiveComponent::AddRadialForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.AddRadialForce");

	UPrimitiveComponent_AddRadialForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.AddForce
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::AddForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.AddForce");

	UPrimitiveComponent_AddForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.AddRadialImpulse
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::AddRadialImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.AddRadialImpulse");

	UPrimitiveComponent_AddRadialImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrimitiveComponent.AddImpulse
// (Final, Native, HasOptionalParms, Public)

void UPrimitiveComponent::AddImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrimitiveComponent.AddImpulse");

	UPrimitiveComponent_AddImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CylinderComponent.SetCylinderSize
// (Final, Native, Public)

void UCylinderComponent::SetCylinderSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CylinderComponent.SetCylinderSize");

	UCylinderComponent_SetCylinderSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.CreateAndSetMaterialInstanceTimeVarying
// (Defined, Public)

void UMeshComponent::CreateAndSetMaterialInstanceTimeVarying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.CreateAndSetMaterialInstanceTimeVarying");

	UMeshComponent_CreateAndSetMaterialInstanceTimeVarying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.CreateAndSetMaterialInstanceConstant
// (Defined, Public)

void UMeshComponent::CreateAndSetMaterialInstanceConstant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.CreateAndSetMaterialInstanceConstant");

	UMeshComponent_CreateAndSetMaterialInstanceConstant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.PrestreamTextures
// (Final, Native, Public)

void UMeshComponent::PrestreamTextures()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.PrestreamTextures");

	UMeshComponent_PrestreamTextures_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.GetNumElements
// (Native, Public)

void UMeshComponent::GetNumElements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.GetNumElements");

	UMeshComponent_GetNumElements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.SetMaterial
// (Native, Public)

void UMeshComponent::SetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.SetMaterial");

	UMeshComponent_SetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MeshComponent.GetMaterial
// (Native, Public)

void UMeshComponent::GetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MeshComponent.GetMaterial");

	UMeshComponent_GetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshComponent.SetForceStaticDecals
// (Final, Native, Public)

void UStaticMeshComponent::SetForceStaticDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshComponent.SetForceStaticDecals");

	UStaticMeshComponent_SetForceStaticDecals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshComponent.DisableRBCollisionWithSMC
// (Simulated, Native, Public)

void UStaticMeshComponent::DisableRBCollisionWithSMC()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshComponent.DisableRBCollisionWithSMC");

	UStaticMeshComponent_DisableRBCollisionWithSMC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StaticMeshComponent.SetStaticMesh
// (Simulated, Native, HasOptionalParms, Public)

void UStaticMeshComponent::SetStaticMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StaticMeshComponent.SetStaticMesh");

	UStaticMeshComponent_SetStaticMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpriteComponent.SetSpriteAndUV
// (Simulated, Native, Public)

void USpriteComponent::SetSpriteAndUV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpriteComponent.SetSpriteAndUV");

	USpriteComponent_SetSpriteAndUV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpriteComponent.SetUV
// (Simulated, Native, Public)

void USpriteComponent::SetUV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpriteComponent.SetUV");

	USpriteComponent_SetUV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpriteComponent.SetSprite
// (Simulated, Native, Public)

void USpriteComponent::SetSprite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpriteComponent.SetSprite");

	USpriteComponent_SetSprite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurOpacity
// (Defined, Public)

void URadialBlurComponent::OnUpdatePropertyBlurOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.OnUpdatePropertyBlurOpacity");

	URadialBlurComponent_OnUpdatePropertyBlurOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurFalloffExponent
// (Defined, Public)

void URadialBlurComponent::OnUpdatePropertyBlurFalloffExponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.OnUpdatePropertyBlurFalloffExponent");

	URadialBlurComponent_OnUpdatePropertyBlurFalloffExponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurScale
// (Defined, Public)

void URadialBlurComponent::OnUpdatePropertyBlurScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.OnUpdatePropertyBlurScale");

	URadialBlurComponent_OnUpdatePropertyBlurScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.SetEnabled
// (Native, Public)

void URadialBlurComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.SetEnabled");

	URadialBlurComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.SetBlurOpacity
// (Native, Public)

void URadialBlurComponent::SetBlurOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.SetBlurOpacity");

	URadialBlurComponent_SetBlurOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.SetBlurFalloffExponent
// (Native, Public)

void URadialBlurComponent::SetBlurFalloffExponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.SetBlurFalloffExponent");

	URadialBlurComponent_SetBlurFalloffExponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.SetBlurScale
// (Native, Public)

void URadialBlurComponent::SetBlurScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.SetBlurScale");

	URadialBlurComponent_SetBlurScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RadialBlurComponent.SetMaterial
// (Native, Public)

void URadialBlurComponent::SetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RadialBlurComponent.SetMaterial");

	URadialBlurComponent_SetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCaptureComponent.SetEnabled
// (Final, Simulated, Native, Public)

void USceneCaptureComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCaptureComponent.SetEnabled");

	USceneCaptureComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCaptureComponent.NeedsUpdate
// (Final, Defined, Simulated, Public)

void USceneCaptureComponent::NeedsUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCaptureComponent.NeedsUpdate");

	USceneCaptureComponent_NeedsUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCaptureComponent.SetFrameRate
// (Final, Native, Public)

void USceneCaptureComponent::SetFrameRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCaptureComponent.SetFrameRate");

	USceneCaptureComponent_SetFrameRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCapture2DComponent.SetView
// (Final, Native, Public)

void USceneCapture2DComponent::SetView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCapture2DComponent.SetView");

	USceneCapture2DComponent_SetView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCapture2DComponent.SetCaptureParameters
// (Final, Native, HasOptionalParms, Public)

void USceneCapture2DComponent::SetCaptureParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCapture2DComponent.SetCaptureParameters");

	USceneCapture2DComponent_SetCaptureParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCapture2DHitMaskComponent.SetCaptureParameters
// (Final, Native, Public)

void USceneCapture2DHitMaskComponent::SetCaptureParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCapture2DHitMaskComponent.SetCaptureParameters");

	USceneCapture2DHitMaskComponent_SetCaptureParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCapture2DHitMaskComponent.SetCaptureTargetTexture
// (Final, Native, Public)

void USceneCapture2DHitMaskComponent::SetCaptureTargetTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCapture2DHitMaskComponent.SetCaptureTargetTexture");

	USceneCapture2DHitMaskComponent_SetCaptureTargetTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneCapturePortalComponent.SetCaptureParameters
// (Final, Native, HasOptionalParms, Public)

void USceneCapturePortalComponent::SetCaptureParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneCapturePortalComponent.SetCaptureParameters");

	USceneCapturePortalComponent_SetCaptureParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ActorFactory.PostCreateActor
// (Simulated, Event, Public)

void UActorFactory::PostCreateActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ActorFactory.PostCreateActor");

	UActorFactory_PostCreateActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetTargetingTeam
// (Public)

void AController::GetTargetingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetTargetingTeam");

	AController_GetTargetingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetSpreadValue
// (Defined, Event, Public)

void AController::GetSpreadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetSpreadValue");

	AController_GetSpreadValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InterpolationFinished
// (Defined, Simulated, Event, Public)

void AController::InterpolationFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InterpolationFinished");

	AController_InterpolationFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InterpolationStarted
// (Defined, Simulated, Event, Public)

void AController::InterpolationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InterpolationStarted");

	AController_InterpolationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetDestinationOffset
// (Public)

void AController::GetDestinationOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetDestinationOffset");

	AController_GetDestinationOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InitNavigationHandle
// (Defined, Public)

void AController::InitNavigationHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InitNavigationHandle");

	AController_InitNavigationHandle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ReadyForLift
// (Public)

void AController::ReadyForLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ReadyForLift");

	AController_ReadyForLift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SendMessage
// (HasOptionalParms, Public)

void AController::SendMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SendMessage");

	AController_SendMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.CurrentLevelUnloaded
// (Event, Public)

void AController::CurrentLevelUnloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.CurrentLevelUnloaded");

	AController_CurrentLevelUnloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetRouteGoalAfter
// (Defined, Public)

void AController::GetRouteGoalAfter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetRouteGoalAfter");

	AController_GetRouteGoalAfter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.IsInCombat
// (Event, HasOptionalParms, Public)

void AController::IsInCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.IsInCombat");

	AController_IsInCombat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.IsSpectating
// (Defined, Event, Public)

void AController::IsSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.IsSpectating");

	AController_IsSpectating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnToggleHidden
// (Defined, Simulated, Public)

void AController::OnToggleHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnToggleHidden");

	AController_OnToggleHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyAddInventory
// (Public)

void AController::NotifyAddInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyAddInventory");

	AController_NotifyAddInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnModifyHealth
// (Defined, Simulated, Public)

void AController::OnModifyHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnModifyHealth");

	AController_OnModifyHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyCoverClaimViolation
// (Simulated, Public)

void AController::NotifyCoverClaimViolation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyCoverClaimViolation");

	AController_NotifyCoverClaimViolation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyCoverAdjusted
// (Simulated, Event, Public)

void AController::NotifyCoverAdjusted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyCoverAdjusted");

	AController_NotifyCoverAdjusted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyCoverDisabled
// (Simulated, HasOptionalParms, Public)

void AController::NotifyCoverDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyCoverDisabled");

	AController_NotifyCoverDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnSetVelocity
// (Defined, Simulated, Public)

void AController::OnSetVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnSetVelocity");

	AController_OnSetVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnSetPhysics
// (Defined, Simulated, Public)

void AController::OnSetPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnSetPhysics");

	AController_OnSetPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnToggleAffectedByHitEffects
// (Defined, Public)

void AController::OnToggleAffectedByHitEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnToggleAffectedByHitEffects");

	AController_OnToggleAffectedByHitEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnToggleGodMode
// (Defined, Public)

void AController::OnToggleGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnToggleGodMode");

	AController_OnToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnTeleport
// (Defined, Simulated, Public)

void AController::OnTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnTeleport");

	AController_OnTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.IsDead
// (Public)

void AController::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.IsDead");

	AController_IsDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetHumanReadableName
// (Defined, Simulated, Public)

void AController::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetHumanReadableName");

	AController_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AController::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.DisplayDebug");

	AController_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.StopLatentExecution
// (Final, Native, Public)

void AController::StopLatentExecution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.StopLatentExecution");

	AController_StopLatentExecution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InLatentExecution
// (Final, Native, Public)

void AController::InLatentExecution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InLatentExecution");

	AController_InLatentExecution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ReachedPreciseDestination
// (Event, Public)

void AController::ReachedPreciseDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ReachedPreciseDestination");

	AController_ReachedPreciseDestination_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyMissedJump
// (Event, Public)

void AController::NotifyMissedJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyMissedJump");

	AController_NotifyMissedJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyJumpApex
// (Event, Public)

void AController::NotifyJumpApex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyJumpApex");

	AController_NotifyJumpApex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyBump
// (Event, Public)

void AController::NotifyBump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyBump");

	AController_NotifyBump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyFallingHitWall
// (Event, Public)

void AController::NotifyFallingHitWall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyFallingHitWall");

	AController_NotifyFallingHitWall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyHitWall
// (Event, Public)

void AController::NotifyHitWall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyHitWall");

	AController_NotifyHitWall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyLanded
// (Event, Public)

void AController::NotifyLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyLanded");

	AController_NotifyLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyHeadVolumeChange
// (Event, Public)

void AController::NotifyHeadVolumeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyHeadVolumeChange");

	AController_NotifyHeadVolumeChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyPhysicsVolumeChange
// (Event, Public)

void AController::NotifyPhysicsVolumeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyPhysicsVolumeChange");

	AController_NotifyPhysicsVolumeChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.LandingShake
// (Defined, Simulated, Public)

void AController::LandingShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.LandingShake");

	AController_LandingShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.IsAimingAt
// (Defined, Simulated, Public, HasDefaults)

void AController::IsAimingAt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.IsAimingAt");

	AController_IsAimingAt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetActorEyesViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void AController::GetActorEyesViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetActorEyesViewPoint");

	AController_GetActorEyesViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetPlayerViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void AController::GetPlayerViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetPlayerViewPoint");

	AController_GetPlayerViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.HandlePathObstruction
// (Event, Public)

void AController::HandlePathObstruction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.HandlePathObstruction");

	AController_HandlePathObstruction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.UnderLift
// (Public)

void AController::UnderLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.UnderLift");

	AController_UnderLift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MoverFinished
// (Defined, Event, Public)

void AController::MoverFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MoverFinished");

	AController_MoverFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.WaitForMover
// (Defined, Public)

void AController::WaitForMover()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.WaitForMover");

	AController_WaitForMover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.AllowDetourTo
// (Defined, Event, Public)

void AController::AllowDetourTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.AllowDetourTo");

	AController_AllowDetourTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MayFall
// (Event, Public)

void AController::MayFall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MayFall");

	AController_MayFall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.EndClimbLadder
// (Native, Public)

void AController::EndClimbLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.EndClimbLadder");

	AController_EndClimbLadder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.LongFall
// (Event, Public)

void AController::LongFall()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.LongFall");

	AController_LongFall_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.WaitForLanding
// (Final, Latent, Native, HasOptionalParms, Public)

void AController::WaitForLanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.WaitForLanding");

	AController_WaitForLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PickWallAdjust
// (Final, Native, Public)

void AController::PickWallAdjust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PickWallAdjust");

	AController_PickWallAdjust_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MoveUnreachable
// (Event, Public)

void AController::MoveUnreachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MoveUnreachable");

	AController_MoveUnreachable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ActorReachable
// (Final, Native, Public)

void AController::ActorReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ActorReachable");

	AController_ActorReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PointReachable
// (Final, Native, Public)

void AController::PointReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PointReachable");

	AController_PointReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FindPathToIntercept
// (Final, Native, HasOptionalParms, Public)

void AController::FindPathToIntercept()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FindPathToIntercept");

	AController_FindPathToIntercept_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FindRandomDest
// (Final, Native, Public)

void AController::FindRandomDest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FindRandomDest");

	AController_FindRandomDest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FindPathTowardNearest
// (Final, Native, HasOptionalParms, Public)

void AController::FindPathTowardNearest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FindPathTowardNearest");

	AController_FindPathTowardNearest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FindPathToward
// (Final, Native, HasOptionalParms, Public)

void AController::FindPathToward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FindPathToward");

	AController_FindPathToward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FindPathTo
// (Final, Native, HasOptionalParms, Public)

void AController::FindPathTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FindPathTo");

	AController_FindPathTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FinishRotation
// (Final, Latent, Native, Public)

void AController::FinishRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FinishRotation");

	AController_FinishRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetupSpecialPathAbilities
// (Event, Public)

void AController::SetupSpecialPathAbilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetupSpecialPathAbilities");

	AController_SetupSpecialPathAbilities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MoveToward
// (Final, Latent, Native, HasOptionalParms, Public)

void AController::MoveToward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MoveToward");

	AController_MoveToward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MoveToDirectNonPathPos
// (Final, Latent, Native, HasOptionalParms, Public)

void AController::MoveToDirectNonPathPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MoveToDirectNonPathPos");

	AController_MoveToDirectNonPathPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.MoveTo
// (Final, Latent, Native, HasOptionalParms, Public)

void AController::MoveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.MoveTo");

	AController_MoveTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.EnemyNotVisible
// (Event, Public)

void AController::EnemyNotVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.EnemyNotVisible");

	AController_EnemyNotVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SeeMonster
// (Event, Public)

void AController::SeeMonster()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SeeMonster");

	AController_SeeMonster_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SeePlayer
// (Event, Public)

void AController::SeePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SeePlayer");

	AController_SeePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.HearNoise
// (Event, HasOptionalParms, Public)

void AController::HearNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.HearNoise");

	AController_HearNoise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PickTarget
// (Final, Native, Public, HasOutParms)

void AController::PickTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PickTarget");

	AController_PickTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.CanSeeByPoints
// (Final, Native, Public)

void AController::CanSeeByPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.CanSeeByPoints");

	AController_CanSeeByPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.CanSee
// (Final, Native, Public)

void AController::CanSee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.CanSee");

	AController_CanSee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.LineOfSightTo
// (Final, Native, HasOptionalParms, Public)

void AController::LineOfSightTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.LineOfSightTo");

	AController_LineOfSightTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyChangedWeapon
// (Public)

void AController::NotifyChangedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyChangedWeapon");

	AController_NotifyChangedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ClientSetWeapon
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AController::ClientSetWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ClientSetWeapon");

	AController_ClientSetWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ClientSwitchToBestWeapon
// (Defined, Net, NetReliable, Simulated, HasOptionalParms, Public, NetClient)

void AController::ClientSwitchToBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ClientSwitchToBestWeapon");

	AController_ClientSwitchToBestWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SwitchToBestWeapon
// (Defined, Exec, HasOptionalParms, Public)

void AController::SwitchToBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SwitchToBestWeapon");

	AController_SwitchToBestWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ReceiveProjectileWarning
// (Public)

void AController::ReceiveProjectileWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ReceiveProjectileWarning");

	AController_ReceiveProjectileWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ReceiveWarning
// (Public)

void AController::ReceiveWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ReceiveWarning");

	AController_ReceiveWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InstantWarnTarget
// (Defined, Public)

void AController::InstantWarnTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InstantWarnTarget");

	AController_InstantWarnTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetAdjustedAimFor
// (Defined, Public)

void AController::GetAdjustedAimFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetAdjustedAimFor");

	AController_GetAdjustedAimFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.HandlePickup
// (Public)

void AController::HandlePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.HandlePickup");

	AController_HandlePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RoundHasEnded
// (Defined, HasOptionalParms, Public)

void AController::RoundHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RoundHasEnded");

	AController_RoundHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.StopFiring
// (Defined, Event, Public)

void AController::StopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.StopFiring");

	AController_StopFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FireWeaponAt
// (Public)

void AController::FireWeaponAt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FireWeaponAt");

	AController_FireWeaponAt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RatePickup
// (Event, Public)

void AController::RatePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RatePickup");

	AController_RatePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.WarnProjExplode
// (Public)

void AController::WarnProjExplode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.WarnProjExplode");

	AController_WarnProjExplode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyProjLanded
// (Defined, Public)

void AController::NotifyProjLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyProjLanded");

	AController_NotifyProjLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyKilled
// (Defined, Public)

void AController::NotifyKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyKilled");

	AController_NotifyKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GameHasEnded
// (Defined, HasOptionalParms, Public)

void AController::GameHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GameHasEnded");

	AController_GameHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetCharacter
// (Public)

void AController::SetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetCharacter");

	AController_SetCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ServerGivePawn
// (Public)

void AController::ServerGivePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ServerGivePawn");

	AController_ServerGivePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ServerRestartPlayer
// (Defined, Net, NetReliable, Public, NetServer)

void AController::ServerRestartPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ServerRestartPlayer");

	AController_ServerRestartPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetTeamNum
// (Simulated, Native, Public)

void AController::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetTeamNum");

	AController_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.InitPlayerReplicationInfo
// (Defined, Public)

void AController::InitPlayerReplicationInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.InitPlayerReplicationInfo");

	AController_InitPlayerReplicationInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyTakeHit
// (Public)

void AController::NotifyTakeHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyTakeHit");

	AController_NotifyTakeHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.EnemyJustTeleported
// (Defined, Public)

void AController::EnemyJustTeleported()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.EnemyJustTeleported");

	AController_EnemyJustTeleported_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.BeyondFogDistance
// (Final, Native, Public)

void AController::BeyondFogDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.BeyondFogDistance");

	AController_BeyondFogDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.Restart
// (Defined, Public)

void AController::Restart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.Restart");

	AController_Restart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.CleanupPRI
// (Defined, Public)

void AController::CleanupPRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.CleanupPRI");

	AController_CleanupPRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.Destroyed
// (Defined, Event, Public)

void AController::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.Destroyed");

	AController_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyPostLanded
// (Event, Public)

void AController::NotifyPostLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyPostLanded");

	AController_NotifyPostLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GamePlayEndedState
// (Defined, Public)

void AController::GamePlayEndedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GamePlayEndedState");

	AController_GamePlayEndedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PawnDied
// (Defined, Public)

void AController::PawnDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PawnDied");

	AController_PawnDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.UnPossess
// (Defined, Event, Public)

void AController::UnPossess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.UnPossess");

	AController_UnPossess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.UpdateSex
// (Defined, Public)

void AController::UpdateSex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.UpdateSex");

	AController_UpdateSex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.Possess
// (Defined, Event, Public)

void AController::Possess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.Possess");

	AController_Possess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.OnPossess
// (Defined, Public)

void AController::OnPossess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.OnPossess");

	AController_OnPossess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AController::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ReplicatedEvent");

	AController_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ClientSetRotation
// (Defined, Net, NetReliable, Simulated, HasOptionalParms, Public, NetClient)

void AController::ClientSetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ClientSetRotation");

	AController_ClientSetRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.ClientSetLocation
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void AController::ClientSetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.ClientSetLocation");

	AController_ClientSetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.Reset
// (Defined, Public)

void AController::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.Reset");

	AController_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AController::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PostBeginPlay");

	AController_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetSkelControlScale
// (Defined, Event, Public)

void AController::SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetSkelControlScale");

	AController_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetMorphWeight
// (Defined, Event, Public)

void AController::SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetMorphWeight");

	AController_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.StopActorFaceFXAnim
// (Defined, Event, Public)

void AController::StopActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.StopActorFaceFXAnim");

	AController_StopActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.PlayActorFaceFXAnim
// (Defined, Event, Public)

void AController::PlayActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.PlayActorFaceFXAnim");

	AController_PlayActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.FinishAnimControl
// (Defined, Simulated, Event, Public)

void AController::FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.FinishAnimControl");

	AController_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetAnimPosition
// (Defined, Simulated, Event, Public)

void AController::SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetAnimPosition");

	AController_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.BeginAnimControl
// (Defined, Simulated, Event, Public)

void AController::BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.BeginAnimControl");

	AController_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NotifyPathChanged
// (Event, Public)

void AController::NotifyPathChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NotifyPathChanged");

	AController_NotifyPathChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetAdjustLocation
// (Final, Native, Public)

void AController::GetAdjustLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetAdjustLocation");

	AController_GetAdjustLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetAdjustLocation
// (Final, Native, HasOptionalParms, Public)

void AController::SetAdjustLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetAdjustLocation");

	AController_SetAdjustLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetDestinationPosition
// (Final, Native, Public)

void AController::GetDestinationPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetDestinationPosition");

	AController_GetDestinationPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetDestinationPosition
// (Final, Native, HasOptionalParms, Public)

void AController::SetDestinationPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetDestinationPosition");

	AController_SetDestinationPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.GetFocalPoint
// (Final, Native, Public)

void AController::GetFocalPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.GetFocalPoint");

	AController_GetFocalPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.SetFocalPoint
// (Final, Native, HasOptionalParms, Public)

void AController::SetFocalPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.SetFocalPoint");

	AController_SetFocalPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RouteCache_RemoveIndex
// (Native, HasOptionalParms, Public)

void AController::RouteCache_RemoveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RouteCache_RemoveIndex");

	AController_RouteCache_RemoveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RouteCache_RemoveItem
// (Native, Public)

void AController::RouteCache_RemoveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RouteCache_RemoveItem");

	AController_RouteCache_RemoveItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RouteCache_InsertItem
// (Native, HasOptionalParms, Public)

void AController::RouteCache_InsertItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RouteCache_InsertItem");

	AController_RouteCache_InsertItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RouteCache_AddItem
// (Native, Public)

void AController::RouteCache_AddItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RouteCache_AddItem");

	AController_RouteCache_AddItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.RouteCache_Empty
// (Native, Public)

void AController::RouteCache_Empty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.RouteCache_Empty");

	AController_RouteCache_Empty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.NativeFindNearestNavPointTo
// (Native, HasOptionalParms, Public)

void AController::NativeFindNearestNavPointTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.NativeFindNearestNavPointTo");

	AController_NativeFindNearestNavPointTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Controller.IsLocalPlayerController
// (Native, Public)

void AController::IsLocalPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Controller.IsLocalPlayerController");

	AController_IsLocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.Customize
// (Event, Public)

void USettings::Customize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.Customize");

	USettings_Customize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.UpdateFromURL
// (Native, Public, HasOutParms)

void USettings::UpdateFromURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.UpdateFromURL");

	USettings_UpdateFromURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.BuildURL
// (Native, Public, HasOutParms)

void USettings::BuildURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.BuildURL");

	USettings_BuildURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.AppendContextsToURL
// (Native, Public, HasOutParms)

void USettings::AppendContextsToURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.AppendContextsToURL");

	USettings_AppendContextsToURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.AppendPropertiesToURL
// (Native, Public, HasOutParms)

void USettings::AppendPropertiesToURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.AppendPropertiesToURL");

	USettings_AppendPropertiesToURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.AppendDataBindingsToURL
// (Native, Public, HasOutParms)

void USettings::AppendDataBindingsToURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.AppendDataBindingsToURL");

	USettings_AppendDataBindingsToURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetQoSAdvertisedStringSettings
// (Native, Public, HasOutParms)

void USettings::GetQoSAdvertisedStringSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetQoSAdvertisedStringSettings");

	USettings_GetQoSAdvertisedStringSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetQoSAdvertisedProperties
// (Native, Public, HasOutParms)

void USettings::GetQoSAdvertisedProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetQoSAdvertisedProperties");

	USettings_GetQoSAdvertisedProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetRangedPropertyValue
// (Native, Public, HasOutParms)

void USettings::GetRangedPropertyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetRangedPropertyValue");

	USettings_GetRangedPropertyValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetRangedPropertyValue
// (Native, Public)

void USettings::SetRangedPropertyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetRangedPropertyValue");

	USettings_SetRangedPropertyValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyRange
// (Native, Public, HasOutParms)

void USettings::GetPropertyRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyRange");

	USettings_GetPropertyRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyMappingType
// (Native, Public, HasOutParms)

void USettings::GetPropertyMappingType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyMappingType");

	USettings_GetPropertyMappingType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.HasStringSetting
// (Native, Public)

void USettings::HasStringSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.HasStringSetting");

	USettings_HasStringSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.HasProperty
// (Native, Public)

void USettings::HasProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.HasProperty");

	USettings_HasProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.UpdateProperties
// (Native, HasOptionalParms, Public, HasOutParms)

void USettings::UpdateProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.UpdateProperties");

	USettings_UpdateProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.UpdateStringSettings
// (Native, HasOptionalParms, Public, HasOutParms)

void USettings::UpdateStringSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.UpdateStringSettings");

	USettings_UpdateStringSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyType
// (Native, Public)

void USettings::GetPropertyType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyType");

	USettings_GetPropertyType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyValueId
// (Native, Public, HasOutParms)

void USettings::GetPropertyValueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyValueId");

	USettings_GetPropertyValueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetPropertyValueId
// (Native, Public)

void USettings::SetPropertyValueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetPropertyValueId");

	USettings_SetPropertyValueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringProperty
// (Native, Public, HasOutParms)

void USettings::GetStringProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringProperty");

	USettings_GetStringProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetStringProperty
// (Native, Public)

void USettings::SetStringProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetStringProperty");

	USettings_SetStringProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetIntProperty
// (Native, Public, HasOutParms)

void USettings::GetIntProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetIntProperty");

	USettings_GetIntProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetIntProperty
// (Native, Public)

void USettings::SetIntProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetIntProperty");

	USettings_SetIntProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetFloatProperty
// (Native, Public, HasOutParms)

void USettings::GetFloatProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetFloatProperty");

	USettings_GetFloatProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetFloatProperty
// (Native, Public)

void USettings::SetFloatProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetFloatProperty");

	USettings_SetFloatProperty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetPropertyFromStringByName
// (Native, Public, HasOutParms)

void USettings::SetPropertyFromStringByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetPropertyFromStringByName");

	USettings_SetPropertyFromStringByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyAsStringByName
// (Native, Public)

void USettings::GetPropertyAsStringByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyAsStringByName");

	USettings_GetPropertyAsStringByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyAsString
// (Native, Public)

void USettings::GetPropertyAsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyAsString");

	USettings_GetPropertyAsString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyColumnHeader
// (Native, Public)

void USettings::GetPropertyColumnHeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyColumnHeader");

	USettings_GetPropertyColumnHeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyName
// (Native, Public)

void USettings::GetPropertyName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyName");

	USettings_GetPropertyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetPropertyId
// (Native, Public, HasOutParms)

void USettings::GetPropertyId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetPropertyId");

	USettings_GetPropertyId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetStringSettingValueFromStringByName
// (Native, Public, HasOutParms)

void USettings::SetStringSettingValueFromStringByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetStringSettingValueFromStringByName");

	USettings_SetStringSettingValueFromStringByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingValueNameByName
// (Native, Public)

void USettings::GetStringSettingValueNameByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingValueNameByName");

	USettings_GetStringSettingValueNameByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingValueName
// (Native, Public)

void USettings::GetStringSettingValueName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingValueName");

	USettings_GetStringSettingValueName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.IsWildcardStringSetting
// (Native, Public)

void USettings::IsWildcardStringSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.IsWildcardStringSetting");

	USettings_IsWildcardStringSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingColumnHeader
// (Native, Public)

void USettings::GetStringSettingColumnHeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingColumnHeader");

	USettings_GetStringSettingColumnHeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingName
// (Native, Public)

void USettings::GetStringSettingName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingName");

	USettings_GetStringSettingName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingId
// (Native, Public, HasOutParms)

void USettings::GetStringSettingId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingId");

	USettings_GetStringSettingId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingValueByName
// (Native, Public, HasOutParms)

void USettings::GetStringSettingValueByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingValueByName");

	USettings_GetStringSettingValueByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetStringSettingValueByName
// (Native, Public)

void USettings::SetStringSettingValueByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetStringSettingValueByName");

	USettings_SetStringSettingValueByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingValueNames
// (Native, Public, HasOutParms)

void USettings::GetStringSettingValueNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingValueNames");

	USettings_GetStringSettingValueNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.IncrementStringSettingValue
// (Native, Public)

void USettings::IncrementStringSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.IncrementStringSettingValue");

	USettings_IncrementStringSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetStringSettingValue
// (Native, Public, HasOutParms)

void USettings::GetStringSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetStringSettingValue");

	USettings_GetStringSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetStringSettingValue
// (Native, HasOptionalParms, Public)

void USettings::SetStringSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetStringSettingValue");

	USettings_SetStringSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetSettingsDataDateTime
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_GetSettingsDataDateTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetSettingsDataDateTime");

	USettings_GetSettingsDataDateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetSettingsDataBlob
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_GetSettingsDataBlob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetSettingsDataBlob");

	USettings_GetSettingsDataBlob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetSettingsDataInt
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_GetSettingsDataInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetSettingsDataInt");

	USettings_GetSettingsDataInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetSettingsDataFloat
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_GetSettingsDataFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetSettingsDataFloat");

	USettings_GetSettingsDataFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.GetSettingsDataString
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_GetSettingsDataString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.GetSettingsDataString");

	USettings_GetSettingsDataString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.EmptySettingsData
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_EmptySettingsData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.EmptySettingsData");

	USettings_EmptySettingsData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsData
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsData");

	USettings_SetSettingsData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsDataBlob
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsDataBlob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsDataBlob");

	USettings_SetSettingsDataBlob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsDataDateTime
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsDataDateTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsDataDateTime");

	USettings_SetSettingsDataDateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsDataInt
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsDataInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsDataInt");

	USettings_SetSettingsDataInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsDataFloat
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsDataFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsDataFloat");

	USettings_SetSettingsDataFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.SetSettingsDataString
// (Native, Static, Public, HasOutParms)

void USettings::STATIC_SetSettingsDataString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.SetSettingsDataString");

	USettings_SetSettingsDataString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.NotifyPropertyValueUpdated
// (Public, Delegate)

void USettings::NotifyPropertyValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.NotifyPropertyValueUpdated");

	USettings_NotifyPropertyValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Settings.NotifySettingValueUpdated
// (Public, Delegate)

void USettings::NotifySettingValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Settings.NotifySettingValueUpdated");

	USettings_NotifySettingValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameSearch.SortSearchResults
// (Native, Event, Public)

void UOnlineGameSearch::SortSearchResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameSearch.SortSearchResults");

	UOnlineGameSearch_SortSearchResults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameSearch.SetSkillOverride
// (Defined, Public, HasOutParms)

void UOnlineGameSearch::SetSkillOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameSearch.SetSkillOverride");

	UOnlineGameSearch_SetSkillOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.StopCameraAnim
// (Simulated, Native, HasOptionalParms, Public)

void ACamera::StopCameraAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.StopCameraAnim");

	ACamera_StopCameraAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.StopAllCameraAnimsByType
// (Simulated, Native, HasOptionalParms, Public)

void ACamera::StopAllCameraAnimsByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.StopAllCameraAnimsByType");

	ACamera_StopAllCameraAnimsByType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.StopAllCameraAnims
// (Simulated, Native, HasOptionalParms, Public)

void ACamera::StopAllCameraAnims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.StopAllCameraAnims");

	ACamera_StopAllCameraAnims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.PlayCameraAnim
// (Simulated, Native, HasOptionalParms, Public)

void ACamera::PlayCameraAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.PlayCameraAnim");

	ACamera_PlayCameraAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.ClearAllCameraShakes
// (Defined, Public)

void ACamera::ClearAllCameraShakes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.ClearAllCameraShakes");

	ACamera_ClearAllCameraShakes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.PlayWorldCameraShake
// (Defined, Static, HasOptionalParms, Public, HasDefaults)

void ACamera::STATIC_PlayWorldCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.PlayWorldCameraShake");

	ACamera_PlayWorldCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.CalcRadialShakeScale
// (Defined, Static, Public, HasDefaults)

void ACamera::STATIC_CalcRadialShakeScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.CalcRadialShakeScale");

	ACamera_CalcRadialShakeScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.StopCameraShake
// (Defined, Public)

void ACamera::StopCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.StopCameraShake");

	ACamera_StopCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.PlayCameraShake
// (Defined, HasOptionalParms, Public)

void ACamera::PlayCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.PlayCameraShake");

	ACamera_PlayCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.ClearCameraLensEffects
// (Defined, Public)

void ACamera::ClearCameraLensEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.ClearCameraLensEffects");

	ACamera_ClearCameraLensEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.RemoveCameraLensEffect
// (Defined, Public)

void ACamera::RemoveCameraLensEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.RemoveCameraLensEffect");

	ACamera_RemoveCameraLensEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.AddCameraLensEffect
// (Defined, Public, HasDefaults)

void ACamera::AddCameraLensEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.AddCameraLensEffect");

	ACamera_AddCameraLensEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.FindCameraLensEffect
// (Defined, Public)

void ACamera::FindCameraLensEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.FindCameraLensEffect");

	ACamera_FindCameraLensEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.DisplayDebug
// (Defined, Simulated, Public, HasOutParms, HasDefaults)

void ACamera::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.DisplayDebug");

	ACamera_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.AllowPawnRotation
// (Defined, Public)

void ACamera::AllowPawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.AllowPawnRotation");

	ACamera_AllowPawnRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.ProcessViewRotation
// (Defined, Public, HasOutParms)

void ACamera::ProcessViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.ProcessViewRotation");

	ACamera_ProcessViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.SetViewTarget
// (Final, Native, HasOptionalParms, Public)

void ACamera::SetViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.SetViewTarget");

	ACamera_SetViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.UpdateViewTarget
// (Defined, Public, HasOutParms, HasDefaults)

void ACamera::UpdateViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.UpdateViewTarget");

	ACamera_UpdateViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.CheckViewTarget
// (Native, Public, HasOutParms)

void ACamera::CheckViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.CheckViewTarget");

	ACamera_CheckViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.FillCameraCache
// (Final, Defined, Public, HasOutParms)

void ACamera::FillCameraCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.FillCameraCache");

	ACamera_FillCameraCache_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.BlendViewTargets
// (Final, Defined, Public, HasOutParms, HasDefaults)

void ACamera::BlendViewTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.BlendViewTargets");

	ACamera_BlendViewTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.UpdateCamera
// (Defined, Simulated, Event, Public, HasDefaults)

void ACamera::UpdateCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.UpdateCamera");

	ACamera_UpdateCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.PostCameraTransform
// (Simulated, Public, HasOutParms)

void ACamera::PostCameraTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.PostCameraTransform");

	ACamera_PostCameraTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.SetDesiredColorScale
// (Defined, Simulated, Public)

void ACamera::SetDesiredColorScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.SetDesiredColorScale");

	ACamera_SetDesiredColorScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.GetCameraViewPoint
// (Final, Defined, Public, HasOutParms)

void ACamera::GetCameraViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.GetCameraViewPoint");

	ACamera_GetCameraViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.SetFOV
// (Defined, Public)

void ACamera::SetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.SetFOV");

	ACamera_SetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.GetFOVAngle
// (Defined, Public)

void ACamera::GetFOVAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.GetFOVAngle");

	ACamera_GetFOVAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.InitializeFor
// (Defined, Public)

void ACamera::InitializeFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.InitializeFor");

	ACamera_InitializeFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.ApplyCameraModifiers
// (Native, Public, HasOutParms)

void ACamera::ApplyCameraModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.ApplyCameraModifiers");

	ACamera_ApplyCameraModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.Destroyed
// (Defined, Event, Public)

void ACamera::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.Destroyed");

	ACamera_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.PostBeginPlay
// (Defined, Simulated, Public)

void ACamera::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.PostBeginPlay");

	ACamera_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Camera.CreateCameraModifier
// (Defined, Protected)

void ACamera::CreateCameraModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Camera.CreateCameraModifier");

	ACamera_CreateCameraModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyActorParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyActorParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyActorParam");

	APlayerController_ClientExecMultiCastFunctionOnlyActorParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyNameParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyNameParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyNameParam");

	APlayerController_ClientExecMultiCastFunctionOnlyNameParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecAndByteParam_Unreliable
// (Defined, Net, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyVecAndByteParam_Unreliable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecAndByteParam_Unreliable");

	APlayerController_ClientExecMultiCastFunctionOnlyVecAndByteParam_Unreliable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecAndByteParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyVecAndByteParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecAndByteParam");

	APlayerController_ClientExecMultiCastFunctionOnlyVecAndByteParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyByteParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyByteParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyByteParam");

	APlayerController_ClientExecMultiCastFunctionOnlyByteParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecParam_Unreliable
// (Defined, Net, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyVecParam_Unreliable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecParam_Unreliable");

	APlayerController_ClientExecMultiCastFunctionOnlyVecParam_Unreliable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyVecParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyVecParam");

	APlayerController_ClientExecMultiCastFunctionOnlyVecParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyFloatParam
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionOnlyFloatParam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionOnlyFloatParam");

	APlayerController_ClientExecMultiCastFunctionOnlyFloatParam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionNoParams
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionNoParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionNoParams");

	APlayerController_ClientExecMultiCastFunctionNoParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunctionNoParams_Unreliable
// (Defined, Net, Simulated, Event, Public, NetClient)

void APlayerController::ClientExecMultiCastFunctionNoParams_Unreliable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunctionNoParams_Unreliable");

	APlayerController_ClientExecMultiCastFunctionNoParams_Unreliable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientExecMultiCastFunction
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientExecMultiCastFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientExecMultiCastFunction");

	APlayerController_ClientExecMultiCastFunction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ToggleSpectator
// (Public)

void APlayerController::ToggleSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ToggleSpectator");

	APlayerController_ToggleSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SkippedMovie
// (Simulated, Event, Public)

void APlayerController::SkippedMovie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SkippedMovie");

	APlayerController_SkippedMovie_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LogOutBugItAIGoToLogFile
// (Final, Native, Private)

void APlayerController::LogOutBugItAIGoToLogFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LogOutBugItAIGoToLogFile");

	APlayerController_LogOutBugItAIGoToLogFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LogOutBugItGoToLogFile
// (Final, Native, Private)

void APlayerController::LogOutBugItGoToLogFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LogOutBugItGoToLogFile");

	APlayerController_LogOutBugItGoToLogFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DisableDebugAI
// (Defined, Public)

void APlayerController::DisableDebugAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DisableDebugAI");

	APlayerController_DisableDebugAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugItStringCreator
// (Defined, Exec, Event, Public, HasOutParms)

void APlayerController::BugItStringCreator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugItStringCreator");

	APlayerController_BugItStringCreator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugItAI
// (Defined, Exec, Event, HasOptionalParms, Public, HasDefaults)

void APlayerController::BugItAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugItAI");

	APlayerController_BugItAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LogLoc
// (Defined, Exec, Public, HasDefaults)

void APlayerController::LogLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LogLoc");

	APlayerController_LogLoc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugIt
// (Defined, Exec, Event, HasOptionalParms, Public, HasDefaults)

void APlayerController::BugIt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugIt");

	APlayerController_BugIt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugItWorker
// (Defined, Public)

void APlayerController::BugItWorker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugItWorker");

	APlayerController_BugItWorker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugItGoString
// (Defined, Public)

void APlayerController::BugItGoString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugItGoString");

	APlayerController_BugItGoString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.BugItGo
// (Defined, Exec, Public, HasDefaults)

void APlayerController::BugItGo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.BugItGo");

	APlayerController_BugItGo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnSetSoundMode
// (Defined, Public)

void APlayerController::OnSetSoundMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnSetSoundMode");

	APlayerController_OnSetSoundMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSpawnCameraLensEffect
// (Defined, Net, Simulated, Event, Public, NetClient)

void APlayerController::ClientSpawnCameraLensEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSpawnCameraLensEffect");

	APlayerController_ClientSpawnCameraLensEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStopCameraAnim
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientStopCameraAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStopCameraAnim");

	APlayerController_ClientStopCameraAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPlayCameraAnim
// (Defined, Net, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientPlayCameraAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPlayCameraAnim");

	APlayerController_ClientPlayCameraAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnCameraShake
// (Defined, Public)

void APlayerController::OnCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnCameraShake");

	APlayerController_OnCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStopCameraShake
// (Defined, Net, Simulated, Public, NetClient)

void APlayerController::ClientStopCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStopCameraShake");

	APlayerController_ClientStopCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPlayCameraShake
// (Defined, Net, Simulated, HasOptionalParms, Public, NetClient)

void APlayerController::ClientPlayCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPlayCameraShake");

	APlayerController_ClientPlayCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DoForceFeedbackForScreenShake
// (Simulated, Protected)

void APlayerController::DoForceFeedbackForScreenShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DoForceFeedbackForScreenShake");

	APlayerController_DoForceFeedbackForScreenShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.InputMatchDelegate
// (Public, Delegate)

void APlayerController::InputMatchDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.InputMatchDelegate");

	APlayerController_InputMatchDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Sentinel_PostAcquireTravelTheWorldPoints
// (Public)

void APlayerController::Sentinel_PostAcquireTravelTheWorldPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Sentinel_PostAcquireTravelTheWorldPoints");

	APlayerController_Sentinel_PostAcquireTravelTheWorldPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Sentinel_PreAcquireTravelTheWorldPoints
// (Public)

void APlayerController::Sentinel_PreAcquireTravelTheWorldPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Sentinel_PreAcquireTravelTheWorldPoints");

	APlayerController_Sentinel_PreAcquireTravelTheWorldPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Sentinel_SetupForGamebasedTravelTheWorld
// (Public)

void APlayerController::Sentinel_SetupForGamebasedTravelTheWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Sentinel_SetupForGamebasedTravelTheWorld");

	APlayerController_Sentinel_SetupForGamebasedTravelTheWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnFlyThroughHasEnded
// (Defined, Simulated, Public)

void APlayerController::OnFlyThroughHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnFlyThroughHasEnded");

	APlayerController_OnFlyThroughHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetAchievementProgression
// (Event, Public, HasOutParms)

void APlayerController::GetAchievementProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetAchievementProgression");

	APlayerController_GetAchievementProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPartyGameTypeName
// (Static, Public)

void APlayerController::STATIC_GetPartyGameTypeName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPartyGameTypeName");

	APlayerController_GetPartyGameTypeName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPartyMapName
// (Static, Public)

void APlayerController::STATIC_GetPartyMapName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPartyMapName");

	APlayerController_GetPartyMapName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsPartyLeader
// (Defined, Simulated, Public)

void APlayerController::IsPartyLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsPartyLeader");

	APlayerController_IsPartyLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPrestreamTextures
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientPrestreamTextures()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPrestreamTextures");

	APlayerController_ClientPrestreamTextures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientSetForceMipLevelsToBeResident()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident");

	APlayerController_ClientSetForceMipLevelsToBeResident_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientControlMovieTexture
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientControlMovieTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientControlMovieTexture");

	APlayerController_ClientControlMovieTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetSplitscreenPlayerCount
// (Simulated, Native, Public)

void APlayerController::GetSplitscreenPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetSplitscreenPlayerCount");

	APlayerController_GetSplitscreenPlayerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetSplitscreenPlayerControllerByIndex
// (Simulated, Native, HasOptionalParms, Public)

void APlayerController::GetSplitscreenPlayerControllerByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetSplitscreenPlayerControllerByIndex");

	APlayerController_GetSplitscreenPlayerControllerByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetSplitscreenPlayerByIndex
// (Defined, Simulated, HasOptionalParms, Public)

void APlayerController::GetSplitscreenPlayerByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetSplitscreenPlayerByIndex");

	APlayerController_GetSplitscreenPlayerByIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.HasSplitscreenPlayer
// (Defined, Simulated, Public)

void APlayerController::HasSplitscreenPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.HasSplitscreenPlayer");

	APlayerController_HasSplitscreenPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsSplitscreenPlayer
// (Simulated, Native, HasOptionalParms, Public, HasOutParms)

void APlayerController::IsSplitscreenPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsSplitscreenPlayer");

	APlayerController_IsSplitscreenPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsPrimaryPlayer
// (Defined, Simulated, Public)

void APlayerController::IsPrimaryPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsPrimaryPlayer");

	APlayerController_IsPrimaryPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientReturnToParty
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientReturnToParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientReturnToParty");

	APlayerController_ClientReturnToParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnJoinTravelToSessionComplete
// (Defined, Public)

void APlayerController::OnJoinTravelToSessionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnJoinTravelToSessionComplete");

	APlayerController_OnJoinTravelToSessionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientTravelToSession
// (Defined, Net, NetReliable, Simulated, Public, HasDefaults, NetClient)

void APlayerController::ClientTravelToSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientTravelToSession");

	APlayerController_ClientTravelToSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PathClear
// (Defined, Exec, Public)

void APlayerController::PathClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PathClear");

	APlayerController_PathClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PathChild
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::PathChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PathChild");

	APlayerController_PathChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PathStep
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::PathStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PathStep");

	APlayerController_PathStep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SoakPause
// (Defined, Event, Public)

void APlayerController::SoakPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SoakPause");

	APlayerController_SoakPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IncrementNumberOfMatchesPlayed
// (Defined, Public)

void APlayerController::IncrementNumberOfMatchesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IncrementNumberOfMatchesPlayed");

	APlayerController_IncrementNumberOfMatchesPlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanViewUserCreatedContent
// (Defined, Public)

void APlayerController::CanViewUserCreatedContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanViewUserCreatedContent");

	APlayerController_CanViewUserCreatedContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientEndOnlineGame
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientEndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientEndOnlineGame");

	APlayerController_ClientEndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStartOnlineGame
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientStartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStartOnlineGame");

	APlayerController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerRegisterClientStatGuid
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerRegisterClientStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerRegisterClientStatGuid");

	APlayerController_ServerRegisterClientStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnRegisterHostStatGuidComplete
// (Defined, Public)

void APlayerController::OnRegisterHostStatGuidComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnRegisterHostStatGuidComplete");

	APlayerController_OnRegisterHostStatGuidComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientRegisterHostStatGuid
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientRegisterHostStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientRegisterHostStatGuid");

	APlayerController_ClientRegisterHostStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RemoveAllDebugStrings
// (Final, Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::RemoveAllDebugStrings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RemoveAllDebugStrings");

	APlayerController_RemoveAllDebugStrings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RemoveDebugText
// (Final, Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::RemoveDebugText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RemoveDebugText");

	APlayerController_RemoveDebugText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AddDebugText
// (Final, Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::AddDebugText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AddDebugText");

	APlayerController_AddDebugText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DrawDebugTextList
// (Final, Defined, Simulated, Public, HasDefaults)

void APlayerController::DrawDebugTextList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DrawDebugTextList");

	APlayerController_DrawDebugTextList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnDestroy
// (Defined, Simulated, Public)

void APlayerController::OnDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnDestroy");

	APlayerController_OnDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStartNetworkedVoice
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientStartNetworkedVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStartNetworkedVoice");

	APlayerController_ClientStartNetworkedVoice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStopNetworkedVoice
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientStopNetworkedVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStopNetworkedVoice");

	APlayerController_ClientStopNetworkedVoice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetHostUniqueId
// (Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientSetHostUniqueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetHostUniqueId");

	APlayerController_ClientSetHostUniqueId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientWriteLeaderboardStats
// (Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientWriteLeaderboardStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientWriteLeaderboardStats");

	APlayerController_ClientWriteLeaderboardStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientWriteOnlinePlayerScores
// (Defined, Net, NetReliable, Simulated, Public, HasDefaults, NetClient)

void APlayerController::ClientWriteOnlinePlayerScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientWriteOnlinePlayerScores");

	APlayerController_ClientWriteOnlinePlayerScores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientArbitratedMatchEnded
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientArbitratedMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientArbitratedMatchEnded");

	APlayerController_ClientArbitratedMatchEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyJoiningGameFromInvite
// (Defined, Public)

void APlayerController::NotifyJoiningGameFromInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyJoiningGameFromInvite");

	APlayerController_NotifyJoiningGameFromInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyNotEnoughSpaceInInvite
// (Defined, Public)

void APlayerController::NotifyNotEnoughSpaceInInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyNotEnoughSpaceInInvite");

	APlayerController_NotifyNotEnoughSpaceInInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyNotAllPlayersCanJoinInvite
// (Defined, Public)

void APlayerController::NotifyNotAllPlayersCanJoinInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyNotAllPlayersCanJoinInvite");

	APlayerController_NotifyNotAllPlayersCanJoinInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyInviteFailed
// (Defined, Public)

void APlayerController::NotifyInviteFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyInviteFailed");

	APlayerController_NotifyInviteFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnInviteJoinComplete
// (Defined, Public)

void APlayerController::OnInviteJoinComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnInviteJoinComplete");

	APlayerController_OnInviteJoinComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnDestroyForInviteComplete
// (Defined, Public)

void APlayerController::OnDestroyForInviteComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnDestroyForInviteComplete");

	APlayerController_OnDestroyForInviteComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnEndForInviteComplete
// (Defined, Public)

void APlayerController::OnEndForInviteComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnEndForInviteComplete");

	APlayerController_OnEndForInviteComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClearInviteDelegates
// (Defined, Public)

void APlayerController::ClearInviteDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClearInviteDelegates");

	APlayerController_ClearInviteDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanAllPlayersPlayOnline
// (Defined, HasOptionalParms, Public)

void APlayerController::CanAllPlayersPlayOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanAllPlayersPlayOnline");

	APlayerController_CanAllPlayersPlayOnline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.InviteHasEnoughSpace
// (Defined, Public)

void APlayerController::InviteHasEnoughSpace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.InviteHasEnoughSpace");

	APlayerController_InviteHasEnoughSpace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnGameInviteAccepted
// (Defined, Public, HasOutParms)

void APlayerController::OnGameInviteAccepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnGameInviteAccepted");

	APlayerController_OnGameInviteAccepted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerRegisteredForArbitration
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerRegisteredForArbitration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerRegisteredForArbitration");

	APlayerController_ServerRegisteredForArbitration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnArbitrationRegisterComplete
// (Defined, Public)

void APlayerController::OnArbitrationRegisterComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnArbitrationRegisterComplete");

	APlayerController_OnArbitrationRegisterComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientRegisterForArbitration
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientRegisterForArbitration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientRegisterForArbitration");

	APlayerController_ClientRegisterForArbitration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientWasKicked
// (Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientWasKicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientWasKicked");

	APlayerController_ClientWasKicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsShowingSubtitles
// (Simulated, Native, Public)

void APlayerController::IsShowingSubtitles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsShowingSubtitles");

	APlayerController_IsShowingSubtitles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetShowSubtitles
// (Simulated, Exec, Native, Public)

void APlayerController::SetShowSubtitles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetShowSubtitles");

	APlayerController_SetShowSubtitles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyDirectorControl
// (Defined, Event, Public)

void APlayerController::NotifyDirectorControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyDirectorControl");

	APlayerController_NotifyDirectorControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerUnmutePlayer
// (Defined, Net, NetReliable, Event, Public, NetServer)

void APlayerController::ServerUnmutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerUnmutePlayer");

	APlayerController_ServerUnmutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RetryMuting
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::RetryMuting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RetryMuting");

	APlayerController_RetryMuting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerMutePlayer
// (Defined, Net, NetReliable, Event, Public, NetServer)

void APlayerController::ServerMutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerMutePlayer");

	APlayerController_ServerMutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GameplayUnmutePlayer
// (Defined, Public)

void APlayerController::GameplayUnmutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GameplayUnmutePlayer");

	APlayerController_GameplayUnmutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GameplayMutePlayer
// (Defined, Public)

void APlayerController::GameplayMutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GameplayMutePlayer");

	APlayerController_GameplayMutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientUnmutePlayer
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientUnmutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientUnmutePlayer");

	APlayerController_ClientUnmutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientMutePlayer
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientMutePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientMutePlayer");

	APlayerController_ClientMutePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientVoiceHandshakeComplete
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientVoiceHandshakeComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientVoiceHandshakeComplete");

	APlayerController_ClientVoiceHandshakeComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPlayerControllerFromNetId
// (Native, Static, Public)

void APlayerController::STATIC_GetPlayerControllerFromNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPlayerControllerFromNetId");

	APlayerController_GetPlayerControllerFromNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetOnlineStatus
// (Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientSetOnlineStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetOnlineStatus");

	APlayerController_ClientSetOnlineStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SeamlessTravelFrom
// (Defined, Public)

void APlayerController::SeamlessTravelFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SeamlessTravelFrom");

	APlayerController_SeamlessTravelFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SeamlessTravelTo
// (Public)

void APlayerController::SeamlessTravelTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SeamlessTravelTo");

	APlayerController_SeamlessTravelTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetSeamlessTravelActorList
// (Defined, Event, Public, HasOutParms)

void APlayerController::GetSeamlessTravelActorList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetSeamlessTravelActorList");

	APlayerController_GetSeamlessTravelActorList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsPlayerMuted
// (Final, Native, Public, HasOutParms)

void APlayerController::IsPlayerMuted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsPlayerMuted");

	APlayerController_IsPlayerMuted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetUIController
// (Final, Defined, Public)

void APlayerController::GetUIController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetUIController");

	APlayerController_GetUIController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SaveActorConfig
// (Defined, Exec, Public)

void APlayerController::SaveActorConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SaveActorConfig");

	APlayerController_SaveActorConfig_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SaveClassConfig
// (Defined, Exec, Public)

void APlayerController::SaveClassConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SaveClassConfig");

	APlayerController_SaveClassConfig_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetBlockOnAsyncLoading
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientSetBlockOnAsyncLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetBlockOnAsyncLoading");

	APlayerController_ClientSetBlockOnAsyncLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientFlushLevelStreaming
// (Final, Net, NetReliable, Simulated, Native, Event, Public, NetClient)

void APlayerController::ClientFlushLevelStreaming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientFlushLevelStreaming");

	APlayerController_ClientFlushLevelStreaming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientCancelPendingMapChange
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientCancelPendingMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientCancelPendingMapChange");

	APlayerController_ClientCancelPendingMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientCommitMapChange
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientCommitMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientCommitMapChange");

	APlayerController_ClientCommitMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DelayedPrepareMapChange
// (Defined, Public)

void APlayerController::DelayedPrepareMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DelayedPrepareMapChange");

	APlayerController_DelayedPrepareMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPrepareMapChange
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientPrepareMapChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPrepareMapChange");

	APlayerController_ClientPrepareMapChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerUpdateLevelVisibility
// (Final, Net, NetReliable, Native, Event, Public, NetServer)

void APlayerController::ServerUpdateLevelVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerUpdateLevelVisibility");

	APlayerController_ServerUpdateLevelVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
// (Net, NetReliable, Simulated, Native, Public, NetClient)

void APlayerController::ClientUpdateLevelStreamingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientUpdateLevelStreamingStatus");

	APlayerController_ClientUpdateLevelStreamingStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LevelStreamingStatusChanged
// (Final, Defined, Event, Public)

void APlayerController::LevelStreamingStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LevelStreamingStatusChanged");

	APlayerController_LevelStreamingStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientForceGarbageCollection
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientForceGarbageCollection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientForceGarbageCollection");

	APlayerController_ClientForceGarbageCollection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnConsoleCommand
// (Defined, Public)

void APlayerController::OnConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnConsoleCommand");

	APlayerController_OnConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ResetPlayerMovementInput
// (Defined, Public)

void APlayerController::ResetPlayerMovementInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ResetPlayerMovementInput");

	APlayerController_ResetPlayerMovementInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsLookInputIgnored
// (Defined, Event, Public)

void APlayerController::IsLookInputIgnored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsLookInputIgnored");

	APlayerController_IsLookInputIgnored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IgnoreLookInput
// (Defined, Public)

void APlayerController::IgnoreLookInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IgnoreLookInput");

	APlayerController_IgnoreLookInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsMoveInputIgnored
// (Defined, Event, Public)

void APlayerController::IsMoveInputIgnored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsMoveInputIgnored");

	APlayerController_IsMoveInputIgnored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IgnoreMoveInput
// (Defined, Public)

void APlayerController::IgnoreMoveInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IgnoreMoveInput");

	APlayerController_IgnoreMoveInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetCinematicMode
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientSetCinematicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetCinematicMode");

	APlayerController_ClientSetCinematicMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetCinematicMode
// (Defined, Public)

void APlayerController::SetCinematicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetCinematicMode");

	APlayerController_SetCinematicMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnToggleCinematicMode
// (Defined, Public)

void APlayerController::OnToggleCinematicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnToggleCinematicMode");

	APlayerController_OnToggleCinematicMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsForceFeedbackAllowed
// (Defined, Simulated, Public)

void APlayerController::IsForceFeedbackAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsForceFeedbackAllowed");

	APlayerController_IsForceFeedbackAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientStopForceFeedbackWaveform
// (Final, Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientStopForceFeedbackWaveform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientStopForceFeedbackWaveform");

	APlayerController_ClientStopForceFeedbackWaveform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPlayForceFeedbackWaveform
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::ClientPlayForceFeedbackWaveform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPlayForceFeedbackWaveform");

	APlayerController_ClientPlayForceFeedbackWaveform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PlayRumble
// (Defined, Event, Public)

void APlayerController::PlayRumble()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PlayRumble");

	APlayerController_PlayRumble_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnForceFeedback
// (Defined, Public)

void APlayerController::OnForceFeedback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnForceFeedback");

	APlayerController_OnForceFeedback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyTakeHit
// (Defined, Public)

void APlayerController::NotifyTakeHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyTakeHit");

	APlayerController_NotifyTakeHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ShowGameState
// (Defined, Exec, Public)

void APlayerController::ShowGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ShowGameState");

	APlayerController_ShowGameState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ShowPlayerState
// (Defined, Exec, Public)

void APlayerController::ShowPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ShowPlayerState");

	APlayerController_ShowPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ListCE
// (Defined, Exec, Public)

void APlayerController::ListCE()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ListCE");

	APlayerController_ListCE_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ListConsoleEvents
// (Defined, Exec, Public)

void APlayerController::ListConsoleEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ListConsoleEvents");

	APlayerController_ListConsoleEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CE
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::CE()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CE");

	APlayerController_CE_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CauseEvent
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::CauseEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CauseEvent");

	APlayerController_CauseEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerCauseEvent
// (Defined, Net, Public, NetServer)

void APlayerController::ServerCauseEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerCauseEvent");

	APlayerController_ServerCauseEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnToggleHUD
// (Defined, Simulated, Public)

void APlayerController::OnToggleHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnToggleHUD");

	APlayerController_OnToggleHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnSetCameraTarget
// (Defined, Simulated, Public)

void APlayerController::OnSetCameraTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnSetCameraTarget");

	APlayerController_OnSetCameraTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientClearKismetText
// (Final, Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientClearKismetText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientClearKismetText");

	APlayerController_ClientClearKismetText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientDrawKismetText
// (Final, Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientDrawKismetText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientDrawKismetText");

	APlayerController_ClientDrawKismetText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnDrawText
// (Defined, Public)

void APlayerController::OnDrawText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnDrawText");

	APlayerController_OnDrawText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void APlayerController::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DisplayDebug");

	APlayerController_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientIgnoreLookInput
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientIgnoreLookInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientIgnoreLookInput");

	APlayerController_ClientIgnoreLookInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientIgnoreMoveInput
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientIgnoreMoveInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientIgnoreMoveInput");

	APlayerController_ClientIgnoreMoveInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnToggleInput
// (Defined, Public)

void APlayerController::OnToggleInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnToggleInput");

	APlayerController_OnToggleInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DrawHUD
// (Defined, Public)

void APlayerController::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DrawHUD");

	APlayerController_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanRestartPlayer
// (Defined, Public)

void APlayerController::CanRestartPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanRestartPlayer");

	APlayerController_CanRestartPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerViewSelf
// (Defined, Net, HasOptionalParms, Public, NetServer)

void APlayerController::ServerViewSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerViewSelf");

	APlayerController_ServerViewSelf_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ViewAPlayer
// (Defined, Public)

void APlayerController::ViewAPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ViewAPlayer");

	APlayerController_ViewAPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerViewPrevPlayer
// (Defined, Net, Public, NetServer)

void APlayerController::ServerViewPrevPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerViewPrevPlayer");

	APlayerController_ServerViewPrevPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerViewNextPlayer
// (Defined, Net, Public, NetServer)

void APlayerController::ServerViewNextPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerViewNextPlayer");

	APlayerController_ServerViewNextPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerSetSpectatorLocation
// (Defined, Net, Public, NetServer)

void APlayerController::ServerSetSpectatorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerSetSpectatorLocation");

	APlayerController_ServerSetSpectatorLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsSpectating
// (Defined, Public)

void APlayerController::IsSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsSpectating");

	APlayerController_IsSpectating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CheckJumpOrDuck
// (Defined, Public)

void APlayerController::CheckJumpOrDuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CheckJumpOrDuck");

	APlayerController_CheckJumpOrDuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClearDoubleClick
// (Defined, Public)

void APlayerController::ClearDoubleClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClearDoubleClick");

	APlayerController_ClearDoubleClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LimitViewRotation
// (Defined, Event, Public)

void APlayerController::LimitViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LimitViewRotation");

	APlayerController_LimitViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ProcessViewRotation
// (Defined, Public, HasOutParms)

void APlayerController::ProcessViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ProcessViewRotation");

	APlayerController_ProcessViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UpdateRotation
// (Defined, Public, HasDefaults)

void APlayerController::UpdateRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UpdateRotation");

	APlayerController_UpdateRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ViewShake
// (Public)

void APlayerController::ViewShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ViewShake");

	APlayerController_ViewShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPlayerViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void APlayerController::GetPlayerViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPlayerViewPoint");

	APlayerController_GetPlayerViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SpawnPlayerCamera
// (Defined, Event, Public)

void APlayerController::SpawnPlayerCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SpawnPlayerCamera");

	APlayerController_SpawnPlayerCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerVerifyViewTarget
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerVerifyViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerVerifyViewTarget");

	APlayerController_ServerVerifyViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetViewTarget
// (Native, Public)

void APlayerController::GetViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetViewTarget");

	APlayerController_GetViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetViewTarget
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientSetViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetViewTarget");

	APlayerController_ClientSetViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetViewTargetWithBlend
// (Final, Defined, HasOptionalParms, Public, HasDefaults)

void APlayerController::SetViewTargetWithBlend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetViewTargetWithBlend");

	APlayerController_SetViewTargetWithBlend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetViewTarget
// (Native, HasOptionalParms, Public)

void APlayerController::SetViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetViewTarget");

	APlayerController_SetViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsLocalPlayerController
// (Native, Public)

void APlayerController::IsLocalPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsLocalPlayerController");

	APlayerController_IsLocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetFOVAngle
// (Defined, Event, Public)

void APlayerController::GetFOVAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetFOVAngle");

	APlayerController_GetFOVAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AdjustFOV
// (Defined, Public)

void APlayerController::AdjustFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AdjustFOV");

	APlayerController_AdjustFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyLanded
// (Defined, Event, Public)

void APlayerController::NotifyLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyLanded");

	APlayerController_NotifyLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AimHelpDot
// (Defined, Public)

void APlayerController::AimHelpDot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AimHelpDot");

	APlayerController_AimHelpDot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetAdjustedAimFor
// (Defined, Public, HasDefaults)

void APlayerController::GetAdjustedAimFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetAdjustedAimFor");

	APlayerController_GetAdjustedAimFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CameraLookAtFinished
// (Event, Public)

void APlayerController::CameraLookAtFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CameraLookAtFinished");

	APlayerController_CameraLookAtFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AimingHelp
// (Defined, Public)

void APlayerController::AimingHelp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AimingHelp");

	APlayerController_AimingHelp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PlayerMove
// (Public)

void APlayerController::PlayerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PlayerMove");

	APlayerController_PlayerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PlayerTick
// (Defined, Event, Public)

void APlayerController::PlayerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PlayerTick");

	APlayerController_PlayerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyChangedWeapon
// (Public)

void APlayerController::NotifyChangedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyChangedWeapon");

	APlayerController_NotifyChangedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientGameEnded
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientGameEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientGameEnded");

	APlayerController_ClientGameEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GameHasEnded
// (Defined, HasOptionalParms, Public)

void APlayerController::GameHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GameHasEnded");

	APlayerController_GameHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientRestart
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientRestart");

	APlayerController_ClientRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.EnterStartState
// (Defined, Public)

void APlayerController::EnterStartState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.EnterStartState");

	APlayerController_EnterStartState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ForceSingleNetUpdateFor
// (Final, Native, Public)

void APlayerController::ForceSingleNetUpdateFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ForceSingleNetUpdateFor");

	APlayerController_ForceSingleNetUpdateFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.HasClientLoadedCurrentWorld
// (Final, Native, Public)

void APlayerController::HasClientLoadedCurrentWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.HasClientLoadedCurrentWorld");

	APlayerController_HasClientLoadedCurrentWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NotifyLoadedWorld
// (Defined, Event, Public, HasDefaults)

void APlayerController::NotifyLoadedWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NotifyLoadedWorld");

	APlayerController_NotifyLoadedWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerNotifyLoadedWorld
// (Final, Net, NetReliable, Native, Event, Public, NetServer)

void APlayerController::ServerNotifyLoadedWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerNotifyLoadedWorld");

	APlayerController_ServerNotifyLoadedWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Restart
// (Defined, Public)

void APlayerController::Restart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Restart");

	APlayerController_Restart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetProgressMessage
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientSetProgressMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetProgressMessage");

	APlayerController_ClientSetProgressMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SwitchLevel
// (Defined, Exec, Public)

void APlayerController::SwitchLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SwitchLevel");

	APlayerController_SwitchLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerChangeTeam
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerChangeTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerChangeTeam");

	APlayerController_ServerChangeTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ChangeTeam
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::ChangeTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ChangeTeam");

	APlayerController_ChangeTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SwitchTeam
// (Defined, Exec, Public)

void APlayerController::SwitchTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SwitchTeam");

	APlayerController_SwitchTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerChangeName
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerChangeName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerChangeName");

	APlayerController_ServerChangeName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetName
// (Defined, Exec, Public)

void APlayerController::SetName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetName");

	APlayerController_SetName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerSuicide
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerSuicide");

	APlayerController_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Suicide
// (Defined, Exec, Public)

void APlayerController::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Suicide");

	APlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.TriggerInteracted
// (Defined, Public, HasDefaults)

void APlayerController::TriggerInteracted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.TriggerInteracted");

	APlayerController_TriggerInteracted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.FindVehicleToDrive
// (Defined, Public, HasDefaults)

void APlayerController::FindVehicleToDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.FindVehicleToDrive");

	APlayerController_FindVehicleToDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PerformedUseAction
// (Defined, Public)

void APlayerController::PerformedUseAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PerformedUseAction");

	APlayerController_PerformedUseAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerUse
// (Defined, Net, Public, NetServer)

void APlayerController::ServerUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerUse");

	APlayerController_ServerUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Use
// (Defined, Exec, Public)

void APlayerController::Use()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Use");

	APlayerController_Use_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetTriggerUseList
// (Defined, Public, HasOutParms, HasDefaults)

void APlayerController::GetTriggerUseList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetTriggerUseList");

	APlayerController_GetTriggerUseList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.StopAltFire
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::StopAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.StopAltFire");

	APlayerController_StopAltFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.StartAltFire
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::StartAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.StartAltFire");

	APlayerController_StartAltFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.StopFire
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.StopFire");

	APlayerController_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.StartFire
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.StartFire");

	APlayerController_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.NextWeapon
// (Defined, Exec, Public)

void APlayerController::NextWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.NextWeapon");

	APlayerController_NextWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PrevWeapon
// (Defined, Exec, Public)

void APlayerController::PrevWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PrevWeapon");

	APlayerController_PrevWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerThrowWeapon
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerThrowWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerThrowWeapon");

	APlayerController_ServerThrowWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ThrowWeapon
// (Defined, Exec, Public)

void APlayerController::ThrowWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ThrowWeapon");

	APlayerController_ThrowWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UTrace
// (Defined, Exec, Public)

void APlayerController::UTrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UTrace");

	APlayerController_UTrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerUTrace
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerUTrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerUTrace");

	APlayerController_ServerUTrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ConditionalPause
// (Defined, Event, Public)

void APlayerController::ConditionalPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ConditionalPause");

	APlayerController_ConditionalPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ShowMenu
// (Exec, Public)

void APlayerController::ShowMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ShowMenu");

	APlayerController_ShowMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerPause
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerPause");

	APlayerController_ServerPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Pause
// (Defined, Exec, HasOptionalParms, Public)

void APlayerController::Pause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Pause");

	APlayerController_Pause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsPaused
// (Final, Defined, Simulated, Public)

void APlayerController::IsPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsPaused");

	APlayerController_IsPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetPause
// (Defined, HasOptionalParms, Public)

void APlayerController::SetPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetPause");

	APlayerController_SetPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanUnpause
// (Defined, Public, Delegate)

void APlayerController::CanUnpause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanUnpause");

	APlayerController_CanUnpause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PauseRumbleForAllPlayers
// (Defined, HasOptionalParms, Public)

void APlayerController::PauseRumbleForAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PauseRumbleForAllPlayers");

	APlayerController_PauseRumbleForAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.QuickLoad
// (Defined, Exec, Public)

void APlayerController::QuickLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.QuickLoad");

	APlayerController_QuickLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.QuickSave
// (Defined, Exec, Public)

void APlayerController::QuickSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.QuickSave");

	APlayerController_QuickSave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LocalTravel
// (Defined, Exec, Public)

void APlayerController::LocalTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LocalTravel");

	APlayerController_LocalTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RestartLevel
// (Defined, Exec, Public)

void APlayerController::RestartLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RestartLevel");

	APlayerController_RestartLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerSpeech
// (Net, NetReliable, Public, NetServer)

void APlayerController::ServerSpeech()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerSpeech");

	APlayerController_ServerSpeech_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Speech
// (Defined, Exec, Public)

void APlayerController::Speech()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Speech");

	APlayerController_Speech_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerRestartGame
// (Net, NetReliable, Public, NetServer)

void APlayerController::ServerRestartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerRestartGame");

	APlayerController_ServerRestartGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.HandleWalking
// (Defined, Public)

void APlayerController::HandleWalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.HandleWalking");

	APlayerController_HandleWalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CallServerMove
// (Defined, Public, HasDefaults)

void APlayerController::CallServerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CallServerMove");

	APlayerController_CallServerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ReplicateMove
// (Defined, Public)

void APlayerController::ReplicateMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ReplicateMove");

	APlayerController_ReplicateMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.MoveLog
// (Defined, HasOptionalParms, Public)

void APlayerController::MoveLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.MoveLog");

	APlayerController_MoveLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CompressAccel
// (Defined, Public)

void APlayerController::CompressAccel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CompressAccel");

	APlayerController_CompressAccel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetFreeMove
// (Final, Defined, Public)

void APlayerController::GetFreeMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetFreeMove");

	APlayerController_GetFreeMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientUpdatePosition
// (Defined, Public)

void APlayerController::ClientUpdatePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientUpdatePosition");

	APlayerController_ClientUpdatePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClearAckedMoves
// (Defined, Public)

void APlayerController::ClearAckedMoves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClearAckedMoves");

	APlayerController_ClearAckedMoves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerUpdatePing
// (Defined, Net, Public, NetServer)

void APlayerController::ServerUpdatePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerUpdatePing");

	APlayerController_ServerUpdatePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UpdateStateFromAdjustment
// (Defined, Public)

void APlayerController::UpdateStateFromAdjustment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UpdateStateFromAdjustment");

	APlayerController_UpdateStateFromAdjustment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.LongClientAdjustPosition
// (Defined, Net, Simulated, Public, HasDefaults, NetClient)

void APlayerController::LongClientAdjustPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.LongClientAdjustPosition");

	APlayerController_LongClientAdjustPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UpdatePing
// (Final, Defined, Public)

void APlayerController::UpdatePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UpdatePing");

	APlayerController_UpdatePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerSetNetSpeed
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerSetNetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerSetNetSpeed");

	APlayerController_ServerSetNetSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientAdjustPosition
// (Defined, Net, Simulated, Public, HasDefaults, NetClient)

void APlayerController::ClientAdjustPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientAdjustPosition");

	APlayerController_ClientAdjustPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientAckGoodMove
// (Defined, Net, Simulated, Public, NetClient)

void APlayerController::ClientAckGoodMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientAckGoodMove");

	APlayerController_ClientAckGoodMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientCapBandwidth
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientCapBandwidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientCapBandwidth");

	APlayerController_ClientCapBandwidth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ShortClientAdjustPosition
// (Defined, Net, Simulated, Public, HasDefaults, NetClient)

void APlayerController::ShortClientAdjustPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ShortClientAdjustPosition");

	APlayerController_ShortClientAdjustPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.VeryShortClientAdjustPosition
// (Defined, Net, Simulated, Public, HasDefaults, NetClient)

void APlayerController::VeryShortClientAdjustPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.VeryShortClientAdjustPosition");

	APlayerController_VeryShortClientAdjustPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.MoveAutonomous
// (Defined, Public)

void APlayerController::MoveAutonomous()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.MoveAutonomous");

	APlayerController_MoveAutonomous_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ProcessMove
// (Defined, Public)

void APlayerController::ProcessMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ProcessMove");

	APlayerController_ProcessMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ProcessDrive
// (Defined, Public)

void APlayerController::ProcessDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ProcessDrive");

	APlayerController_ProcessDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerDrive
// (Defined, Net, Public, NetServer, HasDefaults)

void APlayerController::ServerDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerDrive");

	APlayerController_ServerDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SendClientAdjustment
// (Defined, Event, Public)

void APlayerController::SendClientAdjustment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SendClientAdjustment");

	APlayerController_SendClientAdjustment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerMove
// (Defined, Net, Public, NetServer, HasDefaults)

void APlayerController::ServerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerMove");

	APlayerController_ServerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OldServerMove
// (Defined, Net, Public, NetServer, HasDefaults)

void APlayerController::OldServerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OldServerMove");

	APlayerController_OldServerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.DualServerMove
// (Defined, Net, Public, NetServer)

void APlayerController::DualServerMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.DualServerMove");

	APlayerController_DualServerMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ForceDeathUpdate
// (Defined, Public)

void APlayerController::ForceDeathUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ForceDeathUpdate");

	APlayerController_ForceDeathUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientVoiceMessage
// (Public)

void APlayerController::ClientVoiceMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientVoiceMessage");

	APlayerController_ClientVoiceMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UsingFirstPersonCamera
// (Defined, Public)

void APlayerController::UsingFirstPersonCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UsingFirstPersonCamera");

	APlayerController_UsingFirstPersonCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetCameraFade
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientSetCameraFade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetCameraFade");

	APlayerController_ClientSetCameraFade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ResetCameraMode
// (Event, Public)

void APlayerController::ResetCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ResetCameraMode");

	APlayerController_ResetCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetCameraMode
// (Public)

void APlayerController::SetCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetCameraMode");

	APlayerController_SetCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetCameraMode
// (Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientSetCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetCameraMode");

	APlayerController_ClientSetCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerCamera
// (Net, NetReliable, Public, NetServer)

void APlayerController::ServerCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerCamera");

	APlayerController_ServerCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Camera
// (Exec, Public)

void APlayerController::Camera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Camera");

	APlayerController_Camera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PreClientTravel
// (Defined, Event, Public)

void APlayerController::PreClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PreClientTravel");

	APlayerController_PreClientTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerTeamSay
// (Defined, Net, Public, NetServer)

void APlayerController::ServerTeamSay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerTeamSay");

	APlayerController_ServerTeamSay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.TeamSay
// (Defined, Exec, Public)

void APlayerController::TeamSay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.TeamSay");

	APlayerController_TeamSay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientAdminMessage
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientAdminMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientAdminMessage");

	APlayerController_ClientAdminMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerSay
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerSay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerSay");

	APlayerController_ServerSay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Say
// (Defined, Exec, Public)

void APlayerController::Say()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Say");

	APlayerController_Say_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AllowTextMessage
// (Defined, Public)

void APlayerController::AllowTextMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AllowTextMessage");

	APlayerController_AllowTextMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerMutate
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerMutate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerMutate");

	APlayerController_ServerMutate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Mutate
// (Defined, Exec, Public)

void APlayerController::Mutate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Mutate");

	APlayerController_Mutate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.FOV
// (Defined, Exec, Public)

void APlayerController::FOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.FOV");

	APlayerController_FOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ResetFOV
// (Defined, Public)

void APlayerController::ResetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ResetFOV");

	APlayerController_ResetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetFOV
// (Defined, Public)

void APlayerController::SetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetFOV");

	APlayerController_SetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.FixFOV
// (Defined, Public)

void APlayerController::FixFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.FixFOV");

	APlayerController_FixFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Destroyed
// (Defined, Event, Public)

void APlayerController::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Destroyed");

	APlayerController_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CleanupPawn
// (Defined, Public)

void APlayerController::CleanupPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CleanupPawn");

	APlayerController_CleanupPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClearOnlineDelegates
// (Defined, Event, Public)

void APlayerController::ClearOnlineDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClearOnlineDelegates");

	APlayerController_ClearOnlineDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RegisterOnlineDelegates
// (Defined, Public)

void APlayerController::RegisterOnlineDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RegisterOnlineDelegates");

	APlayerController_RegisterOnlineDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PlayBeepSound
// (Public)

void APlayerController::PlayBeepSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PlayBeepSound");

	APlayerController_PlayBeepSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.TeamMessage
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::TeamMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.TeamMessage");

	APlayerController_TeamMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SpeakTTS
// (Defined, Simulated, HasOptionalParms, Public)

void APlayerController::SpeakTTS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SpeakTTS");

	APlayerController_SpeakTTS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.TeamTalk
// (Defined, Exec, Public)

void APlayerController::TeamTalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.TeamTalk");

	APlayerController_TeamTalk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Talk
// (Defined, Exec, Public)

void APlayerController::Talk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Talk");

	APlayerController_Talk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CreateTTSSoundCue
// (Final, Simulated, Native, Private)

void APlayerController::CreateTTSSoundCue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CreateTTSSoundCue");

	APlayerController_CreateTTSSoundCue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AllowTTSMessageFrom
// (Final, Defined, Simulated, Private)

void APlayerController::AllowTTSMessageFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AllowTTSMessageFrom");

	APlayerController_AllowTTSMessageFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanCommunicate
// (Final, Defined, Simulated, Private)

void APlayerController::CanCommunicate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanCommunicate");

	APlayerController_CanCommunicate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientMessage
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientMessage");

	APlayerController_ClientMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPlayActorFaceFXAnim
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientPlayActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPlayActorFaceFXAnim");

	APlayerController_ClientPlayActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Kismet_ClientStopSound
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::Kismet_ClientStopSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Kismet_ClientStopSound");

	APlayerController_Kismet_ClientStopSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Kismet_ClientPlaySound
// (Defined, Net, NetReliable, Simulated, Event, Public, NetClient)

void APlayerController::Kismet_ClientPlaySound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Kismet_ClientPlaySound");

	APlayerController_Kismet_ClientPlaySound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsClosestLocalPlayerToActor
// (Defined, Simulated, Public)

void APlayerController::IsClosestLocalPlayerToActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsClosestLocalPlayerToActor");

	APlayerController_IsClosestLocalPlayerToActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientHearSound
// (Defined, Net, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientHearSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientHearSound");

	APlayerController_ClientHearSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPooledAudioComponent
// (Native, HasOptionalParms, Public)

void APlayerController::GetPooledAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPooledAudioComponent");

	APlayerController_GetPooledAudioComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.HearSoundFinished
// (Defined, Simulated, Public)

void APlayerController::HearSoundFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.HearSoundFinished");

	APlayerController_HearSoundFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientPlaySound
// (Defined, Net, Simulated, Event, Public, NetClient)

void APlayerController::ClientPlaySound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientPlaySound");

	APlayerController_ClientPlaySound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ReceiveLocalizedMessage
// (Defined, Net, NetReliable, Simulated, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ReceiveLocalizedMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ReceiveLocalizedMessage");

	APlayerController_ReceiveLocalizedMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CleanupPRI
// (Defined, Public)

void APlayerController::CleanupPRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CleanupPRI");

	APlayerController_CleanupPRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.HandlePickup
// (Defined, Public)

void APlayerController::HandlePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.HandlePickup");

	APlayerController_HandlePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientSetHUD
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientSetHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientSetHUD");

	APlayerController_ClientSetHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PawnDied
// (Defined, Public)

void APlayerController::PawnDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PawnDied");

	APlayerController_PawnDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UnPossess
// (Defined, Event, Public)

void APlayerController::UnPossess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UnPossess");

	APlayerController_UnPossess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerAcknowledgePossession
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerAcknowledgePossession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerAcknowledgePossession");

	APlayerController_ServerAcknowledgePossession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AcknowledgePossession
// (Defined, Public)

void APlayerController::AcknowledgePossession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AcknowledgePossession");

	APlayerController_AcknowledgePossession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Possess
// (Defined, Event, Public)

void APlayerController::Possess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Possess");

	APlayerController_Possess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GivePawn
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::GivePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GivePawn");

	APlayerController_GivePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AskForPawn
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::AskForPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AskForPawn");

	APlayerController_AskForPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientGotoState
// (Defined, Net, NetReliable, Simulated, HasOptionalParms, Public, NetClient)

void APlayerController::ClientGotoState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientGotoState");

	APlayerController_ClientGotoState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsMouseAvailable
// (Simulated, Native, Public)

void APlayerController::IsMouseAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsMouseAvailable");

	APlayerController_IsMouseAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsKeyboardAvailable
// (Simulated, Native, Public)

void APlayerController::IsKeyboardAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsKeyboardAvailable");

	APlayerController_IsKeyboardAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetUseTiltForwardAndBack
// (Simulated, Native, Public)

void APlayerController::SetUseTiltForwardAndBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetUseTiltForwardAndBack");

	APlayerController_SetUseTiltForwardAndBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetOnlyUseControllerTiltInput
// (Simulated, Native, Public)

void APlayerController::SetOnlyUseControllerTiltInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetOnlyUseControllerTiltInput");

	APlayerController_SetOnlyUseControllerTiltInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetControllerTiltActive
// (Simulated, Native, Public)

void APlayerController::SetControllerTiltActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetControllerTiltActive");

	APlayerController_SetControllerTiltActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetControllerTiltDesiredIfAvailable
// (Simulated, Native, Public)

void APlayerController::SetControllerTiltDesiredIfAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetControllerTiltDesiredIfAvailable");

	APlayerController_SetControllerTiltDesiredIfAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsControllerTiltActive
// (Simulated, Native, Public)

void APlayerController::IsControllerTiltActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsControllerTiltActive");

	APlayerController_IsControllerTiltActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetRumbleScale
// (Final, Defined, Public)

void APlayerController::GetRumbleScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetRumbleScale");

	APlayerController_GetRumbleScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetRumbleScale
// (Final, Defined, Public)

void APlayerController::SetRumbleScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetRumbleScale");

	APlayerController_SetRumbleScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ReloadProfileSettings
// (Defined, Simulated, Public)

void APlayerController::ReloadProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ReloadProfileSettings");

	APlayerController_ReloadProfileSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetPlayerDataProvider
// (Defined, Simulated, Public)

void APlayerController::SetPlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetPlayerDataProvider");

	APlayerController_SetPlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UnregisterStandardPlayerDataStores
// (Defined, Simulated, Public)

void APlayerController::UnregisterStandardPlayerDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UnregisterStandardPlayerDataStores");

	APlayerController_UnregisterStandardPlayerDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UnregisterPlayerDataStores
// (Defined, Simulated, Public)

void APlayerController::UnregisterPlayerDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UnregisterPlayerDataStores");

	APlayerController_UnregisterPlayerDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RegisterStandardPlayerDataStores
// (Defined, Simulated, Protected)

void APlayerController::RegisterStandardPlayerDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RegisterStandardPlayerDataStores");

	APlayerController_RegisterStandardPlayerDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RegisterCustomPlayerDataStores
// (Defined, Simulated, Protected)

void APlayerController::RegisterCustomPlayerDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RegisterCustomPlayerDataStores");

	APlayerController_RegisterCustomPlayerDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.RegisterPlayerDataStores
// (Final, Defined, Simulated, Public)

void APlayerController::RegisterPlayerDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.RegisterPlayerDataStores");

	APlayerController_RegisterPlayerDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientInitializeDataStores
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientInitializeDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientInitializeDataStores");

	APlayerController_ClientInitializeDataStores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.InitInputSystem
// (Defined, Event, Public)

void APlayerController::InitInputSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.InitInputSystem");

	APlayerController_InitInputSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetOnlineSubsystem
// (Final, Defined, Simulated, Public)

void APlayerController::GetOnlineSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetOnlineSubsystem");

	APlayerController_GetOnlineSubsystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PostControllerIdChange
// (Defined, Public, HasDefaults)

void APlayerController::PostControllerIdChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PostControllerIdChange");

	APlayerController_PostControllerIdChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PreControllerIdChange
// (Defined, Public)

void APlayerController::PreControllerIdChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PreControllerIdChange");

	APlayerController_PreControllerIdChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CleanOutSavedMoves
// (Defined, Public)

void APlayerController::CleanOutSavedMoves()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CleanOutSavedMoves");

	APlayerController_CleanOutSavedMoves_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientReset
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void APlayerController::ClientReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientReset");

	APlayerController_ClientReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.Reset
// (Defined, Public)

void APlayerController::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.Reset");

	APlayerController_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SpawnDefaultHUD
// (Defined, Public)

void APlayerController::SpawnDefaultHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SpawnDefaultHUD");

	APlayerController_SpawnDefaultHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.EnableCheats
// (Defined, Exec, Public)

void APlayerController::EnableCheats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.EnableCheats");

	APlayerController_EnableCheats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.AddCheats
// (Defined, Public)

void APlayerController::AddCheats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.AddCheats");

	APlayerController_AddCheats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.KickWarning
// (Defined, Event, Public)

void APlayerController::KickWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.KickWarning");

	APlayerController_KickWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerGivePawn
// (Defined, Public)

void APlayerController::ServerGivePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerGivePawn");

	APlayerController_ServerGivePawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerShortTimeout
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerController::ServerShortTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerShortTimeout");

	APlayerController_ServerShortTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ResetTimeMargin
// (Defined, Public)

void APlayerController::ResetTimeMargin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ResetTimeMargin");

	APlayerController_ResetTimeMargin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PreRender
// (Event, Public)

void APlayerController::PreRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PreRender");

	APlayerController_PreRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ReceivedPlayer
// (Defined, Simulated, Event, Public)

void APlayerController::ReceivedPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ReceivedPlayer");

	APlayerController_ReceivedPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PostBeginPlay
// (Defined, Simulated, Event, Public)

void APlayerController::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PostBeginPlay");

	APlayerController_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SpawnCoverReplicator
// (Defined, Public)

void APlayerController::SpawnCoverReplicator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SpawnCoverReplicator");

	APlayerController_SpawnCoverReplicator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanUnpauseControllerConnected
// (Defined, Public)

void APlayerController::CanUnpauseControllerConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanUnpauseControllerConnected");

	APlayerController_CanUnpauseControllerConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnControllerChanged
// (Defined, Public)

void APlayerController::OnControllerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnControllerChanged");

	APlayerController_OnControllerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CanUnpauseExternalUI
// (Defined, Public)

void APlayerController::CanUnpauseExternalUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CanUnpauseExternalUI");

	APlayerController_CanUnpauseExternalUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.OnExternalUIChanged
// (Defined, Public)

void APlayerController::OnExternalUIChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.OnExternalUIChanged");

	APlayerController_OnExternalUIChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ForceClearUnpauseDelegates
// (Defined, Public)

void APlayerController::ForceClearUnpauseDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ForceClearUnpauseDelegates");

	APlayerController_ForceClearUnpauseDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.FellOutOfWorld
// (Simulated, Event, Public)

void APlayerController::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.FellOutOfWorld");

	APlayerController_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CleanUpAudioComponents
// (Native, Public)

void APlayerController::CleanUpAudioComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CleanUpAudioComponents");

	APlayerController_CleanUpAudioComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.FindStairRotation
// (Final, Native, Public)

void APlayerController::FindStairRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.FindStairRotation");

	APlayerController_FindStairRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CheckSpeedHack
// (Final, Native, Public)

void APlayerController::CheckSpeedHack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CheckSpeedHack");

	APlayerController_CheckSpeedHack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ServerProcessConvolve
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void APlayerController::ServerProcessConvolve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ServerProcessConvolve");

	APlayerController_ServerProcessConvolve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientConvolve
// (Final, Net, NetReliable, Simulated, Native, Event, Private, NetClient)

void APlayerController::ClientConvolve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientConvolve");

	APlayerController_ClientConvolve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetAudioGroupVolume
// (Exec, Native, Public)

void APlayerController::SetAudioGroupVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetAudioGroupVolume");

	APlayerController_SetAudioGroupVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetAllowMatureLanguage
// (Native, Public)

void APlayerController::SetAllowMatureLanguage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetAllowMatureLanguage");

	APlayerController_SetAllowMatureLanguage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.PasteFromClipboard
// (Native, Public)

void APlayerController::PasteFromClipboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.PasteFromClipboard");

	APlayerController_PasteFromClipboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.CopyToClipboard
// (Native, Public)

void APlayerController::CopyToClipboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.CopyToClipboard");

	APlayerController_CopyToClipboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetDefaultURL
// (Final, Native, Public)

void APlayerController::GetDefaultURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetDefaultURL");

	APlayerController_GetDefaultURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.UpdateURL
// (Final, Native, Public)

void APlayerController::UpdateURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.UpdateURL");

	APlayerController_UpdateURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientTravel
// (Net, NetReliable, Simulated, Native, Event, HasOptionalParms, Public, NetClient)

void APlayerController::ClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientTravel");

	APlayerController_ClientTravel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.IsPositionRelevant
// (Native, HasOptionalParms, Public)

void APlayerController::IsPositionRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.IsPositionRelevant");

	APlayerController_IsPositionRelevant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ConsoleCommand
// (Native, HasOptionalParms, Public)

void APlayerController::ConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ConsoleCommand");

	APlayerController_ConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetServerNetworkAddress
// (Final, Native, Public)

void APlayerController::GetServerNetworkAddress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetServerNetworkAddress");

	APlayerController_GetServerNetworkAddress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.GetPlayerNetworkAddress
// (Final, Native, Public)

void APlayerController::GetPlayerNetworkAddress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.GetPlayerNetworkAddress");

	APlayerController_GetPlayerNetworkAddress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.SetNetSpeed
// (Final, Native, Public)

void APlayerController::SetNetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.SetNetSpeed");

	APlayerController_SetNetSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerController.ClientDrawCoordinateSystem
// (Defined, Net, NetReliable, Simulated, HasOptionalParms, Public, NetClient)

void APlayerController::ClientDrawCoordinateSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerController.ClientDrawCoordinateSystem");

	APlayerController_ClientDrawCoordinateSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.LogParticleActivateSystemCalls
// (Exec, Native, Public)

void UCheatManager::LogParticleActivateSystemCalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.LogParticleActivateSystemCalls");

	UCheatManager_LogParticleActivateSystemCalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.LogPlaySoundCalls
// (Exec, Native, Public)

void UCheatManager::LogPlaySoundCalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.LogPlaySoundCalls");

	UCheatManager_LogPlaySoundCalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.InitCheatManager
// (Public)

void UCheatManager::InitCheatManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.InitCheatManager");

	UCheatManager_InitCheatManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.VerbosePathDebug
// (Defined, Exec, Public, HasDefaults)

void UCheatManager::VerbosePathDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.VerbosePathDebug");

	UCheatManager_VerbosePathDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.TestNavMeshPath
// (Defined, Exec, HasOptionalParms, Public, HasDefaults)

void UCheatManager::TestNavMeshPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.TestNavMeshPath");

	UCheatManager_TestNavMeshPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.SetOnlineDebugLevel
// (Defined, Exec, Public)

void UCheatManager::SetOnlineDebugLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.SetOnlineDebugLevel");

	UCheatManager_SetOnlineDebugLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.TestLevel
// (Defined, Exec, Public)

void UCheatManager::TestLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.TestLevel");

	UCheatManager_TestLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.EnableDebugCamera
// (Defined, Public, HasDefaults)

void UCheatManager::EnableDebugCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.EnableDebugCamera");

	UCheatManager_EnableDebugCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ToggleDebugCamera
// (Defined, Exec, Public)

void UCheatManager::ToggleDebugCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ToggleDebugCamera");

	UCheatManager_ToggleDebugCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.StreamLevelOut
// (Defined, Exec, Public)

void UCheatManager::StreamLevelOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.StreamLevelOut");

	UCheatManager_StreamLevelOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.OnlyLoadLevel
// (Defined, Exec, Public)

void UCheatManager::OnlyLoadLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.OnlyLoadLevel");

	UCheatManager_OnlyLoadLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.StreamLevelIn
// (Defined, Exec, Public)

void UCheatManager::StreamLevelIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.StreamLevelIn");

	UCheatManager_StreamLevelIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.SetLevelStreamingStatus
// (Defined, Public)

void UCheatManager::SetLevelStreamingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.SetLevelStreamingStatus");

	UCheatManager_SetLevelStreamingStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.AllWeapons
// (Exec, Public)

void UCheatManager::AllWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.AllWeapons");

	UCheatManager_AllWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Loaded
// (Defined, Exec, Public)

void UCheatManager::Loaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Loaded");

	UCheatManager_Loaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewClass
// (Defined, Exec, Public)

void UCheatManager::ViewClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewClass");

	UCheatManager_ViewClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewBot
// (Defined, Exec, Public)

void UCheatManager::ViewBot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewBot");

	UCheatManager_ViewBot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewFlag
// (Defined, Exec, Public)

void UCheatManager::ViewFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewFlag");

	UCheatManager_ViewFlag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewActor
// (Defined, Exec, Public)

void UCheatManager::ViewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewActor");

	UCheatManager_ViewActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewPlayer
// (Defined, Exec, Public)

void UCheatManager::ViewPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewPlayer");

	UCheatManager_ViewPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ViewSelf
// (Defined, Exec, HasOptionalParms, Public)

void UCheatManager::ViewSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ViewSelf");

	UCheatManager_ViewSelf_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.RememberSpot
// (Defined, Exec, Public)

void UCheatManager::RememberSpot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.RememberSpot");

	UCheatManager_RememberSpot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.FractureAllMeshesToMaximizeMemoryUsage
// (Defined, Exec, Public)

void UCheatManager::FractureAllMeshesToMaximizeMemoryUsage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.FractureAllMeshesToMaximizeMemoryUsage");

	UCheatManager_FractureAllMeshesToMaximizeMemoryUsage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.FractureAllMeshes
// (Defined, Exec, Public)

void UCheatManager::FractureAllMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.FractureAllMeshes");

	UCheatManager_FractureAllMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.DestroyFractures
// (Defined, Exec, HasOptionalParms, Public)

void UCheatManager::DestroyFractures()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.DestroyFractures");

	UCheatManager_DestroyFractures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.PlayersOnly
// (Defined, Exec, Public)

void UCheatManager::PlayersOnly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.PlayersOnly");

	UCheatManager_PlayersOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.GiveWeapon
// (Defined, Exec, Public)

void UCheatManager::GiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.GiveWeapon");

	UCheatManager_GiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Summon
// (Defined, Exec, Public, HasDefaults)

void UCheatManager::Summon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Summon");

	UCheatManager_Summon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Avatar
// (Defined, Exec, Public)

void UCheatManager::Avatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Avatar");

	UCheatManager_Avatar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.KillPawns
// (Defined, Exec, Public)

void UCheatManager::KillPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.KillPawns");

	UCheatManager_KillPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.KillAllPawns
// (Defined, Public)

void UCheatManager::KillAllPawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.KillAllPawns");

	UCheatManager_KillAllPawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.KillAll
// (Defined, Exec, Public)

void UCheatManager::KillAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.KillAll");

	UCheatManager_KillAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.SetSpeed
// (Defined, Exec, Public)

void UCheatManager::SetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.SetSpeed");

	UCheatManager_SetSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.SetGravity
// (Defined, Exec, Public)

void UCheatManager::SetGravity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.SetGravity");

	UCheatManager_SetGravity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.SetJumpZ
// (Defined, Exec, Public)

void UCheatManager::SetJumpZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.SetJumpZ");

	UCheatManager_SetJumpZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Slomo
// (Defined, Exec, Public)

void UCheatManager::Slomo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Slomo");

	UCheatManager_Slomo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.AffectedByHitEffects
// (Defined, Exec, Public)

void UCheatManager::AffectedByHitEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.AffectedByHitEffects");

	UCheatManager_AffectedByHitEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.God
// (Defined, Exec, Public)

void UCheatManager::God()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.God");

	UCheatManager_God_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.AllAmmo
// (Exec, Public)

void UCheatManager::AllAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.AllAmmo");

	UCheatManager_AllAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Ghost
// (Defined, Exec, Public)

void UCheatManager::Ghost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Ghost");

	UCheatManager_Ghost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Walk
// (Defined, Exec, Public)

void UCheatManager::Walk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Walk");

	UCheatManager_Walk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Fly
// (Defined, Exec, Public)

void UCheatManager::Fly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Fly");

	UCheatManager_Fly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Amphibious
// (Defined, Exec, Public)

void UCheatManager::Amphibious()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Amphibious");

	UCheatManager_Amphibious_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.EndPath
// (Exec, Public)

void UCheatManager::EndPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.EndPath");

	UCheatManager_EndPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ChangeSize
// (Defined, Exec, Public)

void UCheatManager::ChangeSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ChangeSize");

	UCheatManager_ChangeSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.Teleport
// (Defined, Exec, Public, HasDefaults)

void UCheatManager::Teleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.Teleport");

	UCheatManager_Teleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.KillViewedActor
// (Defined, Exec, Public)

void UCheatManager::KillViewedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.KillViewedActor");

	UCheatManager_KillViewedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.WriteToLog
// (Defined, Exec, Public)

void UCheatManager::WriteToLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.WriteToLog");

	UCheatManager_WriteToLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.FreezeFrame
// (Defined, Exec, Public)

void UCheatManager::FreezeFrame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.FreezeFrame");

	UCheatManager_FreezeFrame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.ListDynamicActors
// (Exec, Public)

void UCheatManager::ListDynamicActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.ListDynamicActors");

	UCheatManager_ListDynamicActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.DebugPause
// (Defined, Exec, Public)

void UCheatManager::DebugPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.DebugPause");

	UCheatManager_DebugPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CheatManager.DebugAI
// (Exec, HasOptionalParms, Public)

void UCheatManager::DebugAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CheatManager.DebugAI");

	UCheatManager_DebugAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DamageType.VehicleDamageScalingFor
// (Defined, Static, Public)

void UDamageType::STATIC_VehicleDamageScalingFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DamageType.VehicleDamageScalingFor");

	UDamageType_VehicleDamageScalingFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DamageType.SuicideMessage
// (Defined, Static, Public)

void UDamageType::STATIC_SuicideMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DamageType.SuicideMessage");

	UDamageType_SuicideMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DamageType.DeathMessage
// (Defined, Static, Public)

void UDamageType::STATIC_DeathMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DamageType.DeathMessage");

	UDamageType_DeathMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.IsEmpty
// (Final, Native, Public)

void UDictionary::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.IsEmpty");

	UDictionary_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.Clear
// (Final, Native, Public)

void UDictionary::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.Clear");

	UDictionary_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.ToArray
// (Final, Native, Public, HasOutParms)

void UDictionary::ToArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.ToArray");

	UDictionary_ToArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.GetKeyByValue
// (Final, Native, Public, HasOutParms)

void UDictionary::GetKeyByValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.GetKeyByValue");

	UDictionary_GetKeyByValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.Get
// (Final, Native, Public, HasOutParms)

void UDictionary::Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.Get");

	UDictionary_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.Remove
// (Final, Native, Public)

void UDictionary::Remove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.Remove");

	UDictionary_Remove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Dictionary.Add
// (Final, Native, Public)

void UDictionary::Add()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Dictionary.Add");

	UDictionary_Add_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FaceFXAsset.UnmountFaceFXAnimSet
// (Final, Native, Public)

void UFaceFXAsset::UnmountFaceFXAnimSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FaceFXAsset.UnmountFaceFXAnimSet");

	UFaceFXAsset_UnmountFaceFXAnimSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FaceFXAsset.MountFaceFXAnimSet
// (Final, Native, Public)

void UFaceFXAsset::MountFaceFXAnimSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FaceFXAsset.MountFaceFXAnimSet");

	UFaceFXAsset_MountFaceFXAnimSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Font.GetMaxCharHeight
// (Native, Public)

void UFont::GetMaxCharHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Font.GetMaxCharHeight");

	UFont_GetMaxCharHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Font.GetAuthoredViewportHeight
// (Final, Native, Public)

void UFont::GetAuthoredViewportHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Font.GetAuthoredViewportHeight");

	UFont_GetAuthoredViewportHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Font.GetScalingFactor
// (Native, Public)

void UFont::GetScalingFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Font.GetScalingFactor");

	UFont_GetScalingFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Font.GetResolutionPageIndex
// (Native, Public)

void UFont::GetResolutionPageIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Font.GetResolutionPageIndex");

	UFont_GetResolutionPageIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MultiFont.GetResolutionTestTableIndex
// (Native, Public)

void UMultiFont::GetResolutionTestTableIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MultiFont.GetResolutionTestTableIndex");

	UMultiFont_GetResolutionTestTableIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFeedbackManager.PauseWaveform
// (Defined, Simulated, HasOptionalParms, Public)

void UForceFeedbackManager::PauseWaveform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFeedbackManager.PauseWaveform");

	UForceFeedbackManager_PauseWaveform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFeedbackManager.StopForceFeedbackWaveform
// (Defined, Simulated, HasOptionalParms, Public)

void UForceFeedbackManager::StopForceFeedbackWaveform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFeedbackManager.StopForceFeedbackWaveform");

	UForceFeedbackManager_StopForceFeedbackWaveform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFeedbackManager.PlayForceFeedbackWaveform
// (Defined, Simulated, Public)

void UForceFeedbackManager::PlayForceFeedbackWaveform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFeedbackManager.PlayForceFeedbackWaveform");

	UForceFeedbackManager_PlayForceFeedbackWaveform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEvents.GetFilename
// (Defined, Public)

void UGameplayEvents::GetFilename()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEvents.GetFilename");

	UGameplayEvents_GetFilename_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEvents.CloseStatsFile
// (Public)

void UGameplayEvents::CloseStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEvents.CloseStatsFile");

	UGameplayEvents_CloseStatsFile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEvents.OpenStatsFile
// (Public)

void UGameplayEvents::OpenStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEvents.OpenStatsFile");

	UGameplayEvents_OpenStatsFile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetSessionDuration
// (Native, Public)

void UGameplayEventsReader::GetSessionDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetSessionDuration");

	UGameplayEventsReader_GetSessionDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetSessionEnd
// (Native, Public)

void UGameplayEventsReader::GetSessionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetSessionEnd");

	UGameplayEventsReader_GetSessionEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetSessionStart
// (Native, Public)

void UGameplayEventsReader::GetSessionStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetSessionStart");

	UGameplayEventsReader_GetSessionStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetSessionTimestamp
// (Native, Public)

void UGameplayEventsReader::GetSessionTimestamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetSessionTimestamp");

	UGameplayEventsReader_GetSessionTimestamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetPlatform
// (Native, Public)

void UGameplayEventsReader::GetPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetPlatform");

	UGameplayEventsReader_GetPlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetTitleID
// (Native, Public)

void UGameplayEventsReader::GetTitleID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetTitleID");

	UGameplayEventsReader_GetTitleID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.GetSessionID
// (Native, Public)

void UGameplayEventsReader::GetSessionID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.GetSessionID");

	UGameplayEventsReader_GetSessionID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.IsEventFiltered
// (Defined, Event, Public)

void UGameplayEventsReader::IsEventFiltered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.IsEventFiltered");

	UGameplayEventsReader_IsEventFiltered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.RemoveFilter
// (Defined, Public)

void UGameplayEventsReader::RemoveFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.RemoveFilter");

	UGameplayEventsReader_RemoveFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.AddFilter
// (Defined, Public)

void UGameplayEventsReader::AddFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.AddFilter");

	UGameplayEventsReader_AddFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.ProcessStream
// (Native, Public)

void UGameplayEventsReader::ProcessStream()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.ProcessStream");

	UGameplayEventsReader_ProcessStream_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.SerializeHeader
// (Native, Protected)

void UGameplayEventsReader::SerializeHeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.SerializeHeader");

	UGameplayEventsReader_SerializeHeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.CloseStatsFile
// (Native, Public)

void UGameplayEventsReader::CloseStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.CloseStatsFile");

	UGameplayEventsReader_CloseStatsFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsReader.OpenStatsFile
// (Native, Public)

void UGameplayEventsReader::OpenStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsReader.OpenStatsFile");

	UGameplayEventsReader_OpenStatsFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogSystemPollEvents
// (Native, Public)

void UGameplayEventsWriter::LogSystemPollEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogSystemPollEvents");

	UGameplayEventsWriter_LogSystemPollEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogProjectileIntEvent
// (Native, Public)

void UGameplayEventsWriter::LogProjectileIntEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogProjectileIntEvent");

	UGameplayEventsWriter_LogProjectileIntEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogDamageEvent
// (Native, Public)

void UGameplayEventsWriter::LogDamageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogDamageEvent");

	UGameplayEventsWriter_LogDamageEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogWeaponIntEvent
// (Native, Public)

void UGameplayEventsWriter::LogWeaponIntEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogWeaponIntEvent");

	UGameplayEventsWriter_LogWeaponIntEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerPlayerEvent
// (Native, Public)

void UGameplayEventsWriter::LogPlayerPlayerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerPlayerEvent");

	UGameplayEventsWriter_LogPlayerPlayerEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerKillDeath
// (Native, Public)

void UGameplayEventsWriter::LogPlayerKillDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerKillDeath");

	UGameplayEventsWriter_LogPlayerKillDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogAllPlayerPositionsEvent
// (Native, Public)

void UGameplayEventsWriter::LogAllPlayerPositionsEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogAllPlayerPositionsEvent");

	UGameplayEventsWriter_LogAllPlayerPositionsEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerLoginChange
// (Native, Public)

void UGameplayEventsWriter::LogPlayerLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerLoginChange");

	UGameplayEventsWriter_LogPlayerLoginChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerSpawnEvent
// (Native, Public)

void UGameplayEventsWriter::LogPlayerSpawnEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerSpawnEvent");

	UGameplayEventsWriter_LogPlayerSpawnEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerStringEvent
// (Native, Public)

void UGameplayEventsWriter::LogPlayerStringEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerStringEvent");

	UGameplayEventsWriter_LogPlayerStringEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerFloatEvent
// (Native, Public)

void UGameplayEventsWriter::LogPlayerFloatEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerFloatEvent");

	UGameplayEventsWriter_LogPlayerFloatEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogPlayerIntEvent
// (Native, Public)

void UGameplayEventsWriter::LogPlayerIntEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogPlayerIntEvent");

	UGameplayEventsWriter_LogPlayerIntEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogTeamIntEvent
// (Native, Public)

void UGameplayEventsWriter::LogTeamIntEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogTeamIntEvent");

	UGameplayEventsWriter_LogTeamIntEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogGameStringEvent
// (Native, Public)

void UGameplayEventsWriter::LogGameStringEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogGameStringEvent");

	UGameplayEventsWriter_LogGameStringEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.LogGameIntEvent
// (Native, Public)

void UGameplayEventsWriter::LogGameIntEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.LogGameIntEvent");

	UGameplayEventsWriter_LogGameIntEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.Poll
// (Defined, Public)

void UGameplayEventsWriter::Poll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.Poll");

	UGameplayEventsWriter_Poll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.SerializeFooter
// (Native, Protected)

void UGameplayEventsWriter::SerializeFooter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.SerializeFooter");

	UGameplayEventsWriter_SerializeFooter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.SerializeHeader
// (Native, Protected)

void UGameplayEventsWriter::SerializeHeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.SerializeHeader");

	UGameplayEventsWriter_SerializeHeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.CloseStatsFile
// (Native, Public)

void UGameplayEventsWriter::CloseStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.CloseStatsFile");

	UGameplayEventsWriter_CloseStatsFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.OpenStatsFile
// (Native, Public)

void UGameplayEventsWriter::OpenStatsFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.OpenStatsFile");

	UGameplayEventsWriter_OpenStatsFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.IsSessionInProgress
// (Defined, Public)

void UGameplayEventsWriter::IsSessionInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.IsSessionInProgress");

	UGameplayEventsWriter_IsSessionInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.EndLogging
// (Native, Public)

void UGameplayEventsWriter::EndLogging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.EndLogging");

	UGameplayEventsWriter_EndLogging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameplayEventsWriter.StartLogging
// (Native, HasOptionalParms, Public)

void UGameplayEventsWriter::StartLogging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameplayEventsWriter.StartLogging");

	UGameplayEventsWriter_StartLogging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.WorldPreBeginPlay
// (Public)

void UGameViewportClient::WorldPreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.WorldPreBeginPlay");

	UGameViewportClient_WorldPreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.ClearProgressMessages
// (Defined, Exec, Public)

void UGameViewportClient::ClearProgressMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.ClearProgressMessages");

	UGameViewportClient_ClearProgressMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.SetProgressTime
// (Defined, Exec, Event, Public)

void UGameViewportClient::SetProgressTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.SetProgressTime");

	UGameViewportClient_SetProgressTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.NotifyConnectionError
// (Defined, HasOptionalParms, Public)

void UGameViewportClient::NotifyConnectionError()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.NotifyConnectionError");

	UGameViewportClient_NotifyConnectionError_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.SetProgressMessage
// (Defined, Event, HasOptionalParms, Public)

void UGameViewportClient::SetProgressMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.SetProgressMessage");

	UGameViewportClient_SetProgressMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.NotifyDownloadProgress
// (Public)

void UGameViewportClient::NotifyDownloadProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.NotifyDownloadProgress");

	UGameViewportClient_NotifyDownloadProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.RemoveLocalPlayer
// (Final, Defined, Protected)

void UGameViewportClient::RemoveLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.RemoveLocalPlayer");

	UGameViewportClient_RemoveLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.AddLocalPlayer
// (Final, Defined, Private)

void UGameViewportClient::AddLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.AddLocalPlayer");

	UGameViewportClient_AddLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.NotifyPlayerRemoved
// (Final, Defined, Public)

void UGameViewportClient::NotifyPlayerRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.NotifyPlayerRemoved");

	UGameViewportClient_NotifyPlayerRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.NotifyPlayerAdded
// (Final, Defined, Public)

void UGameViewportClient::NotifyPlayerAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.NotifyPlayerAdded");

	UGameViewportClient_NotifyPlayerAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.DrawTransitionMessage
// (Defined, Public)

void UGameViewportClient::DrawTransitionMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.DrawTransitionMessage");

	UGameViewportClient_DrawTransitionMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.DrawTransition
// (Defined, Public)

void UGameViewportClient::DrawTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.DrawTransition");

	UGameViewportClient_DrawTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.DisplayProgressMessage
// (Defined, Public)

void UGameViewportClient::DisplayProgressMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.DisplayProgressMessage");

	UGameViewportClient_DisplayProgressMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.PostRender
// (Defined, Event, Public)

void UGameViewportClient::PostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.PostRender");

	UGameViewportClient_PostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.DrawTitleSafeArea
// (Defined, Public)

void UGameViewportClient::DrawTitleSafeArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.DrawTitleSafeArea");

	UGameViewportClient_DrawTitleSafeArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.Tick
// (Event, Public)

void UGameViewportClient::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.Tick");

	UGameViewportClient_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CalculatePixelCenter
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void UGameViewportClient::CalculatePixelCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CalculatePixelCenter");

	UGameViewportClient_CalculatePixelCenter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CalculateDeadZoneForAllSides
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void UGameViewportClient::CalculateDeadZoneForAllSides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CalculateDeadZoneForAllSides");

	UGameViewportClient_CalculateDeadZoneForAllSides_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CalculateDeadZone
// (Final, Defined, HasOptionalParms, Public)

void UGameViewportClient::CalculateDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CalculateDeadZone");

	UGameViewportClient_CalculateDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CalculateSafeZoneValues
// (Final, Defined, Public, HasOutParms)

void UGameViewportClient::CalculateSafeZoneValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CalculateSafeZoneValues");

	UGameViewportClient_CalculateSafeZoneValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GetScreenSizeForPlayer
// (Final, Defined, Public, HasOutParms, HasDefaults)

void UGameViewportClient::GetScreenSizeForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GetScreenSizeForPlayer");

	UGameViewportClient_GetScreenSizeForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GetPixelSizeOfScreen
// (Final, Defined, Public, HasOutParms)

void UGameViewportClient::GetPixelSizeOfScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GetPixelSizeOfScreen");

	UGameViewportClient_GetPixelSizeOfScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HasRightSafeZone
// (Final, Defined, Public)

void UGameViewportClient::HasRightSafeZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HasRightSafeZone");

	UGameViewportClient_HasRightSafeZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HasLeftSafeZone
// (Final, Defined, Public)

void UGameViewportClient::HasLeftSafeZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HasLeftSafeZone");

	UGameViewportClient_HasLeftSafeZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HasBottomSafeZone
// (Final, Defined, Public)

void UGameViewportClient::HasBottomSafeZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HasBottomSafeZone");

	UGameViewportClient_HasBottomSafeZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HasTopSafeZone
// (Final, Defined, Public)

void UGameViewportClient::HasTopSafeZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HasTopSafeZone");

	UGameViewportClient_HasTopSafeZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.ConvertLocalPlayerToGamePlayerIndex
// (Final, Defined, Public)

void UGameViewportClient::ConvertLocalPlayerToGamePlayerIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.ConvertLocalPlayerToGamePlayerIndex");

	UGameViewportClient_ConvertLocalPlayerToGamePlayerIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GetSubtitleRegion
// (Defined, Event, Public, HasOutParms)

void UGameViewportClient::GetSubtitleRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GetSubtitleRegion");

	UGameViewportClient_GetSubtitleRegion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.LayoutPlayers
// (Defined, Event, Public)

void UGameViewportClient::LayoutPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.LayoutPlayers");

	UGameViewportClient_LayoutPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.UpdateActiveSplitscreenType
// (Defined, Public)

void UGameViewportClient::UpdateActiveSplitscreenType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.UpdateActiveSplitscreenType");

	UGameViewportClient_UpdateActiveSplitscreenType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GetSplitscreenConfiguration
// (Defined, Public)

void UGameViewportClient::GetSplitscreenConfiguration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GetSplitscreenConfiguration");

	UGameViewportClient_GetSplitscreenConfiguration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.SetSplitscreenConfiguration
// (Defined, Public)

void UGameViewportClient::SetSplitscreenConfiguration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.SetSplitscreenConfiguration");

	UGameViewportClient_SetSplitscreenConfiguration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GameSessionEnded
// (Defined, Event, Public)

void UGameViewportClient::GameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GameSessionEnded");

	UGameViewportClient_GameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.InsertInteraction
// (Defined, Event, HasOptionalParms, Public)

void UGameViewportClient::InsertInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.InsertInteraction");

	UGameViewportClient_InsertInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CreateInitialPlayer
// (Defined, Public, HasOutParms)

void UGameViewportClient::CreateInitialPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CreateInitialPlayer");

	UGameViewportClient_CreateInitialPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.Init
// (Defined, Event, Public, HasOutParms)

void UGameViewportClient::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.Init");

	UGameViewportClient_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.FindPlayerByControllerId
// (Final, Defined, Event, Public)

void UGameViewportClient::FindPlayerByControllerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.FindPlayerByControllerId");

	UGameViewportClient_FindPlayerByControllerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.RemovePlayer
// (Defined, Event, HasOptionalParms, Public)

void UGameViewportClient::RemovePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.RemovePlayer");

	UGameViewportClient_RemovePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.CreatePlayer
// (Defined, Event, Public, HasOutParms)

void UGameViewportClient::CreatePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.CreatePlayer");

	UGameViewportClient_CreatePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.EditBoxFocused
// (Event, Public)

void UGameViewportClient::EditBoxFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.EditBoxFocused");

	UGameViewportClient_EditBoxFocused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.TrackUp
// (Event, Public)

void UGameViewportClient::TrackUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.TrackUp");

	UGameViewportClient_TrackUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.TrackMove
// (Event, Public)

void UGameViewportClient::TrackMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.TrackMove");

	UGameViewportClient_TrackMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.TrackDown
// (Event, Public)

void UGameViewportClient::TrackDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.TrackDown");

	UGameViewportClient_TrackDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.IsConsolePointerAvailable
// (Native, Public)

void UGameViewportClient::IsConsolePointerAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.IsConsolePointerAvailable");

	UGameViewportClient_IsConsolePointerAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.ShouldForceFullscreenViewport
// (Final, Native, Public)

void UGameViewportClient::ShouldForceFullscreenViewport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.ShouldForceFullscreenViewport");

	UGameViewportClient_ShouldForceFullscreenViewport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.IsFullScreenViewport
// (Final, Native, Public)

void UGameViewportClient::IsFullScreenViewport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.IsFullScreenViewport");

	UGameViewportClient_IsFullScreenViewport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.GetViewportSize
// (Final, Native, Public, HasOutParms)

void UGameViewportClient::GetViewportSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.GetViewportSize");

	UGameViewportClient_GetViewportSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.ConsoleCommand
// (Native, Public)

void UGameViewportClient::ConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.ConsoleCommand");

	UGameViewportClient_ConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HandleInputChar
// (Public, Delegate)

void UGameViewportClient::HandleInputChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HandleInputChar");

	UGameViewportClient_HandleInputChar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HandleInputAxis
// (Public, Delegate)

void UGameViewportClient::HandleInputAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HandleInputAxis");

	UGameViewportClient_HandleInputAxis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameViewportClient.HandleInputKey
// (HasOptionalParms, Public, Delegate)

void UGameViewportClient::HandleInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameViewportClient.HandleInputKey");

	UGameViewportClient_HandleInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.ClearCachedFiles
// (Defined, Public)

void UIniLocPatcher::ClearCachedFiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.ClearCachedFiles");

	UIniLocPatcher_ClearCachedFiles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.ClearReadFileDelegate
// (Defined, Public)

void UIniLocPatcher::ClearReadFileDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.ClearReadFileDelegate");

	UIniLocPatcher_ClearReadFileDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.AddReadFileDelegate
// (Defined, Public)

void UIniLocPatcher::AddReadFileDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.AddReadFileDelegate");

	UIniLocPatcher_AddReadFileDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.AddFileToDownload
// (Defined, Public)

void UIniLocPatcher::AddFileToDownload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.AddFileToDownload");

	UIniLocPatcher_AddFileToDownload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.ProcessIniLocFile
// (Native, Public, HasOutParms)

void UIniLocPatcher::ProcessIniLocFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.ProcessIniLocFile");

	UIniLocPatcher_ProcessIniLocFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.OnReadFileComplete
// (Defined, Public)

void UIniLocPatcher::OnReadFileComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.OnReadFileComplete");

	UIniLocPatcher_OnReadFileComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.DownloadFiles
// (Defined, Public)

void UIniLocPatcher::DownloadFiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.DownloadFiles");

	UIniLocPatcher_DownloadFiles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.Init
// (Defined, Public)

void UIniLocPatcher::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.Init");

	UIniLocPatcher_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.IniLocPatcher.OnReadTitleFileComplete
// (Public, Delegate)

void UIniLocPatcher::OnReadTitleFileComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.IniLocPatcher.OnReadTitleFileComplete");

	UIniLocPatcher_OnReadTitleFileComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interface_NavigationHandle.GetSpreadValue
// (Event, Public)

void UInterface_NavigationHandle::GetSpreadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interface_NavigationHandle.GetSpreadValue");

	UInterface_NavigationHandle_GetSpreadValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interface_NavigationHandle.NotifyPathChanged
// (Event, Public)

void UInterface_NavigationHandle::NotifyPathChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interface_NavigationHandle.NotifyPathChanged");

	UInterface_NavigationHandle_NotifyPathChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MapInfo.AllowConsole
// (Defined, Public)

void UMapInfo::AllowConsole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MapInfo.AllowConsole");

	UMapInfo_AllowConsole_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MapInfo.ApplyNavigationMeshChanges
// (Native, Public)

void UMapInfo::ApplyNavigationMeshChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MapInfo.ApplyNavigationMeshChanges");

	UMapInfo_ApplyNavigationMeshChanges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Surface.GetSurfaceHeight
// (Final, Native, Public)

void USurface::GetSurfaceHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Surface.GetSurfaceHeight");

	USurface_GetSurfaceHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Surface.GetSurfaceWidth
// (Final, Native, Public)

void USurface::GetSurfaceWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Surface.GetSurfaceWidth");

	USurface_GetSurfaceWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.SetForceMipLevelsToBeResident
// (Native, Public)

void UMaterialInterface::SetForceMipLevelsToBeResident()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.SetForceMipLevelsToBeResident");

	UMaterialInterface_SetForceMipLevelsToBeResident_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetVectorCurveParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetVectorCurveParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetVectorCurveParameterValue");

	UMaterialInterface_GetVectorCurveParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetVectorParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetVectorParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetVectorParameterValue");

	UMaterialInterface_GetVectorParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetTextureParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetTextureParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetTextureParameterValue");

	UMaterialInterface_GetTextureParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetScalarCurveParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetScalarCurveParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetScalarCurveParameterValue");

	UMaterialInterface_GetScalarCurveParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetScalarParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetScalarParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetScalarParameterValue");

	UMaterialInterface_GetScalarParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetFontParameterValue
// (Native, Public, HasOutParms)

void UMaterialInterface::GetFontParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetFontParameterValue");

	UMaterialInterface_GetFontParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetPhysicalMaterial
// (Final, Native, Public)

void UMaterialInterface::GetPhysicalMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetPhysicalMaterial");

	UMaterialInterface_GetPhysicalMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInterface.GetMaterial
// (Final, Native, Public)

void UMaterialInterface::GetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInterface.GetMaterial");

	UMaterialInterface_GetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.IsEmpty
// (Final, Native, Public)

void UNameDictionary::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.IsEmpty");

	UNameDictionary_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.Clear
// (Final, Native, Public)

void UNameDictionary::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.Clear");

	UNameDictionary_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.ToArray
// (Final, Native, Public, HasOutParms)

void UNameDictionary::ToArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.ToArray");

	UNameDictionary_ToArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.GetKeyByValue
// (Final, Native, Public, HasOutParms)

void UNameDictionary::GetKeyByValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.GetKeyByValue");

	UNameDictionary_GetKeyByValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.Get
// (Final, Native, Public, HasOutParms)

void UNameDictionary::Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.Get");

	UNameDictionary_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.Remove
// (Final, Native, Public)

void UNameDictionary::Remove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.Remove");

	UNameDictionary_Remove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NameDictionary.Add
// (Final, Native, Public)

void UNameDictionary::Add()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NameDictionary.Add");

	UNameDictionary_Add_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetToDefaults
// (Defined, Event, Public)

void UOnlinePlayerStorage::SetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetToDefaults");

	UOnlinePlayerStorage_SetToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.AddSettingFloat
// (Native, Public)

void UOnlinePlayerStorage::AddSettingFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.AddSettingFloat");

	UOnlinePlayerStorage_AddSettingFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.AddSettingInt
// (Native, Public)

void UOnlinePlayerStorage::AddSettingInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.AddSettingInt");

	UOnlinePlayerStorage_AddSettingInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetRangedProfileSettingValue
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetRangedProfileSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetRangedProfileSettingValue");

	UOnlinePlayerStorage_GetRangedProfileSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetRangedProfileSettingValue
// (Native, Public)

void UOnlinePlayerStorage::SetRangedProfileSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetRangedProfileSettingValue");

	UOnlinePlayerStorage_SetRangedProfileSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingRange
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingRange");

	UOnlinePlayerStorage_GetProfileSettingRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingMappingIds
// (Native, Static, Public, HasOutParms)

void UOnlinePlayerStorage::STATIC_GetProfileSettingMappingIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingMappingIds");

	UOnlinePlayerStorage_GetProfileSettingMappingIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingMappingType
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingMappingType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingMappingType");

	UOnlinePlayerStorage_GetProfileSettingMappingType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetProfileSettingValueFloat
// (Native, Public)

void UOnlinePlayerStorage::SetProfileSettingValueFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetProfileSettingValueFloat");

	UOnlinePlayerStorage_SetProfileSettingValueFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetProfileSettingValueInt
// (Native, Public)

void UOnlinePlayerStorage::SetProfileSettingValueInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetProfileSettingValueInt");

	UOnlinePlayerStorage_SetProfileSettingValueInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetProfileSettingValueId
// (Native, Public)

void UOnlinePlayerStorage::SetProfileSettingValueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetProfileSettingValueId");

	UOnlinePlayerStorage_SetProfileSettingValueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValueFloat
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValueFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValueFloat");

	UOnlinePlayerStorage_GetProfileSettingValueFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValueInt
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValueInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValueInt");

	UOnlinePlayerStorage_GetProfileSettingValueInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValueId
// (Native, HasOptionalParms, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValueId");

	UOnlinePlayerStorage_GetProfileSettingValueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetProfileSettingValue
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::SetProfileSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetProfileSettingValue");

	UOnlinePlayerStorage_SetProfileSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.SetProfileSettingValueByName
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::SetProfileSettingValueByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.SetProfileSettingValueByName");

	UOnlinePlayerStorage_SetProfileSettingValueByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValueByName
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValueByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValueByName");

	UOnlinePlayerStorage_GetProfileSettingValueByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValues
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValues");

	UOnlinePlayerStorage_GetProfileSettingValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValueName
// (Native, Public)

void UOnlinePlayerStorage::GetProfileSettingValueName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValueName");

	UOnlinePlayerStorage_GetProfileSettingValueName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingValue");

	UOnlinePlayerStorage_GetProfileSettingValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.IsProfileSettingIdMapped
// (Native, Public)

void UOnlinePlayerStorage::IsProfileSettingIdMapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.IsProfileSettingIdMapped");

	UOnlinePlayerStorage_IsProfileSettingIdMapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.FindProfileMappingIndexByName
// (Final, Native, Public)

void UOnlinePlayerStorage::FindProfileMappingIndexByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.FindProfileMappingIndexByName");

	UOnlinePlayerStorage_FindProfileMappingIndexByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.FindProfileMappingIndex
// (Final, Native, Public)

void UOnlinePlayerStorage::FindProfileMappingIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.FindProfileMappingIndex");

	UOnlinePlayerStorage_FindProfileMappingIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.FindProfileSettingIndex
// (Final, Native, Public)

void UOnlinePlayerStorage::FindProfileSettingIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.FindProfileSettingIndex");

	UOnlinePlayerStorage_FindProfileSettingIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingColumnHeader
// (Native, Public)

void UOnlinePlayerStorage::GetProfileSettingColumnHeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingColumnHeader");

	UOnlinePlayerStorage_GetProfileSettingColumnHeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingName
// (Native, Public)

void UOnlinePlayerStorage::GetProfileSettingName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingName");

	UOnlinePlayerStorage_GetProfileSettingName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.GetProfileSettingId
// (Native, Public, HasOutParms)

void UOnlinePlayerStorage::GetProfileSettingId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.GetProfileSettingId");

	UOnlinePlayerStorage_GetProfileSettingId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerStorage.NotifySettingValueUpdated
// (Public, Delegate)

void UOnlinePlayerStorage::NotifySettingValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerStorage.NotifySettingValueUpdated");

	UOnlinePlayerStorage_NotifySettingValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.ModifyAvailableProfileSettings
// (Event, Public)

void UOnlineProfileSettings::ModifyAvailableProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.ModifyAvailableProfileSettings");

	UOnlineProfileSettings_ModifyAvailableProfileSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.SetDefaultVersionNumber
// (Native, Public)

void UOnlineProfileSettings::SetDefaultVersionNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.SetDefaultVersionNumber");

	UOnlineProfileSettings_SetDefaultVersionNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.GetVersionNumber
// (Native, Public)

void UOnlineProfileSettings::GetVersionNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.GetVersionNumber");

	UOnlineProfileSettings_GetVersionNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.AppendVersionToSettings
// (Native, Public)

void UOnlineProfileSettings::AppendVersionToSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.AppendVersionToSettings");

	UOnlineProfileSettings_AppendVersionToSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.AppendVersionToReadIds
// (Native, Public)

void UOnlineProfileSettings::AppendVersionToReadIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.AppendVersionToReadIds");

	UOnlineProfileSettings_AppendVersionToReadIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.SetToDefaults
// (Native, Event, Public)

void UOnlineProfileSettings::SetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.SetToDefaults");

	UOnlineProfileSettings_SetToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultFloat
// (Native, Public, HasOutParms)

void UOnlineProfileSettings::GetProfileSettingDefaultFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultFloat");

	UOnlineProfileSettings_GetProfileSettingDefaultFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultInt
// (Native, Public, HasOutParms)

void UOnlineProfileSettings::GetProfileSettingDefaultInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultInt");

	UOnlineProfileSettings_GetProfileSettingDefaultInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultId
// (Native, Public, HasOutParms)

void UOnlineProfileSettings::GetProfileSettingDefaultId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultId");

	UOnlineProfileSettings_GetProfileSettingDefaultId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.Reset
// (Defined, Public)

void UOnlinePlaylistManager::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.Reset");

	UOnlinePlaylistManager_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.GetContentIdsFromPlaylist
// (Defined, Public, HasOutParms)

void UOnlinePlaylistManager::GetContentIdsFromPlaylist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.GetContentIdsFromPlaylist");

	UOnlinePlaylistManager_GetContentIdsFromPlaylist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.GetTeamInfoFromPlaylist
// (Defined, Public, HasOutParms)

void UOnlinePlaylistManager::GetTeamInfoFromPlaylist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.GetTeamInfoFromPlaylist");

	UOnlinePlaylistManager_GetTeamInfoFromPlaylist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.HasAnyGameSettings
// (Defined, Public)

void UOnlinePlaylistManager::HasAnyGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.HasAnyGameSettings");

	UOnlinePlaylistManager_HasAnyGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.GetGameSettings
// (Defined, Public)

void UOnlinePlaylistManager::GetGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.GetGameSettings");

	UOnlinePlaylistManager_GetGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.FinalizePlaylistObjects
// (Native, Public)

void UOnlinePlaylistManager::FinalizePlaylistObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.FinalizePlaylistObjects");

	UOnlinePlaylistManager_FinalizePlaylistObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.OnReadTitleFileComplete
// (Defined, Public)

void UOnlinePlaylistManager::OnReadTitleFileComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.OnReadTitleFileComplete");

	UOnlinePlaylistManager_OnReadTitleFileComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.DetermineFilesToDownload
// (Native, Public)

void UOnlinePlaylistManager::DetermineFilesToDownload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.DetermineFilesToDownload");

	UOnlinePlaylistManager_DetermineFilesToDownload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.DownloadPlaylist
// (Defined, Public)

void UOnlinePlaylistManager::DownloadPlaylist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.DownloadPlaylist");

	UOnlinePlaylistManager_DownloadPlaylist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlaylistManager.OnReadPlaylistComplete
// (Public, Delegate)

void UOnlinePlaylistManager::OnReadPlaylistComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlaylistManager.OnReadPlaylistComplete");

	UOnlinePlaylistManager_OnReadPlaylistComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStats.GetViewName
// (Native, Public)

void UOnlineStats::GetViewName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStats.GetViewName");

	UOnlineStats_GetViewName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStats.GetViewId
// (Native, Public, HasOutParms)

void UOnlineStats::GetViewId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStats.GetViewId");

	UOnlineStats_GetViewId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.GetRankForPlayer
// (Native, Public)

void UOnlineStatsRead::GetRankForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.GetRankForPlayer");

	UOnlineStatsRead_GetRankForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.AddPlayer
// (Native, Public)

void UOnlineStatsRead::AddPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.AddPlayer");

	UOnlineStatsRead_AddPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.SetFloatStatValueForPlayer
// (Native, Public)

void UOnlineStatsRead::SetFloatStatValueForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.SetFloatStatValueForPlayer");

	UOnlineStatsRead_SetFloatStatValueForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.GetFloatStatValueForPlayer
// (Native, Public, HasOutParms)

void UOnlineStatsRead::GetFloatStatValueForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.GetFloatStatValueForPlayer");

	UOnlineStatsRead_GetFloatStatValueForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.SetIntStatValueForPlayer
// (Native, Public)

void UOnlineStatsRead::SetIntStatValueForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.SetIntStatValueForPlayer");

	UOnlineStatsRead_SetIntStatValueForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.GetIntStatValueForPlayer
// (Native, Public, HasOutParms)

void UOnlineStatsRead::GetIntStatValueForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.GetIntStatValueForPlayer");

	UOnlineStatsRead_GetIntStatValueForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsRead.OnReadComplete
// (Event, Public)

void UOnlineStatsRead::OnReadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsRead.OnReadComplete");

	UOnlineStatsRead_OnReadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.DecrementIntStat
// (Native, HasOptionalParms, Public)

void UOnlineStatsWrite::DecrementIntStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.DecrementIntStat");

	UOnlineStatsWrite_DecrementIntStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.DecrementFloatStat
// (Native, HasOptionalParms, Public)

void UOnlineStatsWrite::DecrementFloatStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.DecrementFloatStat");

	UOnlineStatsWrite_DecrementFloatStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.IncrementIntStat
// (Native, HasOptionalParms, Public)

void UOnlineStatsWrite::IncrementIntStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.IncrementIntStat");

	UOnlineStatsWrite_IncrementIntStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.IncrementFloatStat
// (Native, HasOptionalParms, Public)

void UOnlineStatsWrite::IncrementFloatStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.IncrementFloatStat");

	UOnlineStatsWrite_IncrementFloatStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.SetByteStat
// (Native, Public)

void UOnlineStatsWrite::SetByteStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.SetByteStat");

	UOnlineStatsWrite_SetByteStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.SetStringStat
// (Native, Public)

void UOnlineStatsWrite::SetStringStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.SetStringStat");

	UOnlineStatsWrite_SetStringStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.SetIntStat
// (Native, Public)

void UOnlineStatsWrite::SetIntStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.SetIntStat");

	UOnlineStatsWrite_SetIntStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.SetFloatStat
// (Native, Public)

void UOnlineStatsWrite::SetFloatStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.SetFloatStat");

	UOnlineStatsWrite_SetFloatStat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.GetStatName
// (Native, Public)

void UOnlineStatsWrite::GetStatName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.GetStatName");

	UOnlineStatsWrite_GetStatName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.GetStatId
// (Native, Public, HasOutParms)

void UOnlineStatsWrite::GetStatId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.GetStatId");

	UOnlineStatsWrite_GetStatId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsWrite.OnStatsWriteComplete
// (Public, Delegate)

void UOnlineStatsWrite::OnStatsWriteComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsWrite.OnStatsWriteComplete");

	UOnlineStatsWrite_OnStatsWriteComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Player.SwitchController
// (Native, Public)

void UPlayer::SwitchController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Player.SwitchController");

	UPlayer_SwitchController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.PostHUDRender
// (Event, Public)

void ULocalPlayer::PostHUDRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.PostHUDRender");

	ULocalPlayer_PostHUDRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.PreHUDRender
// (Event, Public)

void ULocalPlayer::PreHUDRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.PreHUDRender");

	ULocalPlayer_PreHUDRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.GetNickname
// (Final, Defined, Event, Public)

void ULocalPlayer::GetNickname()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.GetNickname");

	ULocalPlayer_GetNickname_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.GetUniqueNetId
// (Final, Defined, Event, Public, HasDefaults)

void ULocalPlayer::GetUniqueNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.GetUniqueNetId");

	ULocalPlayer_GetUniqueNetId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.DeProject
// (Final, Native, Public, HasOutParms)

void ULocalPlayer::DeProject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.DeProject");

	ULocalPlayer_DeProject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.TouchPlayerPostProcessChain
// (Native, Public)

void ULocalPlayer::TouchPlayerPostProcessChain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.TouchPlayerPostProcessChain");

	ULocalPlayer_TouchPlayerPostProcessChain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.GetPostProcessChain
// (Native, Public)

void ULocalPlayer::GetPostProcessChain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.GetPostProcessChain");

	ULocalPlayer_GetPostProcessChain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.RemoveAllPostProcessingChains
// (Native, Public)

void ULocalPlayer::RemoveAllPostProcessingChains()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.RemoveAllPostProcessingChains");

	ULocalPlayer_RemoveAllPostProcessingChains_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.RemovePostProcessingChain
// (Native, Public)

void ULocalPlayer::RemovePostProcessingChain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.RemovePostProcessingChain");

	ULocalPlayer_RemovePostProcessingChain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.InsertPostProcessingChain
// (Native, Public)

void ULocalPlayer::InsertPostProcessingChain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.InsertPostProcessingChain");

	ULocalPlayer_InsertPostProcessingChain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.SetControllerId
// (Final, Defined, Public)

void ULocalPlayer::SetControllerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.SetControllerId");

	ULocalPlayer_SetControllerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.ClearPostProcessSettingsOverride
// (Defined, Simulated, HasOptionalParms, Public)

void ULocalPlayer::ClearPostProcessSettingsOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.ClearPostProcessSettingsOverride");

	ULocalPlayer_ClearPostProcessSettingsOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.UpdateOverridePostProcessSettings
// (Defined, Simulated, Public)

void ULocalPlayer::UpdateOverridePostProcessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.UpdateOverridePostProcessSettings");

	ULocalPlayer_UpdateOverridePostProcessSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.OverridePostProcessSettings
// (Defined, Simulated, Public)

void ULocalPlayer::OverridePostProcessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.OverridePostProcessSettings");

	ULocalPlayer_OverridePostProcessSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.GetActorVisibility
// (Final, Native, Public)

void ULocalPlayer::GetActorVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.GetActorVisibility");

	ULocalPlayer_GetActorVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.IsSphereVisible
// (Final, Native, Public)

void ULocalPlayer::IsSphereVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.IsSphereVisible");

	ULocalPlayer_IsSphereVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.SendSplitLeave
// (Final, Native, Public)

void ULocalPlayer::SendSplitLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.SendSplitLeave");

	ULocalPlayer_SendSplitLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.SendSplitJoin
// (Final, Native, Public)

void ULocalPlayer::SendSplitJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.SendSplitJoin");

	ULocalPlayer_SendSplitJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalPlayer.SpawnPlayActor
// (Final, Native, Public, HasOutParms)

void ULocalPlayer::SpawnPlayActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalPlayer.SpawnPlayActor");

	ULocalPlayer_SpawnPlayActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PostProcessChain.FindPostProcessEffect
// (Final, Defined, Public)

void UPostProcessChain::FindPostProcessEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PostProcessChain.FindPostProcessEffect");

	UPostProcessChain_FindPostProcessEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ReachSpec.IsBlockedFor
// (Defined, Public)

void UReachSpec::IsBlockedFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ReachSpec.IsBlockedFor");

	UReachSpec_IsBlockedFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ReachSpec.GetDirection
// (Final, Native, Public)

void UReachSpec::GetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ReachSpec.GetDirection");

	UReachSpec_GetDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ReachSpec.GetEnd
// (Final, Native, Public)

void UReachSpec::GetEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ReachSpec.GetEnd");

	UReachSpec_GetEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ReachSpec.CostFor
// (Final, Native, Public)

void UReachSpec::CostFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ReachSpec.CostFor");

	UReachSpec_CostFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.GetDebugString
// (Defined, Public)

void USavedMove::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.GetDebugString");

	USavedMove_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.SetFlags
// (Defined, Static, Public)

void USavedMove::STATIC_SetFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.SetFlags");

	USavedMove_SetFlags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.CompressedFlags
// (Defined, Public)

void USavedMove::CompressedFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.CompressedFlags");

	USavedMove_CompressedFlags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.ResetMoveFor
// (Defined, Public)

void USavedMove::ResetMoveFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.ResetMoveFor");

	USavedMove_ResetMoveFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.PrepMoveFor
// (Defined, Public)

void USavedMove::PrepMoveFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.PrepMoveFor");

	USavedMove_PrepMoveFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.SetMoveFor
// (Defined, Public)

void USavedMove::SetMoveFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.SetMoveFor");

	USavedMove_SetMoveFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.CanCombineWith
// (Defined, Public)

void USavedMove::CanCombineWith()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.CanCombineWith");

	USavedMove_CanCombineWith_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.SetInitialPosition
// (Defined, Public)

void USavedMove::SetInitialPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.SetInitialPosition");

	USavedMove_SetInitialPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.GetStartLocation
// (Defined, Public)

void USavedMove::GetStartLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.GetStartLocation");

	USavedMove_GetStartLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.IsImportantMove
// (Defined, Public, HasDefaults)

void USavedMove::IsImportantMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.IsImportantMove");

	USavedMove_IsImportantMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.PostUpdate
// (Defined, Public)

void USavedMove::PostUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.PostUpdate");

	USavedMove_PostUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SavedMove.Clear
// (Defined, Public)

void USavedMove::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SavedMove.Clear");

	USavedMove_Clear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameSettings.UpdateGameSpyCustomKeys
// (Event, Public)

void UOnlineGameSettings::UpdateGameSpyCustomKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameSettings.UpdateGameSpyCustomKeys");

	UOnlineGameSettings_UpdateGameSpyCustomKeys_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameSettings.MatchesGameFilter
// (Defined, Event, Public)

void UOnlineGameSettings::MatchesGameFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameSettings.MatchesGameFilter");

	UOnlineGameSettings_MatchesGameFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundCue.CalcMaxAudibleDistance
// (Native, Public)

void USoundCue::CalcMaxAudibleDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundCue.CalcMaxAudibleDistance");

	USoundCue_CalcMaxAudibleDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundCue.GetCueDuration
// (Native, Public)

void USoundCue::GetCueDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundCue.GetCueDuration");

	USoundCue_GetCueDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystem.SetLODDistance
// (Native, Public)

void UParticleSystem::SetLODDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystem.SetLODDistance");

	UParticleSystem_SetLODDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystem.SetCurrentLODMethod
// (Native, Public)

void UParticleSystem::SetCurrentLODMethod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystem.SetCurrentLODMethod");

	UParticleSystem_SetCurrentLODMethod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystem.GetLODDistance
// (Native, Public)

void UParticleSystem::GetLODDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystem.GetLODDistance");

	UParticleSystem_GetLODDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystem.GetLODLevelCount
// (Native, Public)

void UParticleSystem::GetLODLevelCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystem.GetLODLevelCount");

	UParticleSystem_GetLODLevelCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystem.GetCurrentLODMethod
// (Native, Public)

void UParticleSystem::GetCurrentLODMethod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystem.GetCurrentLODMethod");

	UParticleSystem_GetCurrentLODMethod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.IsEmpty
// (Final, Native, Public)

void UStringDictionary::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.IsEmpty");

	UStringDictionary_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.Clear
// (Final, Native, Public)

void UStringDictionary::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.Clear");

	UStringDictionary_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.ToArrayWithKeys
// (Final, Native, Public, HasOutParms)

void UStringDictionary::ToArrayWithKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.ToArrayWithKeys");

	UStringDictionary_ToArrayWithKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.ToArray
// (Final, Native, Public, HasOutParms)

void UStringDictionary::ToArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.ToArray");

	UStringDictionary_ToArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.GetKeyByValue
// (Final, Native, Public, HasOutParms)

void UStringDictionary::GetKeyByValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.GetKeyByValue");

	UStringDictionary_GetKeyByValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.Get
// (Final, Native, Public, HasOutParms)

void UStringDictionary::Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.Get");

	UStringDictionary_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.Remove
// (Final, Native, Public)

void UStringDictionary::Remove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.Remove");

	UStringDictionary_Remove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.StringDictionary.Add
// (Final, Native, Public)

void UStringDictionary::Add()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.StringDictionary.Add");

	UStringDictionary_Add_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2D.Create
// (Final, Native, Static, HasOptionalParms, Public)

void UTexture2D::STATIC_Create()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2D.Create");

	UTexture2D_Create_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2D.SetForceMipLevelsToBeResident
// (Final, Native, Public)

void UTexture2D::SetForceMipLevelsToBeResident()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2D.SetForceMipLevelsToBeResident");

	UTexture2D_SetForceMipLevelsToBeResident_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EnvironmentVolume.SetSplitNavMesh
// (Final, Native, Public)

void AEnvironmentVolume::SetSplitNavMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EnvironmentVolume.SetSplitNavMesh");

	AEnvironmentVolume_SetSplitNavMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.CanFireWeapon
// (Defined, Public)

void AAIController::CanFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.CanFireWeapon");

	AAIController_CanFireWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.ShouldRefire
// (Public)

void AAIController::ShouldRefire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.ShouldRefire");

	AAIController_ShouldRefire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.NotifyWeaponFinishedFiring
// (Public)

void AAIController::NotifyWeaponFinishedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.NotifyWeaponFinishedFiring");

	AAIController_NotifyWeaponFinishedFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.NotifyWeaponFired
// (Public)

void AAIController::NotifyWeaponFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.NotifyWeaponFired");

	AAIController_NotifyWeaponFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.OnAIMoveToActor
// (Defined, Public)

void AAIController::OnAIMoveToActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.OnAIMoveToActor");

	AAIController_OnAIMoveToActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.GetPlayerViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void AAIController::GetPlayerViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.GetPlayerViewPoint");

	AAIController_GetPlayerViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.SetTeam
// (Defined, Event, Public)

void AAIController::SetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.SetTeam");

	AAIController_SetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.PriorityObjective
// (Defined, Public)

void AAIController::PriorityObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.PriorityObjective");

	AAIController_PriorityObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.GetOrders
// (Defined, Public)

void AAIController::GetOrders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.GetOrders");

	AAIController_GetOrders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.GetOrderObject
// (Defined, Public)

void AAIController::GetOrderObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.GetOrderObject");

	AAIController_GetOrderObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.SetOrders
// (Public)

void AAIController::SetOrders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.SetOrders");

	AAIController_SetOrders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AAIController::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.DisplayDebug");

	AAIController_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.Reset
// (Defined, Public)

void AAIController::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.Reset");

	AAIController_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AIController.PreBeginPlay
// (Defined, Event, Public)

void AAIController::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AIController.PreBeginPlay");

	AAIController_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CrowdAgentBase.GetSpreadValue
// (Defined, Event, Public)

void ACrowdAgentBase::GetSpreadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CrowdAgentBase.GetSpreadValue");

	ACrowdAgentBase_GetSpreadValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CrowdAgentBase.NotifyPathChanged
// (Event, Public)

void ACrowdAgentBase::NotifyPathChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CrowdAgentBase.NotifyPathChanged");

	ACrowdAgentBase_NotifyPathChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshObstacle.SetEnabled
// (Defined, Public)

void ANavMeshObstacle::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshObstacle.SetEnabled");

	ANavMeshObstacle_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshObstacle.OnToggle
// (Defined, Simulated, Public)

void ANavMeshObstacle::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshObstacle.OnToggle");

	ANavMeshObstacle_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshObstacle.PostBeginPlay
// (Defined, Simulated, Public)

void ANavMeshObstacle::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshObstacle.PostBeginPlay");

	ANavMeshObstacle_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshObstacle.UnRegisterObstacle
// (Native, Public)

void ANavMeshObstacle::UnRegisterObstacle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshObstacle.UnRegisterObstacle");

	ANavMeshObstacle_UnRegisterObstacle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshObstacle.RegisterObstacle
// (Native, Public)

void ANavMeshObstacle::RegisterObstacle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshObstacle.RegisterObstacle");

	ANavMeshObstacle_RegisterObstacle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interface_NavMeshPathSwitch.AIActivateSwitch
// (Event, Public)

void UInterface_NavMeshPathSwitch::AIActivateSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interface_NavMeshPathSwitch.AIActivateSwitch");

	UInterface_NavMeshPathSwitch_AIActivateSwitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.IsBoxOnNavMesh
// (Native, Public)

void UNavigationHandle::IsBoxOnNavMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.IsBoxOnNavMesh");

	UNavigationHandle_IsBoxOnNavMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetFirstMoveLocation
// (Native, Public)

void UNavigationHandle::GetFirstMoveLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetFirstMoveLocation");

	UNavigationHandle_GetFirstMoveLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.IsAnchorInescapable
// (Native, Public)

void UNavigationHandle::IsAnchorInescapable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.IsAnchorInescapable");

	UNavigationHandle_IsAnchorInescapable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.LimitPathCacheDistance
// (Native, Public)

void UNavigationHandle::LimitPathCacheDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.LimitPathCacheDistance");

	UNavigationHandle_LimitPathCacheDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetValidPositionsForBox
// (Native, HasOptionalParms, Public, HasOutParms)

void UNavigationHandle::GetValidPositionsForBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetValidPositionsForBox");

	UNavigationHandle_GetValidPositionsForBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetAllPolyCentersWithinBounds
// (Native, Public, HasOutParms)

void UNavigationHandle::GetAllPolyCentersWithinBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetAllPolyCentersWithinBounds");

	UNavigationHandle_GetAllPolyCentersWithinBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.DrawPathCache
// (Native, HasOptionalParms, Public)

void UNavigationHandle::DrawPathCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.DrawPathCache");

	UNavigationHandle_DrawPathCache_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.ActorReachable
// (Native, Public)

void UNavigationHandle::ActorReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.ActorReachable");

	UNavigationHandle_ActorReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.PointReachable
// (Native, Public)

void UNavigationHandle::PointReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.PointReachable");

	UNavigationHandle_PointReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetNearestNavMeshPoint
// (Native, HasOptionalParms, Public, HasOutParms)

void UNavigationHandle::GetNearestNavMeshPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetNearestNavMeshPoint");

	UNavigationHandle_GetNearestNavMeshPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.PointCheck
// (Native, Public)

void UNavigationHandle::PointCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.PointCheck");

	UNavigationHandle_PointCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.LineCheck
// (Native, HasOptionalParms, Public, HasOutParms)

void UNavigationHandle::LineCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.LineCheck");

	UNavigationHandle_LineCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.ObstaclePointCheck
// (Final, Native, Static, Public)

void UNavigationHandle::STATIC_ObstaclePointCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.ObstaclePointCheck");

	UNavigationHandle_ObstaclePointCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.ObstacleLineCheck
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void UNavigationHandle::STATIC_ObstacleLineCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.ObstacleLineCheck");

	UNavigationHandle_ObstacleLineCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.SuggestMovePreparation
// (Native, Public)

void UNavigationHandle::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.SuggestMovePreparation");

	UNavigationHandle_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.FindPath
// (Native, HasOptionalParms, Public, HasOutParms)

void UNavigationHandle::FindPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.FindPath");

	UNavigationHandle_FindPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.ComputeValidFinalDestination
// (Native, Public, HasOutParms)

void UNavigationHandle::ComputeValidFinalDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.ComputeValidFinalDestination");

	UNavigationHandle_ComputeValidFinalDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.SetFinalDestination
// (Native, Public)

void UNavigationHandle::SetFinalDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.SetFinalDestination");

	UNavigationHandle_SetFinalDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetNextMoveLocation
// (Native, Public, HasOutParms)

void UNavigationHandle::GetNextMoveLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetNextMoveLocation");

	UNavigationHandle_GetNextMoveLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetPylonFromPos
// (Native, Static, Public)

void UNavigationHandle::STATIC_GetPylonFromPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetPylonFromPos");

	UNavigationHandle_GetPylonFromPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.FindPylon
// (Native, Public)

void UNavigationHandle::FindPylon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.FindPylon");

	UNavigationHandle_FindPylon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetBestUnfinishedPathPoint
// (Native, Public)

void UNavigationHandle::GetBestUnfinishedPathPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetBestUnfinishedPathPoint");

	UNavigationHandle_GetBestUnfinishedPathPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.PathCache_RemoveIndex
// (Native, HasOptionalParms, Public)

void UNavigationHandle::PathCache_RemoveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.PathCache_RemoveIndex");

	UNavigationHandle_PathCache_RemoveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.PathCache_GetGoalPoint
// (Native, Public)

void UNavigationHandle::PathCache_GetGoalPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.PathCache_GetGoalPoint");

	UNavigationHandle_PathCache_GetGoalPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.PathCache_Empty
// (Native, Public)

void UNavigationHandle::PathCache_Empty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.PathCache_Empty");

	UNavigationHandle_PathCache_Empty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.GetPathCacheLength
// (Defined, Public)

void UNavigationHandle::GetPathCacheLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.GetPathCacheLength");

	UNavigationHandle_GetPathCacheLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.CreatePathGoalEvaluator
// (Defined, Public)

void UNavigationHandle::CreatePathGoalEvaluator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.CreatePathGoalEvaluator");

	UNavigationHandle_CreatePathGoalEvaluator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.CreatePathConstraint
// (Defined, Public)

void UNavigationHandle::CreatePathConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.CreatePathConstraint");

	UNavigationHandle_CreatePathConstraint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.AddGoalEvaluator
// (Native, Public)

void UNavigationHandle::AddGoalEvaluator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.AddGoalEvaluator");

	UNavigationHandle_AddGoalEvaluator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.AddPathConstraint
// (Native, Public)

void UNavigationHandle::AddPathConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.AddPathConstraint");

	UNavigationHandle_AddPathConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavigationHandle.ClearConstraints
// (Native, Public)

void UNavigationHandle::ClearConstraints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavigationHandle.ClearConstraints");

	UNavigationHandle_ClearConstraints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPathConstraint.GetDumpString
// (Defined, Event, Public)

void UNavMeshPathConstraint::GetDumpString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPathConstraint.GetDumpString");

	UNavMeshPathConstraint_GetDumpString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPathConstraint.Recycle
// (Defined, Event, Public)

void UNavMeshPathConstraint::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPathConstraint.Recycle");

	UNavMeshPathConstraint_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_AlongLine.Recycle
// (Defined, Public)

void UNavMeshPath_AlongLine::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_AlongLine.Recycle");

	UNavMeshPath_AlongLine_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_AlongLine.AlongLine
// (Defined, Static, Public)

void UNavMeshPath_AlongLine::STATIC_AlongLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_AlongLine.AlongLine");

	UNavMeshPath_AlongLine_AlongLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_EnforceTwoWayEdges.EnforceTwoWayEdges
// (Defined, Static, Public)

void UNavMeshPath_EnforceTwoWayEdges::STATIC_EnforceTwoWayEdges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_EnforceTwoWayEdges.EnforceTwoWayEdges");

	UNavMeshPath_EnforceTwoWayEdges_EnforceTwoWayEdges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.Recycle
// (Defined, Public)

void UNavMeshPath_MinDistBetweenSpecsOfType::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.Recycle");

	UNavMeshPath_MinDistBetweenSpecsOfType_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.EnforceMinDist
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshPath_MinDistBetweenSpecsOfType::STATIC_EnforceMinDist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.EnforceMinDist");

	UNavMeshPath_MinDistBetweenSpecsOfType_EnforceMinDist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_Toward.Recycle
// (Defined, Public)

void UNavMeshPath_Toward::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_Toward.Recycle");

	UNavMeshPath_Toward_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_Toward.TowardPoint
// (Defined, Static, Public)

void UNavMeshPath_Toward::STATIC_TowardPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_Toward.TowardPoint");

	UNavMeshPath_Toward_TowardPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_Toward.TowardGoal
// (Defined, Static, Public)

void UNavMeshPath_Toward::STATIC_TowardGoal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_Toward.TowardGoal");

	UNavMeshPath_Toward_TowardGoal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_WithinDistanceEnvelope.Recycle
// (Defined, Public)

void UNavMeshPath_WithinDistanceEnvelope::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_WithinDistanceEnvelope.Recycle");

	UNavMeshPath_WithinDistanceEnvelope_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_WithinDistanceEnvelope.StayWithinEnvelopeToLoc
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshPath_WithinDistanceEnvelope::STATIC_StayWithinEnvelopeToLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_WithinDistanceEnvelope.StayWithinEnvelopeToLoc");

	UNavMeshPath_WithinDistanceEnvelope_StayWithinEnvelopeToLoc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_WithinTraversalDist.Recycle
// (Defined, Public)

void UNavMeshPath_WithinTraversalDist::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_WithinTraversalDist.Recycle");

	UNavMeshPath_WithinTraversalDist_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPath_WithinTraversalDist.DontExceedMaxDist
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshPath_WithinTraversalDist::STATIC_DontExceedMaxDist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPath_WithinTraversalDist.DontExceedMaxDist");

	UNavMeshPath_WithinTraversalDist_DontExceedMaxDist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPathGoalEvaluator.GetDumpString
// (Defined, Event, Public)

void UNavMeshPathGoalEvaluator::GetDumpString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPathGoalEvaluator.GetDumpString");

	UNavMeshPathGoalEvaluator_GetDumpString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshPathGoalEvaluator.Recycle
// (Defined, Event, Public)

void UNavMeshPathGoalEvaluator::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshPathGoalEvaluator.Recycle");

	UNavMeshPathGoalEvaluator_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_At.Recycle
// (Defined, Public)

void UNavMeshGoal_At::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_At.Recycle");

	UNavMeshGoal_At_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_At.AtLocation
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshGoal_At::STATIC_AtLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_At.AtLocation");

	UNavMeshGoal_At_AtLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_At.AtActor
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshGoal_At::STATIC_AtActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_At.AtActor");

	UNavMeshGoal_At_AtActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_At.RecycleNative
// (Native, Public)

void UNavMeshGoal_At::RecycleNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_At.RecycleNative");

	UNavMeshGoal_At_RecycleNative_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_ClosestActorInList.RecycleInternal
// (Native, Public)

void UNavMeshGoal_ClosestActorInList::RecycleInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_ClosestActorInList.RecycleInternal");

	UNavMeshGoal_ClosestActorInList_RecycleInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_ClosestActorInList.Recycle
// (Defined, Event, Public)

void UNavMeshGoal_ClosestActorInList::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_ClosestActorInList.Recycle");

	UNavMeshGoal_ClosestActorInList_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_ClosestActorInList.ClosestActorInList
// (Defined, Static, Public, HasOutParms)

void UNavMeshGoal_ClosestActorInList::STATIC_ClosestActorInList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_ClosestActorInList.ClosestActorInList");

	UNavMeshGoal_ClosestActorInList_ClosestActorInList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_Null.Recycle
// (Defined, Public)

void UNavMeshGoal_Null::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_Null.Recycle");

	UNavMeshGoal_Null_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_Null.RecycleNative
// (Native, Public)

void UNavMeshGoal_Null::RecycleNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_Null.RecycleNative");

	UNavMeshGoal_Null_RecycleNative_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_Null.GoUntilBust
// (Defined, Static, HasOptionalParms, Public)

void UNavMeshGoal_Null::STATIC_GoUntilBust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_Null.GoUntilBust");

	UNavMeshGoal_Null_GoUntilBust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_PolyEncompassesAI.Recycle
// (Defined, Public)

void UNavMeshGoal_PolyEncompassesAI::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_PolyEncompassesAI.Recycle");

	UNavMeshGoal_PolyEncompassesAI_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NavMeshGoal_PolyEncompassesAI.MakeSureAIFits
// (Defined, Static, Public)

void UNavMeshGoal_PolyEncompassesAI::STATIC_MakeSureAIFits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NavMeshGoal_PolyEncompassesAI.MakeSureAIFits");

	UNavMeshGoal_PolyEncompassesAI_MakeSureAIFits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathConstraint.GetDumpString
// (Defined, Event, Public)

void UPathConstraint::GetDumpString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathConstraint.GetDumpString");

	UPathConstraint_GetDumpString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathConstraint.Recycle
// (Defined, Event, Public)

void UPathConstraint::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathConstraint.Recycle");

	UPathConstraint_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_AlongLine.Recycle
// (Defined, Public)

void UPath_AlongLine::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_AlongLine.Recycle");

	UPath_AlongLine_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_AlongLine.AlongLine
// (Defined, Static, Public)

void UPath_AlongLine::STATIC_AlongLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_AlongLine.AlongLine");

	UPath_AlongLine_AlongLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_AvoidInEscapableNodes.Recycle
// (Defined, Public)

void UPath_AvoidInEscapableNodes::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_AvoidInEscapableNodes.Recycle");

	UPath_AvoidInEscapableNodes_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_AvoidInEscapableNodes.DontGetStuck
// (Defined, Static, Public)

void UPath_AvoidInEscapableNodes::STATIC_DontGetStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_AvoidInEscapableNodes.DontGetStuck");

	UPath_AvoidInEscapableNodes_DontGetStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_AvoidInEscapableNodes.CachePawnReacFlags
// (Final, Native, Private)

void UPath_AvoidInEscapableNodes::CachePawnReacFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_AvoidInEscapableNodes.CachePawnReacFlags");

	UPath_AvoidInEscapableNodes_CachePawnReacFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_MinDistBetweenSpecsOfType.Recycle
// (Defined, Public)

void UPath_MinDistBetweenSpecsOfType::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_MinDistBetweenSpecsOfType.Recycle");

	UPath_MinDistBetweenSpecsOfType_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_MinDistBetweenSpecsOfType.EnforceMinDist
// (Defined, Static, HasOptionalParms, Public)

void UPath_MinDistBetweenSpecsOfType::STATIC_EnforceMinDist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_MinDistBetweenSpecsOfType.EnforceMinDist");

	UPath_MinDistBetweenSpecsOfType_EnforceMinDist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_TowardGoal.Recycle
// (Defined, Public)

void UPath_TowardGoal::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_TowardGoal.Recycle");

	UPath_TowardGoal_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_TowardGoal.TowardGoal
// (Defined, Static, Public)

void UPath_TowardGoal::STATIC_TowardGoal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_TowardGoal.TowardGoal");

	UPath_TowardGoal_TowardGoal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_TowardPoint.Recycle
// (Defined, Public)

void UPath_TowardPoint::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_TowardPoint.Recycle");

	UPath_TowardPoint_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_TowardPoint.TowardPoint
// (Defined, Static, Public)

void UPath_TowardPoint::STATIC_TowardPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_TowardPoint.TowardPoint");

	UPath_TowardPoint_TowardPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_WithinDistanceEnvelope.Recycle
// (Defined, Public)

void UPath_WithinDistanceEnvelope::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_WithinDistanceEnvelope.Recycle");

	UPath_WithinDistanceEnvelope_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_WithinDistanceEnvelope.StayWithinEnvelopeToLoc
// (Defined, Static, HasOptionalParms, Public)

void UPath_WithinDistanceEnvelope::STATIC_StayWithinEnvelopeToLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_WithinDistanceEnvelope.StayWithinEnvelopeToLoc");

	UPath_WithinDistanceEnvelope_StayWithinEnvelopeToLoc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_WithinTraversalDist.Recycle
// (Defined, Public)

void UPath_WithinTraversalDist::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_WithinTraversalDist.Recycle");

	UPath_WithinTraversalDist_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Path_WithinTraversalDist.DontExceedMaxDist
// (Defined, Static, HasOptionalParms, Public)

void UPath_WithinTraversalDist::STATIC_DontExceedMaxDist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Path_WithinTraversalDist.DontExceedMaxDist");

	UPath_WithinTraversalDist_DontExceedMaxDist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathGoalEvaluator.GetDumpString
// (Defined, Event, Public)

void UPathGoalEvaluator::GetDumpString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathGoalEvaluator.GetDumpString");

	UPathGoalEvaluator_GetDumpString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathGoalEvaluator.Recycle
// (Defined, Event, Public)

void UPathGoalEvaluator::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathGoalEvaluator.Recycle");

	UPathGoalEvaluator_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Goal_AtActor.Recycle
// (Defined, Public)

void UGoal_AtActor::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Goal_AtActor.Recycle");

	UGoal_AtActor_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Goal_AtActor.AtActor
// (Defined, Static, HasOptionalParms, Public)

void UGoal_AtActor::STATIC_AtActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Goal_AtActor.AtActor");

	UGoal_AtActor_AtActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Goal_Null.Recycle
// (Defined, Public)

void UGoal_Null::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Goal_Null.Recycle");

	UGoal_Null_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Goal_Null.GoUntilBust
// (Defined, Static, HasOptionalParms, Public)

void UGoal_Null::STATIC_GoUntilBust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Goal_Null.GoUntilBust");

	UGoal_Null_GoUntilBust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.GetObjClassVersion
// (Defined, Event, Static, Public)

void USequenceObject::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.GetObjClassVersion");

	USequenceObject_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.IsPastingIntoUISequenceAllowed
// (Defined, Event, Public)

void USequenceObject::IsPastingIntoUISequenceAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.IsPastingIntoUISequenceAllowed");

	USequenceObject_IsPastingIntoUISequenceAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USequenceObject::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.IsValidUISequenceObject");

	USequenceObject_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.IsPastingIntoLevelSequenceAllowed
// (Defined, Event, Public)

void USequenceObject::IsPastingIntoLevelSequenceAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.IsPastingIntoLevelSequenceAllowed");

	USequenceObject_IsPastingIntoLevelSequenceAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.IsValidLevelSequenceObject
// (Defined, Event, Public)

void USequenceObject::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.IsValidLevelSequenceObject");

	USequenceObject_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.GetWorldInfo
// (Final, Native, Public)

void USequenceObject::GetWorldInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.GetWorldInfo");

	USequenceObject_GetWorldInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceObject.ScriptLog
// (Final, Native, HasOptionalParms, Public)

void USequenceObject::ScriptLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceObject.ScriptLog");

	USequenceObject_ScriptLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.ForceActivateInput
// (Final, Native, Public)

void USequenceOp::ForceActivateInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.ForceActivateInput");

	USequenceOp_ForceActivateInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetController
// (Defined, Public)

void USequenceOp::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetController");

	USequenceOp_GetController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetPawn
// (Defined, Public)

void USequenceOp::GetPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetPawn");

	USequenceOp_GetPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.Reset
// (Public)

void USequenceOp::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.Reset");

	USequenceOp_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.PublishLinkedVariableValues
// (Final, Native, Public)

void USequenceOp::PublishLinkedVariableValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.PublishLinkedVariableValues");

	USequenceOp_PublishLinkedVariableValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.PopulateLinkedVariableValues
// (Final, Native, Public)

void USequenceOp::PopulateLinkedVariableValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.PopulateLinkedVariableValues");

	USequenceOp_PopulateLinkedVariableValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.VersionUpdated
// (Event, Public)

void USequenceOp::VersionUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.VersionUpdated");

	USequenceOp_VersionUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.Deactivated
// (Event, Public)

void USequenceOp::Deactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.Deactivated");

	USequenceOp_Deactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.Activated
// (Event, Public)

void USequenceOp::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.Activated");

	USequenceOp_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.ActivateNamedOutputLink
// (Final, Native, Public)

void USequenceOp::ActivateNamedOutputLink()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.ActivateNamedOutputLink");

	USequenceOp_ActivateNamedOutputLink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.ActivateOutputLink
// (Final, Native, Public)

void USequenceOp::ActivateOutputLink()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.ActivateOutputLink");

	USequenceOp_ActivateOutputLink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.LinkedVariables
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void USequenceOp::LinkedVariables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.LinkedVariables");

	USequenceOp_LinkedVariables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetBoolVars
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequenceOp::GetBoolVars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetBoolVars");

	USequenceOp_GetBoolVars_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetInterpDataVars
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequenceOp::GetInterpDataVars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetInterpDataVars");

	USequenceOp_GetInterpDataVars_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetObjectVars
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequenceOp::GetObjectVars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetObjectVars");

	USequenceOp_GetObjectVars_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.GetLinkedObjects
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequenceOp::GetLinkedObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.GetLinkedObjects");

	USequenceOp_GetLinkedObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceOp.HasLinkedOps
// (Final, Native, HasOptionalParms, Public)

void USequenceOp::HasLinkedOps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceOp.HasLinkedOps");

	USequenceOp_HasLinkedOps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.SkelMeshActorOnParticleSystemFinished
// (Defined, Simulated, Public)

void ASkeletalMeshActor::SkelMeshActorOnParticleSystemFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.SkelMeshActorOnParticleSystemFinished");

	ASkeletalMeshActor_SkelMeshActorOnParticleSystemFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.PlayParticleEffect
// (Defined, Event, Public, HasDefaults)

void ASkeletalMeshActor::PlayParticleEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.PlayParticleEffect");

	ASkeletalMeshActor_PlayParticleEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ASkeletalMeshActor::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.ApplyCheckpointRecord");

	ASkeletalMeshActor_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ASkeletalMeshActor::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.CreateCheckpointRecord");

	ASkeletalMeshActor_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.ShouldSaveForCheckpoint
// (Defined, Public)

void ASkeletalMeshActor::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.ShouldSaveForCheckpoint");

	ASkeletalMeshActor_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.TakeDamage
// (Defined, Event, HasOptionalParms, Public, HasDefaults)

void ASkeletalMeshActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.TakeDamage");

	ASkeletalMeshActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.DoKismetAttachment
// (Defined, Public)

void ASkeletalMeshActor::DoKismetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.DoKismetAttachment");

	ASkeletalMeshActor_DoKismetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnSetSkelControlTarget
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::OnSetSkelControlTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnSetSkelControlTarget");

	ASkeletalMeshActor_OnSetSkelControlTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnUpdatePhysBonesFromAnim
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::OnUpdatePhysBonesFromAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnUpdatePhysBonesFromAnim");

	ASkeletalMeshActor_OnUpdatePhysBonesFromAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnSetMesh
// (Defined, Event, Public)

void ASkeletalMeshActor::OnSetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnSetMesh");

	ASkeletalMeshActor_OnSetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.IsActorPlayingFaceFXAnim
// (Defined, Simulated, Public)

void ASkeletalMeshActor::IsActorPlayingFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.IsActorPlayingFaceFXAnim");

	ASkeletalMeshActor_IsActorPlayingFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.GetActorFaceFXAsset
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::GetActorFaceFXAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.GetActorFaceFXAsset");

	ASkeletalMeshActor_GetActorFaceFXAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnPlayFaceFXAnim
// (Defined, Simulated, Public)

void ASkeletalMeshActor::OnPlayFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnPlayFaceFXAnim");

	ASkeletalMeshActor_OnPlayFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.GetFaceFXAudioComponent
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::GetFaceFXAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.GetFaceFXAudioComponent");

	ASkeletalMeshActor_GetFaceFXAudioComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.StopActorFaceFXAnim
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::StopActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.StopActorFaceFXAnim");

	ASkeletalMeshActor_StopActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.PlayActorFaceFXAnim
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::PlayActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.PlayActorFaceFXAnim");

	ASkeletalMeshActor_PlayActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.MAT_FinishAnimControl
// (Native, Public)

void ASkeletalMeshActor::MAT_FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.MAT_FinishAnimControl");

	ASkeletalMeshActor_MAT_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.FinishAnimControl
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.FinishAnimControl");

	ASkeletalMeshActor_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.SetAnimPosition
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.SetAnimPosition");

	ASkeletalMeshActor_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.MAT_BeginAnimControl
// (Native, Public)

void ASkeletalMeshActor::MAT_BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.MAT_BeginAnimControl");

	ASkeletalMeshActor_MAT_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.BeginAnimControl
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.BeginAnimControl");

	ASkeletalMeshActor_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnSetMaterial
// (Defined, Public)

void ASkeletalMeshActor::OnSetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnSetMaterial");

	ASkeletalMeshActor_OnSetMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnToggle
// (Defined, Simulated, Public)

void ASkeletalMeshActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnToggle");

	ASkeletalMeshActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.OnModifyProperty
// (Defined, Simulated, Public, HasDefaults)

void ASkeletalMeshActor::OnModifyProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.OnModifyProperty");

	ASkeletalMeshActor_OnModifyProperty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.ReplicatedEvent");

	ASkeletalMeshActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.UpdateAnimSetList
// (Simulated, Native, Public)

void ASkeletalMeshActor::UpdateAnimSetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.UpdateAnimSetList");

	ASkeletalMeshActor_UpdateAnimSetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.Destroyed
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.Destroyed");

	ASkeletalMeshActor_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActor.PostBeginPlay");

	ASkeletalMeshActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent
// (Defined, Simulated, Public)

void ASkeletalMeshActorBasedOnExtremeContent::SetMaterialBasedOnExtremeContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent");

	ASkeletalMeshActorBasedOnExtremeContent_SetMaterialBasedOnExtremeContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorBasedOnExtremeContent.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorBasedOnExtremeContent::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorBasedOnExtremeContent.PostBeginPlay");

	ASkeletalMeshActorBasedOnExtremeContent_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.SetSkelControlScale
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.SetSkelControlScale");

	ASkeletalMeshActorMAT_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.SetMorphWeight
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.SetMorphWeight");

	ASkeletalMeshActorMAT_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.FinishAnimControl
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.FinishAnimControl");

	ASkeletalMeshActorMAT_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.MAT_SetAnimPosition
// (Native, Public)

void ASkeletalMeshActorMAT::MAT_SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.MAT_SetAnimPosition");

	ASkeletalMeshActorMAT_MAT_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.SetAnimPosition
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.SetAnimPosition");

	ASkeletalMeshActorMAT_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.ClearAnimNodes
// (Defined, Simulated, Public)

void ASkeletalMeshActorMAT::ClearAnimNodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.ClearAnimNodes");

	ASkeletalMeshActorMAT_ClearAnimNodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.CacheAnimNodes
// (Defined, Simulated, Public)

void ASkeletalMeshActorMAT::CacheAnimNodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.CacheAnimNodes");

	ASkeletalMeshActorMAT_CacheAnimNodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.PostInitAnimTree
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::PostInitAnimTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.PostInitAnimTree");

	ASkeletalMeshActorMAT_PostInitAnimTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.Destroyed
// (Defined, Simulated, Event, Public)

void ASkeletalMeshActorMAT::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.Destroyed");

	ASkeletalMeshActorMAT_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.MAT_SetSkelControlScale
// (Native, Public)

void ASkeletalMeshActorMAT::MAT_SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.MAT_SetSkelControlScale");

	ASkeletalMeshActorMAT_MAT_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.MAT_SetMorphWeight
// (Native, Public)

void ASkeletalMeshActorMAT::MAT_SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.MAT_SetMorphWeight");

	ASkeletalMeshActorMAT_MAT_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshActorMAT.MAT_SetAnimWeights
// (Native, Public)

void ASkeletalMeshActorMAT::MAT_SetAnimWeights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshActorMAT.MAT_SetAnimWeights");

	ASkeletalMeshActorMAT_MAT_SetAnimWeights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimSequence.GetNotifyTimeByClass
// (Native, HasOptionalParms, Public)

void UAnimSequence::GetNotifyTimeByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimSequence.GetNotifyTimeByClass");

	UAnimSequence_GetNotifyTimeByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNotify.FindNextNotifyOfClass
// (Defined, Simulated, Public, HasOutParms)

void UAnimNotify::FindNextNotifyOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNotify.FindNextNotifyOfClass");

	UAnimNotify_FindNextNotifyOfClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNotify_Scripted.Notify
// (Event, Public)

void UAnimNotify_Scripted::Notify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNotify_Scripted.Notify");

	UAnimNotify_Scripted_Notify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNotify_ViewShake.Notify
// (Defined, Event, Public, HasDefaults)

void UAnimNotify_ViewShake::Notify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNotify_ViewShake.Notify");

	UAnimNotify_ViewShake_Notify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNotify_Trails.GetNumSteps
// (Native, Public)

void UAnimNotify_Trails::GetNumSteps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNotify_Trails.GetNumSteps");

	UAnimNotify_Trails_GetNumSteps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.ReplayAnim
// (Native, Public)

void UAnimNode::ReplayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.ReplayAnim");

	UAnimNode_ReplayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.StopAnim
// (Native, Public)

void UAnimNode::StopAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.StopAnim");

	UAnimNode_StopAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.PlayAnim
// (Native, HasOptionalParms, Public)

void UAnimNode::PlayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.PlayAnim");

	UAnimNode_PlayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.FindAnimNode
// (Final, Native, Public)

void UAnimNode::FindAnimNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.FindAnimNode");

	UAnimNode_FindAnimNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.OnCeaseRelevant
// (Event, Public)

void UAnimNode::OnCeaseRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.OnCeaseRelevant");

	UAnimNode_OnCeaseRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.OnBecomeRelevant
// (Event, Public)

void UAnimNode::OnBecomeRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.OnBecomeRelevant");

	UAnimNode_OnBecomeRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode.OnInit
// (Event, Public)

void UAnimNode::OnInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode.OnInit");

	UAnimNode_OnInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlendBase.ReplayAnim
// (Native, Public)

void UAnimNodeBlendBase::ReplayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlendBase.ReplayAnim");

	UAnimNodeBlendBase_ReplayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlendBase.StopAnim
// (Native, Public)

void UAnimNodeBlendBase::StopAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlendBase.StopAnim");

	UAnimNodeBlendBase_StopAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlendBase.PlayAnim
// (Native, HasOptionalParms, Public)

void UAnimNodeBlendBase::PlayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlendBase.PlayAnim");

	UAnimNodeBlendBase_PlayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNode_MultiBlendPerBone.SetMaskWeight
// (Final, Native, Public)

void UAnimNode_MultiBlendPerBone::SetMaskWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNode_MultiBlendPerBone.SetMaskWeight");

	UAnimNode_MultiBlendPerBone_SetMaskWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeAimOffset.SetActiveProfileByIndex
// (Native, Public)

void UAnimNodeAimOffset::SetActiveProfileByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeAimOffset.SetActiveProfileByIndex");

	UAnimNodeAimOffset_SetActiveProfileByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeAimOffset.SetActiveProfileByName
// (Native, Public)

void UAnimNodeAimOffset::SetActiveProfileByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeAimOffset.SetActiveProfileByName");

	UAnimNodeAimOffset_SetActiveProfileByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlend.SetBlendTarget
// (Final, Native, Public)

void UAnimNodeBlend::SetBlendTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlend.SetBlendTarget");

	UAnimNodeBlend_SetBlendTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeCrossfader.GetActiveChild
// (Final, Native, Public)

void UAnimNodeCrossfader::GetActiveChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeCrossfader.GetActiveChild");

	UAnimNodeCrossfader_GetActiveChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeCrossfader.GetAnimName
// (Final, Native, Public)

void UAnimNodeCrossfader::GetAnimName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeCrossfader.GetAnimName");

	UAnimNodeCrossfader_GetAnimName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeCrossfader.BlendToLoopingAnim
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeCrossfader::BlendToLoopingAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeCrossfader.BlendToLoopingAnim");

	UAnimNodeCrossfader_BlendToLoopingAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeCrossfader.PlayOneShotAnim
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeCrossfader::PlayOneShotAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeCrossfader.PlayOneShotAnim");

	UAnimNodeCrossfader_PlayOneShotAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.SetRootBoneAxisOption
// (Final, Defined, HasOptionalParms, Public)

void UAnimNodePlayCustomAnim::SetRootBoneAxisOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.SetRootBoneAxisOption");

	UAnimNodePlayCustomAnim_SetRootBoneAxisOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.GetCustomAnimNodeSeq
// (Final, Defined, Public)

void UAnimNodePlayCustomAnim::GetCustomAnimNodeSeq()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.GetCustomAnimNodeSeq");

	UAnimNodePlayCustomAnim_GetCustomAnimNodeSeq_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.SetActorAnimEndNotification
// (Final, Defined, Public)

void UAnimNodePlayCustomAnim::SetActorAnimEndNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.SetActorAnimEndNotification");

	UAnimNodePlayCustomAnim_SetActorAnimEndNotification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.SetCustomAnim
// (Final, Defined, Public)

void UAnimNodePlayCustomAnim::SetCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.SetCustomAnim");

	UAnimNodePlayCustomAnim_SetCustomAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.StopCustomAnim
// (Final, Native, Public)

void UAnimNodePlayCustomAnim::StopCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.StopCustomAnim");

	UAnimNodePlayCustomAnim_StopCustomAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.PlayCustomAnimByDuration
// (Final, Native, HasOptionalParms, Public)

void UAnimNodePlayCustomAnim::PlayCustomAnimByDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.PlayCustomAnimByDuration");

	UAnimNodePlayCustomAnim_PlayCustomAnimByDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodePlayCustomAnim.PlayCustomAnim
// (Final, Native, HasOptionalParms, Public)

void UAnimNodePlayCustomAnim::PlayCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodePlayCustomAnim.PlayCustomAnim");

	UAnimNodePlayCustomAnim_PlayCustomAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlendList.SetActiveChild
// (Native, Public)

void UAnimNodeBlendList::SetActiveChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlendList.SetActiveChild");

	UAnimNodeBlendList_SetActiveChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeBlendMultiBone.SetTargetStartBone
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeBlendMultiBone::SetTargetStartBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeBlendMultiBone.SetTargetStartBone");

	UAnimNodeBlendMultiBone_SetTargetStartBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.AddToSynchGroup
// (Final, Native, Public)

void UAnimNodeSlot::AddToSynchGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.AddToSynchGroup");

	UAnimNodeSlot_AddToSynchGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.SetRootBoneRotationOption
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeSlot::SetRootBoneRotationOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.SetRootBoneRotationOption");

	UAnimNodeSlot_SetRootBoneRotationOption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.SetRootBoneAxisOption
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeSlot::SetRootBoneAxisOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.SetRootBoneAxisOption");

	UAnimNodeSlot_SetRootBoneAxisOption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.GetCustomAnimNodeSeq
// (Final, Native, Public)

void UAnimNodeSlot::GetCustomAnimNodeSeq()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.GetCustomAnimNodeSeq");

	UAnimNodeSlot_GetCustomAnimNodeSeq_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.SetActorAnimEndNotification
// (Final, Native, Public)

void UAnimNodeSlot::SetActorAnimEndNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.SetActorAnimEndNotification");

	UAnimNodeSlot_SetActorAnimEndNotification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.SetCustomAnim
// (Final, Native, Public)

void UAnimNodeSlot::SetCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.SetCustomAnim");

	UAnimNodeSlot_SetCustomAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.StopCustomAnim
// (Final, Native, Public)

void UAnimNodeSlot::StopCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.StopCustomAnim");

	UAnimNodeSlot_StopCustomAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.GetPlayedAnimation
// (Final, Native, Public)

void UAnimNodeSlot::GetPlayedAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.GetPlayedAnimation");

	UAnimNodeSlot_GetPlayedAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.PlayCustomAnimByDuration
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeSlot::PlayCustomAnimByDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.PlayCustomAnimByDuration");

	UAnimNodeSlot_PlayCustomAnimByDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSlot.PlayCustomAnim
// (Final, Native, HasOptionalParms, Public)

void UAnimNodeSlot::PlayCustomAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSlot.PlayCustomAnim");

	UAnimNodeSlot_PlayCustomAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.SetGroupRateScale
// (Final, Native, Public)

void UAnimNodeSynch::SetGroupRateScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.SetGroupRateScale");

	UAnimNodeSynch_SetGroupRateScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.GetRelativePosition
// (Final, Native, Public)

void UAnimNodeSynch::GetRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.GetRelativePosition");

	UAnimNodeSynch_GetRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.ForceRelativePosition
// (Final, Native, Public)

void UAnimNodeSynch::ForceRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.ForceRelativePosition");

	UAnimNodeSynch_ForceRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.GetMasterNodeOfGroup
// (Final, Native, Public)

void UAnimNodeSynch::GetMasterNodeOfGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.GetMasterNodeOfGroup");

	UAnimNodeSynch_GetMasterNodeOfGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.RemoveNodeFromGroup
// (Final, Native, Public)

void UAnimNodeSynch::RemoveNodeFromGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.RemoveNodeFromGroup");

	UAnimNodeSynch_RemoveNodeFromGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSynch.AddNodeToGroup
// (Final, Native, Public)

void UAnimNodeSynch::AddNodeToGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSynch.AddNodeToGroup");

	UAnimNodeSynch_AddNodeToGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.GetGroupIndex
// (Final, Native, Public)

void UAnimTree::GetGroupIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.GetGroupIndex");

	UAnimTree_GetGroupIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.GetGroupRateScale
// (Final, Native, Public)

void UAnimTree::GetGroupRateScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.GetGroupRateScale");

	UAnimTree_GetGroupRateScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.SetGroupRateScale
// (Final, Native, Public)

void UAnimTree::SetGroupRateScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.SetGroupRateScale");

	UAnimTree_SetGroupRateScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.GetGroupRelativePosition
// (Final, Native, Public)

void UAnimTree::GetGroupRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.GetGroupRelativePosition");

	UAnimTree_GetGroupRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.ForceGroupRelativePosition
// (Final, Native, Public)

void UAnimTree::ForceGroupRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.ForceGroupRelativePosition");

	UAnimTree_ForceGroupRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.GetGroupNotifyMaster
// (Final, Native, Public)

void UAnimTree::GetGroupNotifyMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.GetGroupNotifyMaster");

	UAnimTree_GetGroupNotifyMaster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.GetGroupSynchMaster
// (Final, Native, Public)

void UAnimTree::GetGroupSynchMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.GetGroupSynchMaster");

	UAnimTree_GetGroupSynchMaster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.SetAnimGroupForNode
// (Final, Native, HasOptionalParms, Public)

void UAnimTree::SetAnimGroupForNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.SetAnimGroupForNode");

	UAnimTree_SetAnimGroupForNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.SetUseSavedPose
// (Final, Native, Public)

void UAnimTree::SetUseSavedPose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.SetUseSavedPose");

	UAnimTree_SetUseSavedPose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.FindMorphNode
// (Final, Native, Public)

void UAnimTree::FindMorphNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.FindMorphNode");

	UAnimTree_FindMorphNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimTree.FindSkelControl
// (Final, Native, Public)

void UAnimTree::FindSkelControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimTree.FindSkelControl");

	UAnimTree_FindSkelControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.GetTimeLeft
// (Native, Public)

void UAnimNodeSequence::GetTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.GetTimeLeft");

	UAnimNodeSequence_GetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.GetAnimPlaybackLength
// (Native, Public)

void UAnimNodeSequence::GetAnimPlaybackLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.GetAnimPlaybackLength");

	UAnimNodeSequence_GetAnimPlaybackLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.GetGlobalPlayRate
// (Native, Public)

void UAnimNodeSequence::GetGlobalPlayRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.GetGlobalPlayRate");

	UAnimNodeSequence_GetGlobalPlayRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.GetGroupRelativePosition
// (Native, Public)

void UAnimNodeSequence::GetGroupRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.GetGroupRelativePosition");

	UAnimNodeSequence_GetGroupRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.FindGroupPosition
// (Native, Public)

void UAnimNodeSequence::FindGroupPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.FindGroupPosition");

	UAnimNodeSequence_FindGroupPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.FindGroupRelativePosition
// (Native, Public)

void UAnimNodeSequence::FindGroupRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.FindGroupRelativePosition");

	UAnimNodeSequence_FindGroupRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.GetNormalizedPosition
// (Native, Public)

void UAnimNodeSequence::GetNormalizedPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.GetNormalizedPosition");

	UAnimNodeSequence_GetNormalizedPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.SetPosition
// (Native, Public)

void UAnimNodeSequence::SetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.SetPosition");

	UAnimNodeSequence_SetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.ReplayAnim
// (Native, Public)

void UAnimNodeSequence::ReplayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.ReplayAnim");

	UAnimNodeSequence_ReplayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.StopAnim
// (Native, Public)

void UAnimNodeSequence::StopAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.StopAnim");

	UAnimNodeSequence_StopAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.PlayAnim
// (Native, HasOptionalParms, Public)

void UAnimNodeSequence::PlayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.PlayAnim");

	UAnimNodeSequence_PlayAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequence.SetAnim
// (Native, Public)

void UAnimNodeSequence::SetAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequence.SetAnim");

	UAnimNodeSequence_SetAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNodeSequenceBlendByAim.CheckAnimsUpToDate
// (Final, Native, Public)

void UAnimNodeSequenceBlendByAim::CheckAnimsUpToDate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNodeSequenceBlendByAim.CheckAnimsUpToDate");

	UAnimNodeSequenceBlendByAim_CheckAnimsUpToDate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphNodeMultiPose.UpdateMorphTarget
// (Final, Native, Public)

void UMorphNodeMultiPose::UpdateMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphNodeMultiPose.UpdateMorphTarget");

	UMorphNodeMultiPose_UpdateMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphNodeMultiPose.RemoveMorphTarget
// (Final, Native, Public)

void UMorphNodeMultiPose::RemoveMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphNodeMultiPose.RemoveMorphTarget");

	UMorphNodeMultiPose_RemoveMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphNodeMultiPose.AddMorphTarget
// (Final, Native, HasOptionalParms, Public)

void UMorphNodeMultiPose::AddMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphNodeMultiPose.AddMorphTarget");

	UMorphNodeMultiPose_AddMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphNodePose.SetMorphTarget
// (Final, Native, Public)

void UMorphNodePose::SetMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphNodePose.SetMorphTarget");

	UMorphNodePose_SetMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphNodeWeight.SetNodeWeight
// (Native, Public)

void UMorphNodeWeight::SetNodeWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphNodeWeight.SetNodeWeight");

	UMorphNodeWeight_SetNodeWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlBase.TickSkelControl
// (Event, Public)

void USkelControlBase::TickSkelControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlBase.TickSkelControl");

	USkelControlBase_TickSkelControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlBase.SetSkelControlStrength
// (Final, Native, Public)

void USkelControlBase::SetSkelControlStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlBase.SetSkelControlStrength");

	USkelControlBase_SetSkelControlStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlBase.SetSkelControlActive
// (Final, Native, Public)

void USkelControlBase::SetSkelControlActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlBase.SetSkelControlActive");

	USkelControlBase_SetSkelControlActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlLookAt.CanLookAtPoint
// (Final, Native, HasOptionalParms, Public)

void USkelControlLookAt::CanLookAtPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlLookAt.CanLookAtPoint");

	USkelControlLookAt_CanLookAtPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlLookAt.SetLookAtAlpha
// (Final, Native, Public)

void USkelControlLookAt::SetLookAtAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlLookAt.SetLookAtAlpha");

	USkelControlLookAt_SetLookAtAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlLookAt.InterpolateTargetLocation
// (Final, Native, Public)

void USkelControlLookAt::InterpolateTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlLookAt.InterpolateTargetLocation");

	USkelControlLookAt_InterpolateTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkelControlLookAt.SetTargetLocation
// (Final, Native, Public)

void USkelControlLookAt::SetTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkelControlLookAt.SetTargetLocation");

	USkelControlLookAt_SetTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MorphTargetSet.FindMorphTarget
// (Final, Native, Public)

void UMorphTargetSet::FindMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MorphTargetSet.FindMorphTarget");

	UMorphTargetSet_FindMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.SpawnDecal
// (Defined, HasOptionalParms, Public, HasDefaults)

void ADecalManager::SpawnDecal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.SpawnDecal");

	ADecalManager_SpawnDecal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.GetPooledComponent
// (Defined, Protected)

void ADecalManager::GetPooledComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.GetPooledComponent");

	ADecalManager_GetPooledComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.SetDecalParameters
// (Final, Defined, Static, Public)

void ADecalManager::STATIC_SetDecalParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.SetDecalParameters");

	ADecalManager_SetDecalParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.CanSpawnDecals
// (Defined, Public)

void ADecalManager::CanSpawnDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.CanSpawnDecals");

	ADecalManager_CanSpawnDecals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.DecalFinished
// (Defined, Event, Public)

void ADecalManager::DecalFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.DecalFinished");

	ADecalManager_DecalFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalManager.AreDynamicDecalsEnabled
// (Final, Native, Static, Public)

void ADecalManager::STATIC_AreDynamicDecalsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalManager.AreDynamicDecalsEnabled");

	ADecalManager_AreDynamicDecalsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalComponent.GetDecalMaterial
// (Final, Native, Public)

void UDecalComponent::GetDecalMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalComponent.GetDecalMaterial");

	UDecalComponent_GetDecalMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalComponent.SetDecalMaterial
// (Final, Native, Public)

void UDecalComponent::SetDecalMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalComponent.SetDecalMaterial");

	UDecalComponent_SetDecalMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DecalComponent.ResetToDefaults
// (Final, Native, Public)

void UDecalComponent::ResetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DecalComponent.ResetToDefaults");

	UDecalComponent_ResetToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void AFogVolumeDensityInfo::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.ApplyCheckpointRecord");

	AFogVolumeDensityInfo_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void AFogVolumeDensityInfo::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.CreateCheckpointRecord");

	AFogVolumeDensityInfo_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.ShouldSaveForCheckpoint
// (Defined, Public)

void AFogVolumeDensityInfo::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.ShouldSaveForCheckpoint");

	AFogVolumeDensityInfo_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.OnToggle
// (Defined, Simulated, Public)

void AFogVolumeDensityInfo::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.OnToggle");

	AFogVolumeDensityInfo_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AFogVolumeDensityInfo::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.ReplicatedEvent");

	AFogVolumeDensityInfo_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityInfo.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AFogVolumeDensityInfo::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityInfo.PostBeginPlay");

	AFogVolumeDensityInfo_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FogVolumeDensityComponent.SetEnabled
// (Final, Native, Public)

void UFogVolumeDensityComponent::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FogVolumeDensityComponent.SetEnabled");

	UFogVolumeDensityComponent_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.SetLoseChunkReplacementMaterial
// (Defined, Simulated, Public)

void AFracturedStaticMeshActor::SetLoseChunkReplacementMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.SetLoseChunkReplacementMaterial");

	AFracturedStaticMeshActor_SetLoseChunkReplacementMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.HideFragmentsToMaximizeMemoryUsage
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshActor::HideFragmentsToMaximizeMemoryUsage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.HideFragmentsToMaximizeMemoryUsage");

	AFracturedStaticMeshActor_HideFragmentsToMaximizeMemoryUsage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.HideOneFragment
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshActor::HideOneFragment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.HideOneFragment");

	AFracturedStaticMeshActor_HideOneFragment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.ResetVisibility
// (Simulated, Native, Event, Public)

void AFracturedStaticMeshActor::ResetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.ResetVisibility");

	AFracturedStaticMeshActor_ResetVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.BreakOffPartsInRadius
// (Simulated, Native, Event, Public)

void AFracturedStaticMeshActor::BreakOffPartsInRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.BreakOffPartsInRadius");

	AFracturedStaticMeshActor_BreakOffPartsInRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.Explode
// (Defined, Simulated, Event, Public, HasDefaults)

void AFracturedStaticMeshActor::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.Explode");

	AFracturedStaticMeshActor_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.TakeDamage
// (Defined, Simulated, Event, HasOptionalParms, Public, HasDefaults)

void AFracturedStaticMeshActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.TakeDamage");

	AFracturedStaticMeshActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.RemoveDecals
// (Final, Simulated, Native, Protected)

void AFracturedStaticMeshActor::RemoveDecals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.RemoveDecals");

	AFracturedStaticMeshActor_RemoveDecals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.FractureEffectIsRelevant
// (Defined, Simulated, Public, HasOutParms)

void AFracturedStaticMeshActor::FractureEffectIsRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.FractureEffectIsRelevant");

	AFracturedStaticMeshActor_FractureEffectIsRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.IsFracturedByDamageType
// (Defined, Simulated, Public)

void AFracturedStaticMeshActor::IsFracturedByDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.IsFracturedByDamageType");

	AFracturedStaticMeshActor_IsFracturedByDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.SpawnDeferredParts
// (Simulated, Native, Event, Public)

void AFracturedStaticMeshActor::SpawnDeferredParts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.SpawnDeferredParts");

	AFracturedStaticMeshActor_SpawnDeferredParts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.BreakOffIsolatedIslands
// (Simulated, Native, Event, Public, HasOutParms)

void AFracturedStaticMeshActor::BreakOffIsolatedIslands()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.BreakOffIsolatedIslands");

	AFracturedStaticMeshActor_BreakOffIsolatedIslands_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.ResetHealth
// (Final, Simulated, Native, Public)

void AFracturedStaticMeshActor::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.ResetHealth");

	AFracturedStaticMeshActor_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.PostBeginPlay");

	AFracturedStaticMeshActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.SpawnPartMulti
// (Final, Simulated, Native, Public)

void AFracturedStaticMeshActor::SpawnPartMulti()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.SpawnPartMulti");

	AFracturedStaticMeshActor_SpawnPartMulti_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshActor.SpawnPart
// (Final, Simulated, Native, Public)

void AFracturedStaticMeshActor::SpawnPart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshActor.SpawnPart");

	AFracturedStaticMeshActor_SpawnPart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.BreakOffPartsInRadius
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshPart::BreakOffPartsInRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.BreakOffPartsInRadius");

	AFracturedStaticMeshPart_BreakOffPartsInRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.Explode
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshPart::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.Explode");

	AFracturedStaticMeshPart_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.FellOutOfWorld
// (Defined, Simulated, Event, Public)

void AFracturedStaticMeshPart::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.FellOutOfWorld");

	AFracturedStaticMeshPart_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.TryToCleanUp
// (Defined, Simulated, Public)

void AFracturedStaticMeshPart::TryToCleanUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.TryToCleanUp");

	AFracturedStaticMeshPart_TryToCleanUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.TakeDamage
// (Defined, Simulated, Event, HasOptionalParms, Public)

void AFracturedStaticMeshPart::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.TakeDamage");

	AFracturedStaticMeshPart_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.RecyclePart
// (Simulated, Native, Public)

void AFracturedStaticMeshPart::RecyclePart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.RecyclePart");

	AFracturedStaticMeshPart_RecyclePart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshPart.Initialize
// (Simulated, Native, Public)

void AFracturedStaticMeshPart::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshPart.Initialize");

	AFracturedStaticMeshPart_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.Explode
// (Simulated, Event, Public)

void APhysXDestructibleActor::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.Explode");

	APhysXDestructibleActor_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.TakeRadiusDamage
// (Simulated, Native, HasOptionalParms, Public)

void APhysXDestructibleActor::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.TakeRadiusDamage");

	APhysXDestructibleActor_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.TakeDamage
// (Defined, Simulated, Event, HasOptionalParms, Public)

void APhysXDestructibleActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.TakeDamage");

	APhysXDestructibleActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.NativeTakeDamage
// (Native, HasOptionalParms, Public)

void APhysXDestructibleActor::NativeTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.NativeTakeDamage");

	APhysXDestructibleActor_NativeTakeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.NativeSpawnEffects
// (Native, Public)

void APhysXDestructibleActor::NativeSpawnEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.NativeSpawnEffects");

	APhysXDestructibleActor_NativeSpawnEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.Destroyed
// (Defined, Event, Public)

void APhysXDestructibleActor::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.Destroyed");

	APhysXDestructibleActor_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void APhysXDestructibleActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.PostBeginPlay");

	APhysXDestructibleActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.SpawnEffects
// (Defined, Simulated, Event, Public)

void APhysXDestructibleActor::SpawnEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.SpawnEffects");

	APhysXDestructibleActor_SpawnEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.Term
// (Native, Public)

void APhysXDestructibleActor::Term()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.Term");

	APhysXDestructibleActor_Term_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleActor.Init
// (Native, Public)

void APhysXDestructibleActor::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleActor.Init");

	APhysXDestructibleActor_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.Tick
// (Defined, Simulated, Public)

void AFractureManager::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.Tick");

	AFractureManager_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.SpawnDeferredParts
// (Defined, Simulated, Public)

void AFractureManager::SpawnDeferredParts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.SpawnDeferredParts");

	AFractureManager_SpawnDeferredParts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.ReturnPartActor
// (Defined, Simulated, Event, Public)

void AFractureManager::ReturnPartActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.ReturnPartActor");

	AFractureManager_ReturnPartActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.SpawnPartActor
// (Defined, Simulated, Event, Public)

void AFractureManager::SpawnPartActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.SpawnPartActor");

	AFractureManager_SpawnPartActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.GetFSMPart
// (Native, Public)

void AFractureManager::GetFSMPart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.GetFSMPart");

	AFractureManager_GetFSMPart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.ResetPoolVisibility
// (Simulated, Native, Public)

void AFractureManager::ResetPoolVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.ResetPoolVisibility");

	AFractureManager_ResetPoolVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.CreateFSMParts
// (Native, Public)

void AFractureManager::CreateFSMParts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.CreateFSMParts");

	AFractureManager_CreateFSMParts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.CleanUpFSMParts
// (Final, Defined, Simulated, Public)

void AFractureManager::CleanUpFSMParts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.CleanUpFSMParts");

	AFractureManager_CleanUpFSMParts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.Destroyed
// (Defined, Simulated, Event, Public)

void AFractureManager::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.Destroyed");

	AFractureManager_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.PreBeginPlay
// (Defined, Simulated, Event, Public)

void AFractureManager::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.PreBeginPlay");

	AFractureManager_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.GetFSMFractureCullDistanceScale
// (Native, Public)

void AFractureManager::GetFSMFractureCullDistanceScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.GetFSMFractureCullDistanceScale");

	AFractureManager_GetFSMFractureCullDistanceScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.GetFSMRadialSpawnChanceScale
// (Native, Public)

void AFractureManager::GetFSMRadialSpawnChanceScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.GetFSMRadialSpawnChanceScale");

	AFractureManager_GetFSMRadialSpawnChanceScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.GetFSMDirectSpawnChanceScale
// (Native, Public)

void AFractureManager::GetFSMDirectSpawnChanceScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.GetFSMDirectSpawnChanceScale");

	AFractureManager_GetFSMDirectSpawnChanceScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.GetNumFSMPartsScale
// (Native, Public)

void AFractureManager::GetNumFSMPartsScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.GetNumFSMPartsScale");

	AFractureManager_GetNumFSMPartsScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FractureManager.SpawnChunkDestroyEffect
// (Defined, Simulated, Event, Public, HasDefaults)

void AFractureManager::SpawnChunkDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FractureManager.SpawnChunkDestroyEffect");

	AFractureManager_SpawnChunkDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructiblePart.TakeRadiusDamage
// (Simulated, Native, HasOptionalParms, Public)

void APhysXDestructiblePart::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructiblePart.TakeRadiusDamage");

	APhysXDestructiblePart_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructiblePart.TakeDamage
// (Native, Event, HasOptionalParms, Public)

void APhysXDestructiblePart::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructiblePart.TakeDamage");

	APhysXDestructiblePart_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedBaseComponent.GetNumVisibleFragments
// (Native, Public)

void UFracturedBaseComponent::GetNumVisibleFragments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedBaseComponent.GetNumVisibleFragments");

	UFracturedBaseComponent_GetNumVisibleFragments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedBaseComponent.GetNumFragments
// (Native, Public)

void UFracturedBaseComponent::GetNumFragments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedBaseComponent.GetNumFragments");

	UFracturedBaseComponent_GetNumFragments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedBaseComponent.IsFragmentVisible
// (Simulated, Native, Public)

void UFracturedBaseComponent::IsFragmentVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedBaseComponent.IsFragmentVisible");

	UFracturedBaseComponent_IsFragmentVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedBaseComponent.GetVisibleFragments
// (Simulated, Native, Public)

void UFracturedBaseComponent::GetVisibleFragments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedBaseComponent.GetVisibleFragments");

	UFracturedBaseComponent_GetVisibleFragments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedBaseComponent.SetStaticMesh
// (Simulated, Native, HasOptionalParms, Public)

void UFracturedBaseComponent::SetStaticMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedBaseComponent.SetStaticMesh");

	UFracturedBaseComponent_SetStaticMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetFracturedMeshPhysMaterial
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetFracturedMeshPhysMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetFracturedMeshPhysMaterial");

	UFracturedStaticMeshComponent_GetFracturedMeshPhysMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.RecreatePhysState
// (Final, Native, Public)

void UFracturedStaticMeshComponent::RecreatePhysState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.RecreatePhysState");

	UFracturedStaticMeshComponent_RecreatePhysState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetBoundaryHiddenFragments
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetBoundaryHiddenFragments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetBoundaryHiddenFragments");

	UFracturedStaticMeshComponent_GetBoundaryHiddenFragments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetFragmentGroups
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetFragmentGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetFragmentGroups");

	UFracturedStaticMeshComponent_GetFragmentGroups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetCoreFragmentIndex
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetCoreFragmentIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetCoreFragmentIndex");

	UFracturedStaticMeshComponent_GetCoreFragmentIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetFragmentAverageExteriorNormal
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetFragmentAverageExteriorNormal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetFragmentAverageExteriorNormal");

	UFracturedStaticMeshComponent_GetFragmentAverageExteriorNormal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.GetFragmentBox
// (Final, Native, Public)

void UFracturedStaticMeshComponent::GetFragmentBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.GetFragmentBox");

	UFracturedStaticMeshComponent_GetFragmentBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.IsNoPhysFragment
// (Final, Native, Public)

void UFracturedStaticMeshComponent::IsNoPhysFragment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.IsNoPhysFragment");

	UFracturedStaticMeshComponent_IsNoPhysFragment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.IsRootFragment
// (Final, Native, Public)

void UFracturedStaticMeshComponent::IsRootFragment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.IsRootFragment");

	UFracturedStaticMeshComponent_IsRootFragment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.IsFragmentDestroyable
// (Final, Native, Public)

void UFracturedStaticMeshComponent::IsFragmentDestroyable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.IsFragmentDestroyable");

	UFracturedStaticMeshComponent_IsFragmentDestroyable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FracturedStaticMeshComponent.SetVisibleFragments
// (Final, Native, Public)

void UFracturedStaticMeshComponent::SetVisibleFragments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FracturedStaticMeshComponent.SetVisibleFragments");

	UFracturedStaticMeshComponent_SetVisibleFragments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleStructure.GetChunkCentroid
// (Native, Public)

void UPhysXDestructibleStructure::GetChunkCentroid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleStructure.GetChunkCentroid");

	UPhysXDestructibleStructure_GetChunkCentroid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleStructure.GetChunkMatrix
// (Native, Public)

void UPhysXDestructibleStructure::GetChunkMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleStructure.GetChunkMatrix");

	UPhysXDestructibleStructure_GetChunkMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleStructure.CrumbleChunk
// (Native, Public)

void UPhysXDestructibleStructure::CrumbleChunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleStructure.CrumbleChunk");

	UPhysXDestructibleStructure_CrumbleChunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleStructure.FractureChunk
// (Native, Public)

void UPhysXDestructibleStructure::FractureChunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleStructure.FractureChunk");

	UPhysXDestructibleStructure_FractureChunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXDestructibleStructure.DamageChunk
// (Native, Public, HasOutParms)

void UPhysXDestructibleStructure::DamageChunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXDestructibleStructure.DamageChunk");

	UPhysXDestructibleStructure_DamageChunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.IsInMapOrTransientPackage
// (Native, Public)

void UMaterialInstance::IsInMapOrTransientPackage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.IsInMapOrTransientPackage");

	UMaterialInstance_IsInMapOrTransientPackage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.ClearParameterValues
// (Native, Public)

void UMaterialInstance::ClearParameterValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.ClearParameterValues");

	UMaterialInstance_ClearParameterValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetFontParameterValue
// (Native, Public)

void UMaterialInstance::SetFontParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetFontParameterValue");

	UMaterialInstance_SetFontParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetTextureParameterValue
// (Native, Public)

void UMaterialInstance::SetTextureParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetTextureParameterValue");

	UMaterialInstance_SetTextureParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetScalarCurveParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstance::SetScalarCurveParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetScalarCurveParameterValue");

	UMaterialInstance_SetScalarCurveParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetScalarParameterValue
// (Native, Public)

void UMaterialInstance::SetScalarParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetScalarParameterValue");

	UMaterialInstance_SetScalarParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetVectorParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstance::SetVectorParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetVectorParameterValue");

	UMaterialInstance_SetVectorParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstance.SetParent
// (Native, Public)

void UMaterialInstance::SetParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstance.SetParent");

	UMaterialInstance_SetParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.ClearParameterValues
// (Native, Public)

void UMaterialInstanceConstant::ClearParameterValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.ClearParameterValues");

	UMaterialInstanceConstant_ClearParameterValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.SetFontParameterValue
// (Native, Public)

void UMaterialInstanceConstant::SetFontParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.SetFontParameterValue");

	UMaterialInstanceConstant_SetFontParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.SetVectorParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstanceConstant::SetVectorParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.SetVectorParameterValue");

	UMaterialInstanceConstant_SetVectorParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.SetTextureParameterValue
// (Native, Public)

void UMaterialInstanceConstant::SetTextureParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.SetTextureParameterValue");

	UMaterialInstanceConstant_SetTextureParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.SetScalarParameterValue
// (Native, Public)

void UMaterialInstanceConstant::SetScalarParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.SetScalarParameterValue");

	UMaterialInstanceConstant_SetScalarParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceConstant.SetParent
// (Native, Public)

void UMaterialInstanceConstant::SetParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceConstant.SetParent");

	UMaterialInstanceConstant_SetParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.GetMaxDurationFromAllParameters
// (Native, Public)

void UMaterialInstanceTimeVarying::GetMaxDurationFromAllParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.GetMaxDurationFromAllParameters");

	UMaterialInstanceTimeVarying_GetMaxDurationFromAllParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.ClearParameterValues
// (Native, Public)

void UMaterialInstanceTimeVarying::ClearParameterValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.ClearParameterValues");

	UMaterialInstanceTimeVarying_ClearParameterValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetFontParameterValue
// (Native, Public)

void UMaterialInstanceTimeVarying::SetFontParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetFontParameterValue");

	UMaterialInstanceTimeVarying_SetFontParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetVectorStartTime
// (Native, Public)

void UMaterialInstanceTimeVarying::SetVectorStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetVectorStartTime");

	UMaterialInstanceTimeVarying_SetVectorStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetVectorCurveParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstanceTimeVarying::SetVectorCurveParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetVectorCurveParameterValue");

	UMaterialInstanceTimeVarying_SetVectorCurveParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetVectorParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstanceTimeVarying::SetVectorParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetVectorParameterValue");

	UMaterialInstanceTimeVarying_SetVectorParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetTextureParameterValue
// (Native, Public)

void UMaterialInstanceTimeVarying::SetTextureParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetTextureParameterValue");

	UMaterialInstanceTimeVarying_SetTextureParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetDuration
// (Native, Public)

void UMaterialInstanceTimeVarying::SetDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetDuration");

	UMaterialInstanceTimeVarying_SetDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetScalarStartTime
// (Native, Public)

void UMaterialInstanceTimeVarying::SetScalarStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetScalarStartTime");

	UMaterialInstanceTimeVarying_SetScalarStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetScalarCurveParameterValue
// (Native, Public, HasOutParms)

void UMaterialInstanceTimeVarying::SetScalarCurveParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetScalarCurveParameterValue");

	UMaterialInstanceTimeVarying_SetScalarCurveParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetScalarParameterValue
// (Native, Public)

void UMaterialInstanceTimeVarying::SetScalarParameterValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetScalarParameterValue");

	UMaterialInstanceTimeVarying_SetScalarParameterValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.MaterialInstanceTimeVarying.SetParent
// (Native, Public)

void UMaterialInstanceTimeVarying::SetParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.MaterialInstanceTimeVarying.SetParent");

	UMaterialInstanceTimeVarying_SetParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.UpdateLocation
// (Simulated, Native, Public, HasOutParms)

void AEmitterCameraLensEffectBase::UpdateLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.UpdateLocation");

	AEmitterCameraLensEffectBase_UpdateLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.ActivateLensEffect
// (Defined, Simulated, Public)

void AEmitterCameraLensEffectBase::ActivateLensEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.ActivateLensEffect");

	AEmitterCameraLensEffectBase_ActivateLensEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.PostBeginPlay
// (Defined, Simulated, Public)

void AEmitterCameraLensEffectBase::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.PostBeginPlay");

	AEmitterCameraLensEffectBase_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.NotifyRetriggered
// (Public)

void AEmitterCameraLensEffectBase::NotifyRetriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.NotifyRetriggered");

	AEmitterCameraLensEffectBase_NotifyRetriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.RegisterCamera
// (Defined, Public)

void AEmitterCameraLensEffectBase::RegisterCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.RegisterCamera");

	AEmitterCameraLensEffectBase_RegisterCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterCameraLensEffectBase.Destroyed
// (Defined, Public)

void AEmitterCameraLensEffectBase::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterCameraLensEffectBase.Destroyed");

	AEmitterCameraLensEffectBase_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXEmitterSpawnable.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void APhysXEmitterSpawnable::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXEmitterSpawnable.ReplicatedEvent");

	APhysXEmitterSpawnable_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXEmitterSpawnable.SetTemplate
// (Defined, Simulated, Event, HasOptionalParms, Public)

void APhysXEmitterSpawnable::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXEmitterSpawnable.SetTemplate");

	APhysXEmitterSpawnable_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXEmitterSpawnable.Destroyed
// (Defined, Event, Public)

void APhysXEmitterSpawnable::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXEmitterSpawnable.Destroyed");

	APhysXEmitterSpawnable_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysXEmitterSpawnable.Term
// (Native, Public)

void APhysXEmitterSpawnable::Term()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysXEmitterSpawnable.Term");

	APhysXEmitterSpawnable_Term_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleEventManager.HandleParticleModuleEventSendToGame
// (Event, Public, HasOutParms)

void AParticleEventManager::HandleParticleModuleEventSendToGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleEventManager.HandleParticleModuleEventSendToGame");

	AParticleEventManager_HandleParticleModuleEventSendToGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetStopSpawning
// (Final, Native, Public)

void UParticleSystemComponent::SetStopSpawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetStopSpawning");

	UParticleSystemComponent_SetStopSpawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.ResetToDefaults
// (Final, Native, Public)

void UParticleSystemComponent::ResetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.ResetToDefaults");

	UParticleSystemComponent_ResetToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetActive
// (Final, Native, Public)

void UParticleSystemComponent::SetActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetActive");

	UParticleSystemComponent_SetActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.ClearParameter
// (Final, Native, HasOptionalParms, Public)

void UParticleSystemComponent::ClearParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.ClearParameter");

	UParticleSystemComponent_ClearParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetMaterialParameter
// (Native, Public, HasOutParms)

void UParticleSystemComponent::GetMaterialParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetMaterialParameter");

	UParticleSystemComponent_GetMaterialParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetActorParameter
// (Native, Public, HasOutParms)

void UParticleSystemComponent::GetActorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetActorParameter");

	UParticleSystemComponent_GetActorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetColorParameter
// (Native, Public, HasOutParms)

void UParticleSystemComponent::GetColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetColorParameter");

	UParticleSystemComponent_GetColorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetVectorParameter
// (Native, Public, HasOutParms)

void UParticleSystemComponent::GetVectorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetVectorParameter");

	UParticleSystemComponent_GetVectorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetFloatParameter
// (Native, Public, HasOutParms)

void UParticleSystemComponent::GetFloatParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetFloatParameter");

	UParticleSystemComponent_GetFloatParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetMaterialParameter
// (Final, Native, Public)

void UParticleSystemComponent::SetMaterialParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetMaterialParameter");

	UParticleSystemComponent_SetMaterialParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetActorParameter
// (Final, Native, Public)

void UParticleSystemComponent::SetActorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetActorParameter");

	UParticleSystemComponent_SetActorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetColorParameter
// (Final, Native, Public)

void UParticleSystemComponent::SetColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetColorParameter");

	UParticleSystemComponent_SetColorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetVectorParameter
// (Final, Native, Public)

void UParticleSystemComponent::SetVectorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetVectorParameter");

	UParticleSystemComponent_SetVectorParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetFloatParameter
// (Final, Native, Public)

void UParticleSystemComponent::SetFloatParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetFloatParameter");

	UParticleSystemComponent_SetFloatParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetEditorLODLevel
// (Final, Native, Public)

void UParticleSystemComponent::GetEditorLODLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetEditorLODLevel");

	UParticleSystemComponent_GetEditorLODLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetLODLevel
// (Final, Native, Public)

void UParticleSystemComponent::GetLODLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetLODLevel");

	UParticleSystemComponent_GetLODLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetEditorLODLevel
// (Final, Native, Public)

void UParticleSystemComponent::SetEditorLODLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetEditorLODLevel");

	UParticleSystemComponent_SetEditorLODLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetLODLevel
// (Final, Native, Public)

void UParticleSystemComponent::SetLODLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetLODLevel");

	UParticleSystemComponent_SetLODLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.DetermineLODLevelForLocation
// (Native, Public)

void UParticleSystemComponent::DetermineLODLevelForLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.DetermineLODLevelForLocation");

	UParticleSystemComponent_DetermineLODLevelForLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
// (Native, Public)

void UParticleSystemComponent::SetBeamTargetStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamTargetStrength");

	UParticleSystemComponent_SetBeamTargetStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
// (Native, Public)

void UParticleSystemComponent::SetBeamTargetTangent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamTargetTangent");

	UParticleSystemComponent_SetBeamTargetTangent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
// (Native, Public)

void UParticleSystemComponent::SetBeamTargetPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamTargetPoint");

	UParticleSystemComponent_SetBeamTargetPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
// (Native, Public)

void UParticleSystemComponent::SetBeamSourceStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamSourceStrength");

	UParticleSystemComponent_SetBeamSourceStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
// (Native, Public)

void UParticleSystemComponent::SetBeamSourceTangent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamSourceTangent");

	UParticleSystemComponent_SetBeamSourceTangent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
// (Native, Public)

void UParticleSystemComponent::SetBeamSourcePoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamSourcePoint");

	UParticleSystemComponent_SetBeamSourcePoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamDistance
// (Native, Public)

void UParticleSystemComponent::SetBeamDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamDistance");

	UParticleSystemComponent_SetBeamDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamEndPoint
// (Native, Public)

void UParticleSystemComponent::SetBeamEndPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamEndPoint");

	UParticleSystemComponent_SetBeamEndPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamTessellationFactor
// (Native, Public)

void UParticleSystemComponent::SetBeamTessellationFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamTessellationFactor");

	UParticleSystemComponent_SetBeamTessellationFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetBeamType
// (Native, Public)

void UParticleSystemComponent::SetBeamType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetBeamType");

	UParticleSystemComponent_SetBeamType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.RewindEmitterInstances
// (Native, Public)

void UParticleSystemComponent::RewindEmitterInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.RewindEmitterInstances");

	UParticleSystemComponent_RewindEmitterInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.RewindEmitterInstance
// (Native, Public)

void UParticleSystemComponent::RewindEmitterInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.RewindEmitterInstance");

	UParticleSystemComponent_RewindEmitterInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetKillOnCompleted
// (Native, Public)

void UParticleSystemComponent::SetKillOnCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetKillOnCompleted");

	UParticleSystemComponent_SetKillOnCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetKillOnDeactivate
// (Native, Public)

void UParticleSystemComponent::SetKillOnDeactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetKillOnDeactivate");

	UParticleSystemComponent_SetKillOnDeactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.GetSkipUpdateDynamicDataDuringTick
// (Final, Native, Public)

void UParticleSystemComponent::GetSkipUpdateDynamicDataDuringTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.GetSkipUpdateDynamicDataDuringTick");

	UParticleSystemComponent_GetSkipUpdateDynamicDataDuringTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetSkipUpdateDynamicDataDuringTick
// (Final, Native, Public)

void UParticleSystemComponent::SetSkipUpdateDynamicDataDuringTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetSkipUpdateDynamicDataDuringTick");

	UParticleSystemComponent_SetSkipUpdateDynamicDataDuringTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.KillParticlesForced
// (Final, Native, Public)

void UParticleSystemComponent::KillParticlesForced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.KillParticlesForced");

	UParticleSystemComponent_KillParticlesForced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.DeactivateSystem
// (Final, Native, Public)

void UParticleSystemComponent::DeactivateSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.DeactivateSystem");

	UParticleSystemComponent_DeactivateSystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.ActivateSystem
// (Final, Native, HasOptionalParms, Public)

void UParticleSystemComponent::ActivateSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.ActivateSystem");

	UParticleSystemComponent_ActivateSystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.SetTemplate
// (Final, Native, Public)

void UParticleSystemComponent::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.SetTemplate");

	UParticleSystemComponent_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleSystemComponent.OnSystemFinished
// (Public, Delegate)

void UParticleSystemComponent::OnSystemFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleSystemComponent.OnSystemFinished");

	UParticleSystemComponent_OnSystemFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ParticleModuleEventSendToGame.DoEvent
// (Public, HasOutParms)

void UParticleModuleEventSendToGame::DoEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ParticleModuleEventSendToGame.DoEvent");

	UParticleModuleEventSendToGame_DoEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.Reset
// (Defined, Simulated, Public)

void AKActor::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.Reset");

	AKActor_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.OnTeleport
// (Defined, Simulated, Public)

void AKActor::OnTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.OnTeleport");

	AKActor_OnTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.OnToggle
// (Defined, Simulated, Public)

void AKActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.OnToggle");

	AKActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.TakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public)

void AKActor::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.TakeRadiusDamage");

	AKActor_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.TakeDamage
// (Defined, Event, HasOptionalParms, Public, HasDefaults)

void AKActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.TakeDamage");

	AKActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.ApplyImpulse
// (Defined, HasOptionalParms, Public, HasDefaults)

void AKActor::ApplyImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.ApplyImpulse");

	AKActor_ApplyImpulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.ReplicatedEvent
// (Defined, Simulated, Event, Public, HasDefaults)

void AKActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.ReplicatedEvent");

	AKActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.SpawnedByKismet
// (Defined, Simulated, Event, Public)

void AKActor::SpawnedByKismet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.SpawnedByKismet");

	AKActor_SpawnedByKismet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.SetPhysicalCollisionProperties
// (Defined, Simulated, Public)

void AKActor::SetPhysicalCollisionProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.SetPhysicalCollisionProperties");

	AKActor_SetPhysicalCollisionProperties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.Destroyed
// (Defined, Simulated, Event, Public)

void AKActor::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.Destroyed");

	AKActor_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.FellOutOfWorld
// (Defined, Simulated, Event, Public)

void AKActor::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.FellOutOfWorld");

	AKActor_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AKActor::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.PostBeginPlay");

	AKActor_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.ResolveRBState
// (Final, Native, Public)

void AKActor::ResolveRBState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.ResolveRBState");

	AKActor_ResolveRBState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActor.GetKActorPhysMaterial
// (Final, Native, Public)

void AKActor::GetKActorPhysMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActor.GetKActorPhysMaterial");

	AKActor_GetKActorPhysMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActorSpawnable.ResetComponents
// (Final, Native, Public)

void AKActorSpawnable::ResetComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActorSpawnable.ResetComponents");

	AKActorSpawnable_ResetComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActorSpawnable.RecycleInternal
// (Defined, Simulated, Public)

void AKActorSpawnable::RecycleInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActorSpawnable.RecycleInternal");

	AKActorSpawnable_RecycleInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActorSpawnable.Recycle
// (Defined, Simulated, Public)

void AKActorSpawnable::Recycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActorSpawnable.Recycle");

	AKActorSpawnable_Recycle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActorSpawnable.Initialize
// (Defined, Simulated, Public)

void AKActorSpawnable::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActorSpawnable.Initialize");

	AKActorSpawnable_Initialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KActorSpawnable.Tick
// (Defined, Simulated, Public)

void AKActorSpawnable::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KActorSpawnable.Tick");

	AKActorSpawnable_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.DoKismetAttachment
// (Defined, Public)

void AKAsset::DoKismetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.DoKismetAttachment");

	AKAsset_DoKismetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.OnTeleport
// (Defined, Simulated, Public)

void AKAsset::OnTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.OnTeleport");

	AKAsset_OnTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.OnToggle
// (Defined, Simulated, Public)

void AKAsset::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.OnToggle");

	AKAsset_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.TakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public)

void AKAsset::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.TakeRadiusDamage");

	AKAsset_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.TakeDamage
// (Defined, Event, HasOptionalParms, Public, HasDefaults)

void AKAsset::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.TakeDamage");

	AKAsset_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AKAsset::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.ReplicatedEvent");

	AKAsset_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.SetMeshAndPhysAsset
// (Final, Defined, Public)

void AKAsset::SetMeshAndPhysAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.SetMeshAndPhysAsset");

	AKAsset_SetMeshAndPhysAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.KAsset.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AKAsset::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.KAsset.PostBeginPlay");

	AKAsset_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetDiedDamageCauser
// (Public)

void APawn::SetDiedDamageCauser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetDiedDamageCauser");

	APawn_SetDiedDamageCauser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetTrueController
// (Defined, Public)

void APawn::GetTrueController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetTrueController");

	APawn_GetTrueController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetRootMotionInterpCurrentTime
// (Native, HasOptionalParms, Public)

void APawn::SetRootMotionInterpCurrentTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetRootMotionInterpCurrentTime");

	APawn_SetRootMotionInterpCurrentTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetCinematicMode
// (Simulated, Public)

void APawn::SetCinematicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetCinematicMode");

	APawn_SetCinematicMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ZeroMovementVariables
// (Defined, Simulated, Public)

void APawn::ZeroMovementVariables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ZeroMovementVariables");

	APawn_ZeroMovementVariables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClearPathStep
// (Native, Public)

void APawn::ClearPathStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClearPathStep");

	APawn_ClearPathStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DrawPathStep
// (Native, Public)

void APawn::DrawPathStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DrawPathStep");

	APawn_DrawPathStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IncrementPathChild
// (Native, Public)

void APawn::IncrementPathChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IncrementPathChild");

	APawn_IncrementPathChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IncrementPathStep
// (Native, Public)

void APawn::IncrementPathStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IncrementPathStep");

	APawn_IncrementPathStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CreatePathGoalEvaluator
// (Defined, Public)

void APawn::CreatePathGoalEvaluator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CreatePathGoalEvaluator");

	APawn_CreatePathGoalEvaluator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CreatePathConstraint
// (Defined, Public)

void APawn::CreatePathConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CreatePathConstraint");

	APawn_CreatePathConstraint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AddGoalEvaluator
// (Native, Public)

void APawn::AddGoalEvaluator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AddGoalEvaluator");

	APawn_AddGoalEvaluator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AddPathConstraint
// (Native, Public)

void APawn::AddPathConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AddPathConstraint");

	APawn_AddPathConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClearConstraints
// (Native, Public)

void APawn::ClearConstraints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClearConstraints");

	APawn_ClearConstraints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SoakPause
// (Defined, Event, Public)

void APawn::SoakPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SoakPause");

	APawn_SoakPause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BecomeViewTarget
// (Defined, Simulated, Event, Public)

void APawn::BecomeViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BecomeViewTarget");

	APawn_BecomeViewTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AdjustCameraScale
// (Simulated, Public)

void APawn::AdjustCameraScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AdjustCameraScale");

	APawn_AdjustCameraScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MessagePlayer
// (Final, Event, Public)

void APawn::MessagePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MessagePlayer");

	APawn_MessagePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.EffectIsRelevant
// (Defined, Simulated, HasOptionalParms, Public)

void APawn::EffectIsRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.EffectIsRelevant");

	APawn_EffectIsRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OnTeleport
// (Defined, Simulated, Public)

void APawn::OnTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OnTeleport");

	APawn_OnTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OnSetMaterial
// (Defined, Public)

void APawn::OnSetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OnSetMaterial");

	APawn_OnSetMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetDamageScaling
// (Defined, Public)

void APawn::GetDamageScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetDamageScaling");

	APawn_GetDamageScaling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DoKismetAttachment
// (Defined, Public)

void APawn::DoKismetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DoKismetAttachment");

	APawn_DoKismetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SpawnedByKismet
// (Defined, Event, Public)

void APawn::SpawnedByKismet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SpawnedByKismet");

	APawn_SpawnedByKismet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsStationary
// (Defined, Public)

void APawn::IsStationary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsStationary");

	APawn_IsStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetCollisionExtent
// (Final, Defined, Simulated, Public, HasDefaults)

void APawn::GetCollisionExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetCollisionExtent");

	APawn_GetCollisionExtent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetCollisionHeight
// (Defined, Simulated, Public)

void APawn::GetCollisionHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetCollisionHeight");

	APawn_GetCollisionHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetCollisionRadius
// (Defined, Simulated, Public)

void APawn::GetCollisionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetCollisionRadius");

	APawn_GetCollisionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CheatFly
// (Defined, Public)

void APawn::CheatFly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CheatFly");

	APawn_CheatFly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CheatGhost
// (Defined, Public)

void APawn::CheatGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CheatGhost");

	APawn_CheatGhost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CheatWalk
// (Defined, Public)

void APawn::CheatWalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CheatWalk");

	APawn_CheatWalk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayWeaponSwitch
// (Simulated, Public)

void APawn::PlayWeaponSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayWeaponSwitch");

	APawn_PlayWeaponSwitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetActiveWeapon
// (Defined, Simulated, Public)

void APawn::SetActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetActiveWeapon");

	APawn_SetActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TossInventory
// (Defined, HasOptionalParms, Public, HasDefaults)

void APawn::TossInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TossInventory");

	APawn_TossInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ThrowActiveWeapon
// (Defined, Public)

void APawn::ThrowActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ThrowActiveWeapon");

	APawn_ThrowActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DrawHUD
// (Defined, Simulated, Public)

void APawn::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DrawHUD");

	APawn_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FindInventoryType
// (Final, Defined, Simulated, HasOptionalParms, Public)

void APawn::FindInventoryType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FindInventoryType");

	APawn_FindInventoryType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CreateInventory
// (Final, Defined, Event, HasOptionalParms, Public)

void APawn::CreateInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CreateInventory");

	APawn_CreateInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AddDefaultInventory
// (Public)

void APawn::AddDefaultInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AddDefaultInventory");

	APawn_AddDefaultInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StopDriving
// (Defined, Simulated, Event, Public)

void APawn::StopDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StopDriving");

	APawn_StopDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StartDriving
// (Defined, Simulated, Event, Public)

void APawn::StartDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StartDriving");

	APawn_StartDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanThrowWeapon
// (Defined, Simulated, Public)

void APawn::CanThrowWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanThrowWeapon");

	APawn_CanThrowWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Suicide
// (Defined, Public)

void APawn::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Suicide");

	APawn_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetVehicleBase
// (Native, Public)

void APawn::GetVehicleBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetVehicleBase");

	APawn_GetVehicleBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayLanded
// (Public)

void APawn::PlayLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayLanded");

	APawn_PlayLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CannotJumpNow
// (Defined, Public)

void APawn::CannotJumpNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CannotJumpNow");

	APawn_CannotJumpNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayFootStepSound
// (Event, Public)

void APawn::PlayFootStepSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayFootStepSound");

	APawn_PlayFootStepSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TornOff
// (Defined, Simulated, Event, Public)

void APawn::TornOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TornOff");

	APawn_TornOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayDying
// (Defined, Simulated, Public)

void APawn::PlayDying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayDying");

	APawn_PlayDying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetDyingPhysics
// (Defined, Simulated, Public)

void APawn::SetDyingPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetDyingPhysics");

	APawn_SetDyingPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TurnOff
// (Defined, Simulated, Public)

void APawn::TurnOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TurnOff");

	APawn_TurnOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayHit
// (Defined, Public)

void APawn::PlayHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayHit");

	APawn_PlayHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayDyingSound
// (Public)

void APawn::PlayDyingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayDyingSound");

	APawn_PlayDyingSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DoJump
// (Defined, Public)

void APawn::DoJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DoJump");

	APawn_DoJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CheckWaterJump
// (Defined, Public, HasOutParms, HasDefaults)

void APawn::CheckWaterJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CheckWaterJump");

	APawn_CheckWaterJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TakeDrowningDamage
// (Public)

void APawn::TakeDrowningDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TakeDrowningDamage");

	APawn_TakeDrowningDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BreathTimer
// (Defined, Event, Public)

void APawn::BreathTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BreathTimer");

	APawn_BreathTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsInPain
// (Defined, Public)

void APawn::IsInPain()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsInPain");

	APawn_IsInPain_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TouchingWaterVolume
// (Defined, Public)

void APawn::TouchingWaterVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TouchingWaterVolume");

	APawn_TouchingWaterVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.HeadVolumeChange
// (Defined, Event, Public)

void APawn::HeadVolumeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.HeadVolumeChange");

	APawn_HeadVolumeChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Landed
// (Defined, Event, Public)

void APawn::Landed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Landed");

	APawn_Landed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Falling
// (Event, Public)

void APawn::Falling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Falling");

	APawn_Falling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Died
// (Defined, Public)

void APawn::Died()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Died");

	APawn_Died_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ThrowWeaponOnDeath
// (Defined, Public)

void APawn::ThrowWeaponOnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ThrowWeaponOnDeath");

	APawn_ThrowWeaponOnDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsSameTeam
// (Defined, Simulated, Event, Public)

void APawn::IsSameTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsSameTeam");

	APawn_IsSameTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetTeam
// (Defined, Simulated, Public)

void APawn::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetTeam");

	APawn_GetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetTeamNum
// (Simulated, Native, Public)

void APawn::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetTeamNum");

	APawn_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TakeDamage
// (Defined, Event, HasOptionalParms, Public)

void APawn::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TakeDamage");

	APawn_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetKillInstigator
// (Defined, Public)

void APawn::SetKillInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetKillInstigator");

	APawn_SetKillInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.NotifyTakeHit
// (Defined, Public)

void APawn::NotifyTakeHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.NotifyTakeHit");

	APawn_NotifyTakeHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TakeRadiusDamageOnBones
// (Defined, Event, Public, HasDefaults)

void APawn::TakeRadiusDamageOnBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TakeRadiusDamageOnBones");

	APawn_TakeRadiusDamageOnBones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PruneDamagedBoneList
// (Public, HasOutParms)

void APawn::PruneDamagedBoneList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PruneDamagedBoneList");

	APawn_PruneDamagedBoneList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.HealDamage
// (Defined, Event, Public)

void APawn::HealDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.HealDamage");

	APawn_HealDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AdjustDamage
// (HasOptionalParms, Public, HasOutParms)

void APawn::AdjustDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AdjustDamage");

	APawn_AdjustDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetMovementPhysics
// (Defined, Public)

void APawn::SetMovementPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetMovementPhysics");

	APawn_SetMovementPhysics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Gasp
// (Public)

void APawn::Gasp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Gasp");

	APawn_Gasp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OnGiveInventory
// (Defined, Simulated, Public)

void APawn::OnGiveInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OnGiveInventory");

	APawn_OnGiveInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OnAssignController
// (Defined, Public)

void APawn::OnAssignController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OnAssignController");

	APawn_OnAssignController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReceivedNewEvent
// (Defined, Simulated, Event, Public)

void APawn::ReceivedNewEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReceivedNewEvent");

	APawn_ReceivedNewEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SpawnDefaultController
// (Defined, Public)

void APawn::SpawnDefaultController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SpawnDefaultController");

	APawn_SpawnDefaultController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PostBeginPlay
// (Defined, Simulated, Event, Public)

void APawn::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PostBeginPlay");

	APawn_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PreBeginPlay
// (Defined, Simulated, Event, Public)

void APawn::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PreBeginPlay");

	APawn_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Destroyed
// (Defined, Simulated, Event, Public)

void APawn::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Destroyed");

	APawn_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DetachFromController
// (Defined, HasOptionalParms, Public)

void APawn::DetachFromController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DetachFromController");

	APawn_DetachFromController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CrushedBy
// (Defined, Public)

void APawn::CrushedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CrushedBy");

	APawn_CrushedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanBeBaseForPawn
// (Defined, Simulated, Public)

void APawn::CanBeBaseForPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanBeBaseForPawn");

	APawn_CanBeBaseForPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BaseChange
// (Defined, Singular, Event, Public)

void APawn::BaseChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BaseChange");

	APawn_BaseChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StuckOnPawn
// (Event, Public)

void APawn::StuckOnPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StuckOnPawn");

	APawn_StuckOnPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.JumpOffPawn
// (Defined, Public)

void APawn::JumpOffPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.JumpOffPawn");

	APawn_JumpOffPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.gibbedBy
// (Defined, Public)

void APawn::gibbedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.gibbedBy");

	APawn_gibbedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.EncroachedBy
// (Defined, Event, Public)

void APawn::EncroachedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.EncroachedBy");

	APawn_EncroachedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.EncroachingOn
// (Defined, Event, Public)

void APawn::EncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.EncroachingOn");

	APawn_EncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FaceRotation
// (Defined, Simulated, Public)

void APawn::FaceRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FaceRotation");

	APawn_FaceRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.UpdatePawnRotation
// (Final, Defined, Simulated, Event, Public)

void APawn::UpdatePawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.UpdatePawnRotation");

	APawn_UpdatePawnRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClientSetRotation
// (Defined, Public)

void APawn::ClientSetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClientSetRotation");

	APawn_ClientSetRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClientSetLocation
// (Defined, Public)

void APawn::ClientSetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClientSetLocation");

	APawn_ClientSetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClientRestart
// (Defined, Simulated, Public)

void APawn::ClientRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClientRestart");

	APawn_ClientRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Restart
// (Public)

void APawn::Restart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Restart");

	APawn_Restart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TakeFallingDamage
// (Defined, Public)

void APawn::TakeFallingDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TakeFallingDamage");

	APawn_TakeFallingDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.KilledBy
// (Defined, Public)

void APawn::KilledBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.KilledBy");

	APawn_KilledBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AddVelocity
// (Defined, HasOptionalParms, Public)

void APawn::AddVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AddVelocity");

	APawn_AddVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.HandleMomentum
// (Defined, HasOptionalParms, Public)

void APawn::HandleMomentum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.HandleMomentum");

	APawn_HandleMomentum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.RestartPlayer
// (Public)

void APawn::RestartPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.RestartPlayer");

	APawn_RestartPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StartCrouch
// (Defined, Simulated, Event, Public)

void APawn::StartCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StartCrouch");

	APawn_StartCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.EndCrouch
// (Defined, Simulated, Event, Public)

void APawn::EndCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.EndCrouch");

	APawn_EndCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ShouldCrouch
// (Defined, Public)

void APawn::ShouldCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ShouldCrouch");

	APawn_ShouldCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.UnCrouch
// (Defined, Simulated, Public)

void APawn::UnCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.UnCrouch");

	APawn_UnCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OutsideWorldBounds
// (Defined, Singular, Simulated, Event, Public)

void APawn::OutsideWorldBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OutsideWorldBounds");

	APawn_OutsideWorldBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FellOutOfWorld
// (Defined, Simulated, Event, Public)

void APawn::FellOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FellOutOfWorld");

	APawn_FellOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ModifyVelocity
// (Simulated, Event, Public)

void APawn::ModifyVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ModifyVelocity");

	APawn_ModifyVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.JumpOutOfWater
// (Defined, Public)

void APawn::JumpOutOfWater()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.JumpOutOfWater");

	APawn_JumpOutOfWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FinishedInterpolation
// (Defined, Public)

void APawn::FinishedInterpolation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FinishedInterpolation");

	APawn_FinishedInterpolation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClientMessage
// (Defined, Event, HasOptionalParms, Public)

void APawn::ClientMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClientMessage");

	APawn_ClientMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReceiveLocalizedMessage
// (Defined, HasOptionalParms, Public)

void APawn::ReceiveLocalizedMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReceiveLocalizedMessage");

	APawn_ReceiveLocalizedMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.HandlePickup
// (Defined, Public)

void APawn::HandlePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.HandlePickup");

	APawn_HandlePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AdjustedStrength
// (Defined, Public)

void APawn::AdjustedStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AdjustedStrength");

	APawn_AdjustedStrength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.LineOfSightTo
// (Defined, Public)

void APawn::LineOfSightTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.LineOfSightTo");

	APawn_LineOfSightTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetMoveTarget
// (Defined, Public)

void APawn::SetMoveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetMoveTarget");

	APawn_SetMoveTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetMoveTarget
// (Defined, Public)

void APawn::GetMoveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetMoveTarget");

	APawn_GetMoveTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.NearMoveTarget
// (Defined, Public)

void APawn::NearMoveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.NearMoveTarget");

	APawn_NearMoveTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AffectedByHitEffects
// (Defined, Simulated, Public)

void APawn::AffectedByHitEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AffectedByHitEffects");

	APawn_AffectedByHitEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.InGodMode
// (Defined, Public)

void APawn::InGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.InGodMode");

	APawn_InGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PawnCalcCamera
// (Defined, Simulated, Public, HasOutParms)

void APawn::PawnCalcCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PawnCalcCamera");

	APawn_PawnCalcCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetViewRotation
// (Defined, Simulated, Public)

void APawn::SetViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetViewRotation");

	APawn_SetViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetAdjustedAimFor
// (Defined, Simulated, Public)

void APawn::GetAdjustedAimFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetAdjustedAimFor");

	APawn_GetAdjustedAimFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.InFreeCam
// (Defined, Simulated, Event, Public)

void APawn::InFreeCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.InFreeCam");

	APawn_InFreeCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetBaseAimRotation
// (Defined, Singular, Simulated, Event, Public, HasDefaults)

void APawn::GetBaseAimRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetBaseAimRotation");

	APawn_GetBaseAimRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetWeaponStartTraceLocation
// (Defined, Simulated, Event, HasOptionalParms, Public, HasDefaults)

void APawn::GetWeaponStartTraceLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetWeaponStartTraceLocation");

	APawn_GetWeaponStartTraceLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetPawnViewLocation
// (Simulated, Native, Event, Public)

void APawn::GetPawnViewLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetPawnViewLocation");

	APawn_GetPawnViewLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetViewRotation
// (Simulated, Native, Event, Public)

void APawn::GetViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetViewRotation");

	APawn_GetViewRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetActorEyesViewPoint
// (Defined, Simulated, Event, Public, HasOutParms)

void APawn::GetActorEyesViewPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetActorEyesViewPoint");

	APawn_GetActorEyesViewPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ProcessViewRotation
// (Defined, Simulated, Public, HasOutParms)

void APawn::ProcessViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ProcessViewRotation");

	APawn_ProcessViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsFirstPerson
// (Defined, Simulated, Public)

void APawn::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsFirstPerson");

	APawn_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.WasPlayerPawn
// (Defined, Simulated, Public)

void APawn::WasPlayerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.WasPlayerPawn");

	APawn_WasPlayerPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsPlayerPawn
// (Simulated, Native, Public)

void APawn::IsPlayerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsPlayerPawn");

	APawn_IsPlayerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsLocallyControlled
// (Simulated, Native, HasOptionalParms, Public)

void APawn::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsLocallyControlled");

	APawn_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsHumanControlled
// (Final, Simulated, Native, HasOptionalParms, Public)

void APawn::IsHumanControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsHumanControlled");

	APawn_IsHumanControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void APawn::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DisplayDebug");

	APawn_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClimbLadder
// (Defined, Public)

void APawn::ClimbLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClimbLadder");

	APawn_ClimbLadder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.EndClimbLadder
// (Defined, Public)

void APawn::EndClimbLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.EndClimbLadder");

	APawn_EndClimbLadder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanSplash
// (Defined, Simulated, Public)

void APawn::CanSplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanSplash");

	APawn_CanSplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetWalking
// (Defined, Event, Public)

void APawn::SetWalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetWalking");

	APawn_SetWalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.RangedAttackTime
// (Defined, Public)

void APawn::RangedAttackTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.RangedAttackTime");

	APawn_RangedAttackTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.RecommendLongRangedAttack
// (Defined, Public)

void APawn::RecommendLongRangedAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.RecommendLongRangedAttack");

	APawn_RecommendLongRangedAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanGrabLadder
// (Defined, Public)

void APawn::CanGrabLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanGrabLadder");

	APawn_CanGrabLadder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.DropToGround
// (Defined, Public)

void APawn::DropToGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.DropToGround");

	APawn_DropToGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetDefaultCameraMode
// (Defined, Simulated, Public)

void APawn::GetDefaultCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetDefaultCameraMode");

	APawn_GetDefaultCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.UnPossessed
// (Defined, Public)

void APawn::UnPossessed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.UnPossessed");

	APawn_UnPossessed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.UpdateControllerOnPossess
// (Defined, Public)

void APawn::UpdateControllerOnPossess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.UpdateControllerOnPossess");

	APawn_UpdateControllerOnPossess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PossessedBy
// (Defined, Public)

void APawn::PossessedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PossessedBy");

	APawn_PossessedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.NotifyTeamChanged
// (Simulated, Public)

void APawn::NotifyTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.NotifyTeamChanged");

	APawn_NotifyTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayTeleportEffect
// (Defined, Public)

void APawn::PlayTeleportEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayTeleportEffect");

	APawn_PlayTeleportEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetHumanReadableName
// (Defined, Simulated, Public)

void APawn::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetHumanReadableName");

	APawn_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.NeedToTurn
// (Defined, Public, HasDefaults)

void APawn::NeedToTurn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.NeedToTurn");

	APawn_NeedToTurn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsFiring
// (Defined, Public)

void APawn::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsFiring");

	APawn_IsFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.HasRangedAttack
// (Defined, Public)

void APawn::HasRangedAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.HasRangedAttack");

	APawn_HasRangedAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FireOnRelease
// (Defined, Public)

void APawn::FireOnRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FireOnRelease");

	APawn_FireOnRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TooCloseToAttack
// (Defined, Public)

void APawn::TooCloseToAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TooCloseToAttack");

	APawn_TooCloseToAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanAttack
// (Defined, Public)

void APawn::CanAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanAttack");

	APawn_CanAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ChooseFireMode
// (Defined, Public)

void APawn::ChooseFireMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ChooseFireMode");

	APawn_ChooseFireMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BotFire
// (Defined, Public)

void APawn::BotFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BotFire");

	APawn_BotFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.WeaponStoppedFiring
// (Defined, Simulated, Public)

void APawn::WeaponStoppedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.WeaponStoppedFiring");

	APawn_WeaponStoppedFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.WeaponFired
// (Defined, Simulated, HasOptionalParms, Public)

void APawn::WeaponFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.WeaponFired");

	APawn_WeaponFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FlashLocationUpdated
// (Defined, Simulated, Public)

void APawn::FlashLocationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FlashLocationUpdated");

	APawn_FlashLocationUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Internal_ClearFlashLocation
// (Final, Defined, Public, HasOutParms)

void APawn::Internal_ClearFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Internal_ClearFlashLocation");

	APawn_Internal_ClearFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClearFlashLocation
// (Defined, Public)

void APawn::ClearFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClearFlashLocation");

	APawn_ClearFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Internal_SetFlashLocation
// (Final, Defined, Simulated, Public, HasOutParms)

void APawn::Internal_SetFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Internal_SetFlashLocation");

	APawn_Internal_SetFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetFlashLocation
// (Defined, Simulated, Public)

void APawn::SetFlashLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetFlashLocation");

	APawn_SetFlashLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Internal_ClearFlashCount
// (Final, Defined, Simulated, Public, HasOutParms)

void APawn::Internal_ClearFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Internal_ClearFlashCount");

	APawn_Internal_ClearFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClearFlashCount
// (Defined, Simulated, Public)

void APawn::ClearFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClearFlashCount");

	APawn_ClearFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FlashCountUpdated
// (Defined, Simulated, Public)

void APawn::FlashCountUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FlashCountUpdated");

	APawn_FlashCountUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Internal_IncrementFlashCount
// (Final, Defined, Simulated, Public, HasOutParms)

void APawn::Internal_IncrementFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Internal_IncrementFlashCount");

	APawn_Internal_IncrementFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IncrementFlashCount
// (Defined, Simulated, Public)

void APawn::IncrementFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IncrementFlashCount");

	APawn_IncrementFlashCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FiringModeUpdated
// (Defined, Simulated, Public)

void APawn::FiringModeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FiringModeUpdated");

	APawn_FiringModeUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Internal_SetFiringMode
// (Final, Defined, Simulated, Public, HasOutParms)

void APawn::Internal_SetFiringMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Internal_SetFiringMode");

	APawn_Internal_SetFiringMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetFiringMode
// (Defined, Simulated, Public)

void APawn::SetFiringMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetFiringMode");

	APawn_SetFiringMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetWeaponFiringMode
// (Defined, Simulated, Public)

void APawn::GetWeaponFiringMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetWeaponFiringMode");

	APawn_GetWeaponFiringMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StopFire
// (Defined, Simulated, Public)

void APawn::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StopFire");

	APawn_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StartFire
// (Defined, Simulated, Public)

void APawn::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StartFire");

	APawn_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StopFiring
// (Defined, Public)

void APawn::StopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StopFiring");

	APawn_StopFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.Reset
// (Defined, Public)

void APawn::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.Reset");

	APawn_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayerChangedTeam
// (Defined, Public)

void APawn::PlayerChangedTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayerChangedTeam");

	APawn_PlayerChangedTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetBaseEyeheight
// (Defined, Simulated, Public)

void APawn::SetBaseEyeheight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetBaseEyeheight");

	APawn_SetBaseEyeheight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SpecialMoveThruEdge
// (Event, HasOptionalParms, Public)

void APawn::SpecialMoveThruEdge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SpecialMoveThruEdge");

	APawn_SpecialMoveThruEdge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SpecialMoveTo
// (Public)

void APawn::SpecialMoveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SpecialMoveTo");

	APawn_SpecialMoveTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.TermRagdoll
// (Native, Public)

void APawn::TermRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.TermRagdoll");

	APawn_TermRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.InitRagdoll
// (Native, Public)

void APawn::InitRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.InitRagdoll");

	APawn_InitRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsValidEnemy
// (Defined, Simulated, Public)

void APawn::IsValidEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsValidEnemy");

	APawn_IsValidEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SpecialCostForPath
// (Defined, Public)

void APawn::SpecialCostForPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SpecialCostForPath");

	APawn_SpecialCostForPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetBoundingCylinder
// (Native, Public, HasOutParms)

void APawn::GetBoundingCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetBoundingCylinder");

	APawn_GetBoundingCylinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReachedDesiredRotation
// (Final, Native, Public)

void APawn::ReachedDesiredRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReachedDesiredRotation");

	APawn_ReachedDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetPushesRigidBodies
// (Native, Public)

void APawn::SetPushesRigidBodies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetPushesRigidBodies");

	APawn_SetPushesRigidBodies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ForceCrouch
// (Native, Public)

void APawn::ForceCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ForceCrouch");

	APawn_ForceCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReachedPoint
// (Native, Public)

void APawn::ReachedPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReachedPoint");

	APawn_ReachedPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReachedDestination
// (Native, Public)

void APawn::ReachedDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReachedDestination");

	APawn_ReachedDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetBestAnchor
// (Native, Public, HasOutParms)

void APawn::GetBestAnchor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetBestAnchor");

	APawn_GetBestAnchor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetAnchor
// (Native, Public)

void APawn::SetAnchor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetAnchor");

	APawn_SetAnchor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetRemoteViewPitch
// (Final, Native, Public)

void APawn::SetRemoteViewPitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetRemoteViewPitch");

	APawn_SetRemoteViewPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsInvisible
// (Native, Public)

void APawn::IsInvisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsInvisible");

	APawn_IsInvisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsValidEnemyTargetFor
// (Native, Public)

void APawn::IsValidEnemyTargetFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsValidEnemyTargetFor");

	APawn_IsValidEnemyTargetFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsValidTargetFor
// (Native, Public)

void APawn::IsValidTargetFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsValidTargetFor");

	APawn_IsValidTargetFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetFallDuration
// (Native, Public)

void APawn::GetFallDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetFallDuration");

	APawn_GetFallDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SuggestJumpVelocity
// (Native, Public, HasOutParms)

void APawn::SuggestJumpVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SuggestJumpVelocity");

	APawn_SuggestJumpVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ValidAnchor
// (Final, Native, Public)

void APawn::ValidAnchor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ValidAnchor");

	APawn_ValidAnchor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AdjustDestination
// (Final, Native, HasOptionalParms, Public)

void APawn::AdjustDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AdjustDestination");

	APawn_AdjustDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsAliveAndWell
// (Final, Simulated, Native, Public)

void APawn::IsAliveAndWell()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsAliveAndWell");

	APawn_IsAliveAndWell_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void APawn::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ReplicatedEvent");

	APawn_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetSkelControlScale
// (Defined, Event, Public)

void APawn::SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetSkelControlScale");

	APawn_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetMorphWeight
// (Defined, Event, Public)

void APawn::SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetMorphWeight");

	APawn_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetActorFaceFXAsset
// (Defined, Event, Public)

void APawn::GetActorFaceFXAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetActorFaceFXAsset");

	APawn_GetActorFaceFXAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FaceFXAudioFinished
// (Simulated, Public)

void APawn::FaceFXAudioFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FaceFXAudioFinished");

	APawn_FaceFXAudioFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.OnPlayFaceFXAnim
// (Defined, Simulated, Public)

void APawn::OnPlayFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.OnPlayFaceFXAnim");

	APawn_OnPlayFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CanActorPlayFaceFXAnim
// (Defined, Simulated, Public)

void APawn::CanActorPlayFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CanActorPlayFaceFXAnim");

	APawn_CanActorPlayFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsActorPlayingFaceFXAnim
// (Defined, Simulated, Public)

void APawn::IsActorPlayingFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsActorPlayingFaceFXAnim");

	APawn_IsActorPlayingFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.GetFaceFXAudioComponent
// (Defined, Simulated, Event, Public)

void APawn::GetFaceFXAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.GetFaceFXAudioComponent");

	APawn_GetFaceFXAudioComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.StopActorFaceFXAnim
// (Defined, Event, Public)

void APawn::StopActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.StopActorFaceFXAnim");

	APawn_StopActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PlayActorFaceFXAnim
// (Defined, Event, Public)

void APawn::PlayActorFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PlayActorFaceFXAnim");

	APawn_PlayActorFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_BeginAIGroup
// (Defined, Event, Public)

void APawn::MAT_BeginAIGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_BeginAIGroup");

	APawn_MAT_BeginAIGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.InterpolationFinished
// (Defined, Simulated, Event, Public)

void APawn::InterpolationFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.InterpolationFinished");

	APawn_InterpolationFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.InterpolationStarted
// (Defined, Simulated, Event, Public)

void APawn::InterpolationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.InterpolationStarted");

	APawn_InterpolationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_SetSkelControlScale
// (Native, Public)

void APawn::MAT_SetSkelControlScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_SetSkelControlScale");

	APawn_MAT_SetSkelControlScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_SetMorphWeight
// (Native, Public)

void APawn::MAT_SetMorphWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_SetMorphWeight");

	APawn_MAT_SetMorphWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_SetAnimWeights
// (Native, Public)

void APawn::MAT_SetAnimWeights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_SetAnimWeights");

	APawn_MAT_SetAnimWeights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_SetAnimPosition
// (Native, Public)

void APawn::MAT_SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_SetAnimPosition");

	APawn_MAT_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetAnimPosition
// (Defined, Simulated, Event, Public)

void APawn::SetAnimPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetAnimPosition");

	APawn_SetAnimPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_FinishAnimControl
// (Native, Public)

void APawn::MAT_FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_FinishAnimControl");

	APawn_MAT_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.FinishAnimControl
// (Defined, Simulated, Event, Public)

void APawn::FinishAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.FinishAnimControl");

	APawn_FinishAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.MAT_BeginAnimControl
// (Native, Public)

void APawn::MAT_BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.MAT_BeginAnimControl");

	APawn_MAT_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BeginAnimControl
// (Defined, Simulated, Event, Public)

void APawn::BeginAnimControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BeginAnimControl");

	APawn_BeginAnimControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.RestoreAnimSetsToDefault
// (Defined, Simulated, Event, Public)

void APawn::RestoreAnimSetsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.RestoreAnimSetsToDefault");

	APawn_RestoreAnimSetsToDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AnimSetListUpdated
// (Simulated, Event, Public)

void APawn::AnimSetListUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AnimSetListUpdated");

	APawn_AnimSetListUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.AddAnimSets
// (Final, Simulated, Native, Public, HasOutParms)

void APawn::AddAnimSets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.AddAnimSets");

	APawn_AddAnimSets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.BuildScriptAnimSetList
// (Simulated, Event, Public)

void APawn::BuildScriptAnimSetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.BuildScriptAnimSetList");

	APawn_BuildScriptAnimSetList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.UpdateAnimSetList
// (Final, Simulated, Native, Public)

void APawn::UpdateAnimSetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.UpdateAnimSetList");

	APawn_UpdateAnimSetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ClearAnimNodes
// (Defined, Simulated, Public)

void APawn::ClearAnimNodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ClearAnimNodes");

	APawn_ClearAnimNodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CacheAnimNodes
// (Defined, Simulated, Public)

void APawn::CacheAnimNodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CacheAnimNodes");

	APawn_CacheAnimNodes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.PostInitAnimTree
// (Defined, Simulated, Event, Public)

void APawn::PostInitAnimTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.PostInitAnimTree");

	APawn_PostInitAnimTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsDesiredRotationLocked
// (Final, Native, Public)

void APawn::IsDesiredRotationLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsDesiredRotationLocked");

	APawn_IsDesiredRotationLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.IsDesiredRotationInUse
// (Final, Native, Public)

void APawn::IsDesiredRotationInUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.IsDesiredRotationInUse");

	APawn_IsDesiredRotationInUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.CheckDesiredRotation
// (Final, Native, Public)

void APawn::CheckDesiredRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.CheckDesiredRotation");

	APawn_CheckDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.ResetDesiredRotation
// (Final, Native, Public)

void APawn::ResetDesiredRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.ResetDesiredRotation");

	APawn_ResetDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.LockDesiredRotation
// (Final, Native, HasOptionalParms, Public)

void APawn::LockDesiredRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.LockDesiredRotation");

	APawn_LockDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Pawn.SetDesiredRotation
// (Final, Native, HasOptionalParms, Public)

void APawn::SetDesiredRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Pawn.SetDesiredRotation");

	APawn_SetDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.ZeroMovementVariables
// (Defined, Simulated, Public)

void AVehicle::ZeroMovementVariables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.ZeroMovementVariables");

	AVehicle_ZeroMovementVariables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.NotifyDriverTakeHit
// (Public)

void AVehicle::NotifyDriverTakeHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.NotifyDriverTakeHit");

	AVehicle_NotifyDriverTakeHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AVehicle::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.ReplicatedEvent");

	AVehicle_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DrivingStatusChanged
// (Defined, Simulated, Public)

void AVehicle::DrivingStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DrivingStatusChanged");

	AVehicle_DrivingStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.HandleDeadVehicleDriver
// (Public)

void AVehicle::HandleDeadVehicleDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.HandleDeadVehicleDriver");

	AVehicle_HandleDeadVehicleDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.SetDriving
// (Defined, Simulated, Public)

void AVehicle::SetDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.SetDriving");

	AVehicle_SetDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.GetEntryLocation
// (Defined, Simulated, Event, Public)

void AVehicle::GetEntryLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.GetEntryLocation");

	AVehicle_GetEntryLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.CrushedBy
// (Public)

void AVehicle::CrushedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.CrushedBy");

	AVehicle_CrushedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PancakeOther
// (Defined, Public)

void AVehicle::PancakeOther()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PancakeOther");

	AVehicle_PancakeOther_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.EncroachingOn
// (Defined, Event, Public, HasDefaults)

void AVehicle::EncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.EncroachingOn");

	AVehicle_EncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.GetCollisionDamageInstigator
// (Defined, Public)

void AVehicle::GetCollisionDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.GetCollisionDamageInstigator");

	AVehicle_GetCollisionDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.EncroachedBy
// (Event, Public)

void AVehicle::EncroachedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.EncroachedBy");

	AVehicle_EncroachedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.FaceRotation
// (Simulated, Public)

void AVehicle::FaceRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.FaceRotation");

	AVehicle_FaceRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.GetDefaultCameraMode
// (Defined, Simulated, Public)

void AVehicle::GetDefaultCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.GetDefaultCameraMode");

	AVehicle_GetDefaultCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PlayDying
// (Simulated, Public)

void AVehicle::PlayDying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PlayDying");

	AVehicle_PlayDying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DriverDied
// (Defined, Public)

void AVehicle::DriverDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DriverDied");

	AVehicle_DriverDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.Died
// (Defined, Public)

void AVehicle::Died()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.Died");

	AVehicle_Died_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.ThrowActiveWeapon
// (Public)

void AVehicle::ThrowActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.ThrowActiveWeapon");

	AVehicle_ThrowActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.AdjustDriverDamage
// (Defined, Public, HasOutParms)

void AVehicle::AdjustDriverDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.AdjustDriverDamage");

	AVehicle_AdjustDriverDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.TakeDamage
// (Defined, Event, HasOptionalParms, Public)

void AVehicle::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.TakeDamage");

	AVehicle_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.SetKillInstigator
// (Defined, Public)

void AVehicle::SetKillInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.SetKillInstigator");

	AVehicle_SetKillInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.UnPossessed
// (Defined, Public)

void AVehicle::UnPossessed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.UnPossessed");

	AVehicle_UnPossessed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.TryExitPos
// (Defined, Public, HasDefaults)

void AVehicle::TryExitPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.TryExitPos");

	AVehicle_TryExitPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.FindAutoExit
// (Defined, Public, HasDefaults)

void AVehicle::FindAutoExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.FindAutoExit");

	AVehicle_FindAutoExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PlaceExitingDriver
// (Defined, HasOptionalParms, Public, HasDefaults)

void AVehicle::PlaceExitingDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PlaceExitingDriver");

	AVehicle_PlaceExitingDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DriverLeft
// (Defined, Public)

void AVehicle::DriverLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DriverLeft");

	AVehicle_DriverLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.SetInputs
// (Defined, Simulated, Public)

void AVehicle::SetInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.SetInputs");

	AVehicle_SetInputs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DriverLeave
// (Defined, Event, Public, HasDefaults)

void AVehicle::DriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DriverLeave");

	AVehicle_DriverLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.GetExitRotation
// (Defined, Public, HasDefaults)

void AVehicle::GetExitRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.GetExitRotation");

	AVehicle_GetExitRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.ContinueOnFoot
// (Defined, Event, Public)

void AVehicle::ContinueOnFoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.ContinueOnFoot");

	AVehicle_ContinueOnFoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DetachDriver
// (Simulated, Public)

void AVehicle::DetachDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DetachDriver");

	AVehicle_DetachDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.AttachDriver
// (Defined, Simulated, Public)

void AVehicle::AttachDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.AttachDriver");

	AVehicle_AttachDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.EntryAnnouncement
// (Public)

void AVehicle::EntryAnnouncement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.EntryAnnouncement");

	AVehicle_EntryAnnouncement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PossessedBy
// (Defined, Public)

void AVehicle::PossessedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PossessedBy");

	AVehicle_PossessedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DriverEnter
// (Defined, Public)

void AVehicle::DriverEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DriverEnter");

	AVehicle_DriverEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.TryToDrive
// (Defined, Public)

void AVehicle::TryToDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.TryToDrive");

	AVehicle_TryToDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.AnySeatAvailable
// (Defined, Public)

void AVehicle::AnySeatAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.AnySeatAvailable");

	AVehicle_AnySeatAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.CanEnterVehicle
// (Defined, Public)

void AVehicle::CanEnterVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.CanEnterVehicle");

	AVehicle_CanEnterVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.Destroyed_HandleDriver
// (Defined, Simulated, Public)

void AVehicle::Destroyed_HandleDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.Destroyed_HandleDriver");

	AVehicle_Destroyed_HandleDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.Destroyed
// (Defined, Simulated, Event, Public)

void AVehicle::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.Destroyed");

	AVehicle_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.CheatFly
// (Defined, Public)

void AVehicle::CheatFly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.CheatFly");

	AVehicle_CheatFly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.CheatGhost
// (Defined, Public)

void AVehicle::CheatGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.CheatGhost");

	AVehicle_CheatGhost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.CheatWalk
// (Defined, Public)

void AVehicle::CheatWalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.CheatWalk");

	AVehicle_CheatWalk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AVehicle::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PostBeginPlay");

	AVehicle_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.SetBaseEyeheight
// (Defined, Simulated, Public)

void AVehicle::SetBaseEyeheight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.SetBaseEyeheight");

	AVehicle_SetBaseEyeheight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.PlayerChangedTeam
// (Defined, Public)

void AVehicle::PlayerChangedTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.PlayerChangedTeam");

	AVehicle_PlayerChangedTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DriverRadiusDamage
// (Defined, HasOptionalParms, Public)

void AVehicle::DriverRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DriverRadiusDamage");

	AVehicle_DriverRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.TakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public)

void AVehicle::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.TakeRadiusDamage");

	AVehicle_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.GetTargetLocation
// (Simulated, Native, HasOptionalParms, Public)

void AVehicle::GetTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.GetTargetLocation");

	AVehicle_GetTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.Suicide
// (Defined, Public)

void AVehicle::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.Suicide");

	AVehicle_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void AVehicle::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.DisplayDebug");

	AVehicle_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Vehicle.NotifyTeamChanged
// (Defined, Simulated, Public)

void AVehicle::NotifyTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Vehicle.NotifyTeamChanged");

	AVehicle_NotifyTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.SetAllWheelParticleSystem
// (Defined, Simulated, Public)

void ASVehicle::SetAllWheelParticleSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.SetAllWheelParticleSystem");

	ASVehicle_SetAllWheelParticleSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.GetSVehicleDebug
// (Defined, Simulated, Public, HasOutParms)

void ASVehicle::GetSVehicleDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.GetSVehicleDebug");

	ASVehicle_GetSVehicleDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.HermiteEval
// (Defined, Simulated, Public)

void ASVehicle::HermiteEval()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.HermiteEval");

	ASVehicle_HermiteEval_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.DisplayWheelsDebug
// (Defined, Simulated, Public, HasDefaults)

void ASVehicle::DisplayWheelsDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.DisplayWheelsDebug");

	ASVehicle_DisplayWheelsDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void ASVehicle::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.DisplayDebug");

	ASVehicle_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.PostTeleport
// (Defined, Public)

void ASVehicle::PostTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.PostTeleport");

	ASVehicle_PostTeleport_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.SuspensionHeavyShift
// (Simulated, Event, Public)

void ASVehicle::SuspensionHeavyShift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.SuspensionHeavyShift");

	ASVehicle_SuspensionHeavyShift_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.RigidBodyCollision
// (Defined, Simulated, Event, Public, HasOutParms)

void ASVehicle::RigidBodyCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.RigidBodyCollision");

	ASVehicle_RigidBodyCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.DrivingStatusChanged
// (Defined, Simulated, Public)

void ASVehicle::DrivingStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.DrivingStatusChanged");

	ASVehicle_DrivingStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.VehiclePlayExitSound
// (Defined, Simulated, Public)

void ASVehicle::VehiclePlayExitSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.VehiclePlayExitSound");

	ASVehicle_VehiclePlayExitSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.VehiclePlayEnterSound
// (Defined, Simulated, Public)

void ASVehicle::VehiclePlayEnterSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.VehiclePlayEnterSound");

	ASVehicle_VehiclePlayEnterSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.StopEngineSoundTimed
// (Defined, Simulated, Public)

void ASVehicle::StopEngineSoundTimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.StopEngineSoundTimed");

	ASVehicle_StopEngineSoundTimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.StopEngineSound
// (Defined, Simulated, Public)

void ASVehicle::StopEngineSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.StopEngineSound");

	ASVehicle_StopEngineSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.StartEngineSoundTimed
// (Defined, Simulated, Public)

void ASVehicle::StartEngineSoundTimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.StartEngineSoundTimed");

	ASVehicle_StartEngineSoundTimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.StartEngineSound
// (Defined, Simulated, Public)

void ASVehicle::StartEngineSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.StartEngineSound");

	ASVehicle_StartEngineSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.HasWheelsOnGround
// (Simulated, Native, Public)

void ASVehicle::HasWheelsOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.HasWheelsOnGround");

	ASVehicle_HasWheelsOnGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.TryToDrive
// (Defined, Public)

void ASVehicle::TryToDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.TryToDrive");

	ASVehicle_TryToDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.GetDefaultCameraMode
// (Defined, Simulated, Public)

void ASVehicle::GetDefaultCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.GetDefaultCameraMode");

	ASVehicle_GetDefaultCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.CalcCamera
// (Defined, Simulated, Public, HasOutParms, HasDefaults)

void ASVehicle::CalcCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.CalcCamera");

	ASVehicle_CalcCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.Died
// (Defined, Public)

void ASVehicle::Died()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.Died");

	ASVehicle_Died_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.AddVelocity
// (Defined, HasOptionalParms, Public)

void ASVehicle::AddVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.AddVelocity");

	ASVehicle_AddVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.InitVehicleRagdoll
// (Native, Public)

void ASVehicle::InitVehicleRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.InitVehicleRagdoll");

	ASVehicle_InitVehicleRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.TakeRadiusDamage
// (Defined, Simulated, HasOptionalParms, Public, HasDefaults)

void ASVehicle::TakeRadiusDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.TakeRadiusDamage");

	ASVehicle_TakeRadiusDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.StopVehicleSounds
// (Defined, Simulated, Public)

void ASVehicle::StopVehicleSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.StopVehicleSounds");

	ASVehicle_StopVehicleSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.TurnOff
// (Defined, Simulated, Public)

void ASVehicle::TurnOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.TurnOff");

	ASVehicle_TurnOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.Destroyed
// (Defined, Simulated, Event, Public)

void ASVehicle::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.Destroyed");

	ASVehicle_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.PostInitAnimTree
// (Defined, Simulated, Event, Public)

void ASVehicle::PostInitAnimTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.PostInitAnimTree");

	ASVehicle_PostInitAnimTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ASVehicle::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.PostBeginPlay");

	ASVehicle_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.SetWheelCollision
// (Final, Native, Public)

void ASVehicle::SetWheelCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.SetWheelCollision");

	ASVehicle_SetWheelCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.IsSleeping
// (Native, Public)

void ASVehicle::IsSleeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.IsSleeping");

	ASVehicle_IsSleeping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.AddTorque
// (Native, Public)

void ASVehicle::AddTorque()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.AddTorque");

	ASVehicle_AddTorque_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.AddImpulse
// (Native, Public)

void ASVehicle::AddImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.AddImpulse");

	ASVehicle_AddImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SVehicle.AddForce
// (Native, Public)

void ASVehicle::AddForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SVehicle.AddForce");

	ASVehicle_AddForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.OnToggleConstraintDrive
// (Defined, Simulated, Public)

void ARB_ConstraintActor::OnToggleConstraintDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.OnToggleConstraintDrive");

	ARB_ConstraintActor_OnToggleConstraintDrive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.OnToggle
// (Defined, Simulated, Public)

void ARB_ConstraintActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.OnToggle");

	ARB_ConstraintActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.OnDestroy
// (Defined, Simulated, Public)

void ARB_ConstraintActor::OnDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.OnDestroy");

	ARB_ConstraintActor_OnDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.TermConstraint
// (Final, Native, Public)

void ARB_ConstraintActor::TermConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.TermConstraint");

	ARB_ConstraintActor_TermConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.InitConstraint
// (Final, Native, HasOptionalParms, Public)

void ARB_ConstraintActor::InitConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.InitConstraint");

	ARB_ConstraintActor_InitConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintActor.SetDisableCollision
// (Final, Native, Public)

void ARB_ConstraintActor::SetDisableCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintActor.SetDisableCollision");

	ARB_ConstraintActor_SetDisableCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_LineImpulseActor.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ARB_LineImpulseActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_LineImpulseActor.ReplicatedEvent");

	ARB_LineImpulseActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_LineImpulseActor.OnToggle
// (Defined, Simulated, Public)

void ARB_LineImpulseActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_LineImpulseActor.OnToggle");

	ARB_LineImpulseActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_LineImpulseActor.FireLineImpulse
// (Final, Native, Public)

void ARB_LineImpulseActor::FireLineImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_LineImpulseActor.FireLineImpulse");

	ARB_LineImpulseActor_FireLineImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_RadialImpulseActor.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ARB_RadialImpulseActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_RadialImpulseActor.ReplicatedEvent");

	ARB_RadialImpulseActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_RadialImpulseActor.OnToggle
// (Defined, Simulated, Public)

void ARB_RadialImpulseActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_RadialImpulseActor.OnToggle");

	ARB_RadialImpulseActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Thruster.OnToggle
// (Defined, Simulated, Public)

void ARB_Thruster::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Thruster.OnToggle");

	ARB_Thruster_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_RadialImpulseComponent.FireImpulse
// (Native, Public)

void URB_RadialImpulseComponent::FireImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_RadialImpulseComponent.FireImpulse");

	URB_RadialImpulseComponent_FireImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.GetOrientation
// (Native, Public)

void URB_Handle::GetOrientation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.GetOrientation");

	URB_Handle_GetOrientation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.SetOrientation
// (Native, Public, HasOutParms)

void URB_Handle::SetOrientation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.SetOrientation");

	URB_Handle_SetOrientation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.UpdateSmoothLocation
// (Native, Public, HasOutParms)

void URB_Handle::UpdateSmoothLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.UpdateSmoothLocation");

	URB_Handle_UpdateSmoothLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.SetSmoothLocation
// (Native, Public)

void URB_Handle::SetSmoothLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.SetSmoothLocation");

	URB_Handle_SetSmoothLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.SetLocation
// (Native, Public)

void URB_Handle::SetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.SetLocation");

	URB_Handle_SetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.ReleaseComponent
// (Native, Public)

void URB_Handle::ReleaseComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.ReleaseComponent");

	URB_Handle_ReleaseComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Handle.GrabComponent
// (Native, Public)

void URB_Handle::GrabComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Handle.GrabComponent");

	URB_Handle_GrabComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Spring.Clear
// (Native, Public)

void URB_Spring::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Spring.Clear");

	URB_Spring_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_Spring.SetComponents
// (Native, Public)

void URB_Spring::SetComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_Spring.SetComponents");

	URB_Spring_SetComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicalMaterial.GetPhysicalMaterialProperty
// (Defined, Simulated, Public)

void UPhysicalMaterial::GetPhysicalMaterialProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicalMaterial.GetPhysicalMaterialProperty");

	UPhysicalMaterial_GetPhysicalMaterialProperty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicalMaterial.FindFractureSounds
// (Defined, Simulated, Public, HasOutParms)

void UPhysicalMaterial::FindFractureSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicalMaterial.FindFractureSounds");

	UPhysicalMaterial_FindFractureSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicalMaterial.FindPhysEffectInfo
// (Native, Public)

void UPhysicalMaterial::FindPhysEffectInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicalMaterial.FindPhysEffectInfo");

	UPhysicalMaterial_FindPhysEffectInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAsset.FindBodyIndex
// (Final, Native, Public)

void UPhysicsAsset::FindBodyIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAsset.FindBodyIndex");

	UPhysicsAsset_FindBodyIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.FindConstraintInstance
// (Final, Native, Public)

void UPhysicsAssetInstance::FindConstraintInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.FindConstraintInstance");

	UPhysicsAssetInstance_FindConstraintInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.FindBodyInstance
// (Final, Native, Public)

void UPhysicsAssetInstance::FindBodyInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.FindBodyInstance");

	UPhysicsAssetInstance_FindBodyInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetFullAnimWeightBonesFixed
// (Final, Native, Public)

void UPhysicsAssetInstance::SetFullAnimWeightBonesFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetFullAnimWeightBonesFixed");

	UPhysicsAssetInstance_SetFullAnimWeightBonesFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetFullAnimWeightBlockRigidBody
// (Final, Native, Public)

void UPhysicsAssetInstance::SetFullAnimWeightBlockRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetFullAnimWeightBlockRigidBody");

	UPhysicsAssetInstance_SetFullAnimWeightBlockRigidBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetNamedBodiesBlockRigidBody
// (Final, Native, Public)

void UPhysicsAssetInstance::SetNamedBodiesBlockRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetNamedBodiesBlockRigidBody");

	UPhysicsAssetInstance_SetNamedBodiesBlockRigidBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetNamedRBBoneSprings
// (Final, Native, Public)

void UPhysicsAssetInstance::SetNamedRBBoneSprings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetNamedRBBoneSprings");

	UPhysicsAssetInstance_SetNamedRBBoneSprings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularVelocityDrive
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetNamedMotorsAngularVelocityDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularVelocityDrive");

	UPhysicsAssetInstance_SetNamedMotorsAngularVelocityDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularPositionDrive
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetNamedMotorsAngularPositionDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularPositionDrive");

	UPhysicsAssetInstance_SetNamedMotorsAngularPositionDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularDriveParams
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetAllMotorsAngularDriveParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularDriveParams");

	UPhysicsAssetInstance_SetAllMotorsAngularDriveParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularVelocityDrive
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetAllMotorsAngularVelocityDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularVelocityDrive");

	UPhysicsAssetInstance_SetAllMotorsAngularVelocityDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularPositionDrive
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetAllMotorsAngularPositionDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularPositionDrive");

	UPhysicsAssetInstance_SetAllMotorsAngularPositionDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.ForceAllBodiesBelowUnfixed
// (Final, Native, Public, HasOutParms)

void UPhysicsAssetInstance::ForceAllBodiesBelowUnfixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.ForceAllBodiesBelowUnfixed");

	UPhysicsAssetInstance_ForceAllBodiesBelowUnfixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetNamedBodiesFixed
// (Final, Native, HasOptionalParms, Public)

void UPhysicsAssetInstance::SetNamedBodiesFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetNamedBodiesFixed");

	UPhysicsAssetInstance_SetNamedBodiesFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetAllBodiesFixed
// (Final, Native, Public)

void UPhysicsAssetInstance::SetAllBodiesFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetAllBodiesFixed");

	UPhysicsAssetInstance_SetAllBodiesFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.GetTotalMassBelowBone
// (Final, Native, Public)

void UPhysicsAssetInstance::GetTotalMassBelowBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.GetTotalMassBelowBone");

	UPhysicsAssetInstance_GetTotalMassBelowBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetAngularDriveScale
// (Final, Native, Public)

void UPhysicsAssetInstance::SetAngularDriveScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetAngularDriveScale");

	UPhysicsAssetInstance_SetAngularDriveScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PhysicsAssetInstance.SetLinearDriveScale
// (Final, Native, Public)

void UPhysicsAssetInstance::SetLinearDriveScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PhysicsAssetInstance.SetLinearDriveScale");

	UPhysicsAssetInstance_SetLinearDriveScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.UpdateDampingProperties
// (Final, Native, Public)

void URB_BodyInstance::UpdateDampingProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.UpdateDampingProperties");

	URB_BodyInstance_UpdateDampingProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.UpdateMassProperties
// (Final, Native, Public)

void URB_BodyInstance::UpdateMassProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.UpdateMassProperties");

	URB_BodyInstance_UpdateMassProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetContactReportForceThreshold
// (Final, Native, Public)

void URB_BodyInstance::SetContactReportForceThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetContactReportForceThreshold");

	URB_BodyInstance_SetContactReportForceThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.EnableCollisionResponse
// (Final, Native, Public)

void URB_BodyInstance::EnableCollisionResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.EnableCollisionResponse");

	URB_BodyInstance_EnableCollisionResponse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetPhysMaterialOverride
// (Final, Native, Public)

void URB_BodyInstance::SetPhysMaterialOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetPhysMaterialOverride");

	URB_BodyInstance_SetPhysMaterialOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetBlockRigidBody
// (Final, Native, Public)

void URB_BodyInstance::SetBlockRigidBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetBlockRigidBody");

	URB_BodyInstance_SetBlockRigidBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetBoneSpringTarget
// (Final, Native, Public, HasOutParms)

void URB_BodyInstance::SetBoneSpringTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetBoneSpringTarget");

	URB_BodyInstance_SetBoneSpringTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetBoneSpringParams
// (Final, Native, Public)

void URB_BodyInstance::SetBoneSpringParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetBoneSpringParams");

	URB_BodyInstance_SetBoneSpringParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.EnableBoneSpring
// (Final, Native, Public, HasOutParms)

void URB_BodyInstance::EnableBoneSpring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.EnableBoneSpring");

	URB_BodyInstance_EnableBoneSpring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetUnrealWorldVelocityAtPoint
// (Final, Native, Public)

void URB_BodyInstance::GetUnrealWorldVelocityAtPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetUnrealWorldVelocityAtPoint");

	URB_BodyInstance_GetUnrealWorldVelocityAtPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetUnrealWorldAngularVelocity
// (Final, Native, Public)

void URB_BodyInstance::GetUnrealWorldAngularVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetUnrealWorldAngularVelocity");

	URB_BodyInstance_GetUnrealWorldAngularVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetUnrealWorldVelocity
// (Final, Native, Public)

void URB_BodyInstance::GetUnrealWorldVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetUnrealWorldVelocity");

	URB_BodyInstance_GetUnrealWorldVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetUnrealWorldTM
// (Final, Native, Public)

void URB_BodyInstance::GetUnrealWorldTM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetUnrealWorldTM");

	URB_BodyInstance_GetUnrealWorldTM_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetPhysicsAssetInstance
// (Final, Native, Public)

void URB_BodyInstance::GetPhysicsAssetInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetPhysicsAssetInstance");

	URB_BodyInstance_GetPhysicsAssetInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.IsValidBodyInstance
// (Final, Native, Public)

void URB_BodyInstance::IsValidBodyInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.IsValidBodyInstance");

	URB_BodyInstance_IsValidBodyInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.IsFixed
// (Final, Native, Public)

void URB_BodyInstance::IsFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.IsFixed");

	URB_BodyInstance_IsFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.SetFixed
// (Final, Native, Public)

void URB_BodyInstance::SetFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.SetFixed");

	URB_BodyInstance_SetFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_BodyInstance.GetBodyMass
// (Final, Native, Public)

void URB_BodyInstance::GetBodyMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_BodyInstance.GetBodyMass");

	URB_BodyInstance_GetBodyMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.MoveKinActorTransform
// (Final, Native, Public, HasOutParms)

void URB_ConstraintInstance::MoveKinActorTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.MoveKinActorTransform");

	URB_ConstraintInstance_MoveKinActorTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearLimitSize
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearLimitSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearLimitSize");

	URB_ConstraintInstance_SetLinearLimitSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularDOFLimitScale
// (Final, Native, Public)

void URB_ConstraintInstance::SetAngularDOFLimitScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularDOFLimitScale");

	URB_ConstraintInstance_SetAngularDOFLimitScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularDriveParams
// (Final, Native, Public)

void URB_ConstraintInstance::SetAngularDriveParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularDriveParams");

	URB_ConstraintInstance_SetAngularDriveParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularVelocityTarget
// (Final, Native, Public)

void URB_ConstraintInstance::SetAngularVelocityTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularVelocityTarget");

	URB_ConstraintInstance_SetAngularVelocityTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularPositionTarget
// (Final, Native, Public, HasOutParms)

void URB_ConstraintInstance::SetAngularPositionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularPositionTarget");

	URB_ConstraintInstance_SetAngularPositionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearDriveParams
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearDriveParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearDriveParams");

	URB_ConstraintInstance_SetLinearDriveParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearVelocityTarget
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearVelocityTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearVelocityTarget");

	URB_ConstraintInstance_SetLinearVelocityTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearPositionTarget
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearPositionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearPositionTarget");

	URB_ConstraintInstance_SetLinearPositionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularVelocityDrive
// (Final, Native, Public)

void URB_ConstraintInstance::SetAngularVelocityDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularVelocityDrive");

	URB_ConstraintInstance_SetAngularVelocityDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetAngularPositionDrive
// (Final, Native, Public)

void URB_ConstraintInstance::SetAngularPositionDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetAngularPositionDrive");

	URB_ConstraintInstance_SetAngularPositionDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearVelocityDrive
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearVelocityDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearVelocityDrive");

	URB_ConstraintInstance_SetLinearVelocityDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.SetLinearPositionDrive
// (Final, Native, Public)

void URB_ConstraintInstance::SetLinearPositionDrive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.SetLinearPositionDrive");

	URB_ConstraintInstance_SetLinearPositionDrive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.GetConstraintLocation
// (Final, Native, Public)

void URB_ConstraintInstance::GetConstraintLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.GetConstraintLocation");

	URB_ConstraintInstance_GetConstraintLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.GetPhysicsAssetInstance
// (Final, Native, Public)

void URB_ConstraintInstance::GetPhysicsAssetInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.GetPhysicsAssetInstance");

	URB_ConstraintInstance_GetPhysicsAssetInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.TermConstraint
// (Final, Native, Public)

void URB_ConstraintInstance::TermConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.TermConstraint");

	URB_ConstraintInstance_TermConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_ConstraintInstance.InitConstraint
// (Final, Native, Public)

void URB_ConstraintInstance::InitConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_ConstraintInstance.InitConstraint");

	URB_ConstraintInstance_InitConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxGenericForceFieldBrush.StopsProjectile
// (Defined, Simulated, Public)

void ANxGenericForceFieldBrush::StopsProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxGenericForceFieldBrush.StopsProjectile");

	ANxGenericForceFieldBrush_StopsProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxGenericForceFieldBrush.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ANxGenericForceFieldBrush::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxGenericForceFieldBrush.PostBeginPlay");

	ANxGenericForceFieldBrush_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxForceField.OnToggle
// (Defined, Simulated, Public)

void ANxForceField::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxForceField.OnToggle");

	ANxForceField_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxForceField.DoInitRBPhys
// (Native, Public)

void ANxForceField::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxForceField.DoInitRBPhys");

	ANxForceField_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxCylindricalForceFieldCapsule.DoInitRBPhys
// (Native, Public)

void ANxCylindricalForceFieldCapsule::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxCylindricalForceFieldCapsule.DoInitRBPhys");

	ANxCylindricalForceFieldCapsule_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxForceFieldGeneric.DoInitRBPhys
// (Native, Public)

void ANxForceFieldGeneric::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxForceFieldGeneric.DoInitRBPhys");

	ANxForceFieldGeneric_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxForceFieldRadial.DoInitRBPhys
// (Native, Public)

void ANxForceFieldRadial::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxForceFieldRadial.DoInitRBPhys");

	ANxForceFieldRadial_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxForceFieldTornado.DoInitRBPhys
// (Native, Public)

void ANxForceFieldTornado::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxForceFieldTornado.DoInitRBPhys");

	ANxForceFieldTornado_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.NxGenericForceFieldBox.DoInitRBPhys
// (Native, Public)

void ANxGenericForceFieldBox::DoInitRBPhys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.NxGenericForceFieldBox.DoInitRBPhys");

	ANxGenericForceFieldBox_DoInitRBPhys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_CylindricalForceActor.OnToggle
// (Defined, Simulated, Public)

void ARB_CylindricalForceActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_CylindricalForceActor.OnToggle");

	ARB_CylindricalForceActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.RB_RadialForceActor.OnToggle
// (Defined, Simulated, Public)

void ARB_RadialForceActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.RB_RadialForceActor.OnToggle");

	ARB_RadialForceActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShape.GetDrawComponent
// (Event, Public)

void UForceFieldShape::GetDrawComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShape.GetDrawComponent");

	UForceFieldShape_GetDrawComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShape.FillByCylinder
// (Event, Public)

void UForceFieldShape::FillByCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShape.FillByCylinder");

	UForceFieldShape_FillByCylinder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShape.FillByCapsule
// (Event, Public)

void UForceFieldShape::FillByCapsule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShape.FillByCapsule");

	UForceFieldShape_FillByCapsule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShape.FillByBox
// (Event, Public)

void UForceFieldShape::FillByBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShape.FillByBox");

	UForceFieldShape_FillByBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShape.FillBySphere
// (Event, Public)

void UForceFieldShape::FillBySphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShape.FillBySphere");

	UForceFieldShape_FillBySphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.GetDrawComponent
// (Defined, Event, Public)

void UForceFieldShapeBox::GetDrawComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.GetDrawComponent");

	UForceFieldShapeBox_GetDrawComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.FillByCylinder
// (Defined, Event, Public)

void UForceFieldShapeBox::FillByCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.FillByCylinder");

	UForceFieldShapeBox_FillByCylinder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.FillByCapsule
// (Defined, Event, Public)

void UForceFieldShapeBox::FillByCapsule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.FillByCapsule");

	UForceFieldShapeBox_FillByCapsule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.FillByBox
// (Defined, Event, Public)

void UForceFieldShapeBox::FillByBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.FillByBox");

	UForceFieldShapeBox_FillByBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.FillBySphere
// (Defined, Event, Public)

void UForceFieldShapeBox::FillBySphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.FillBySphere");

	UForceFieldShapeBox_FillBySphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeBox.GetRadii
// (Defined, Event, Public)

void UForceFieldShapeBox::GetRadii()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeBox.GetRadii");

	UForceFieldShapeBox_GetRadii_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.GetDrawComponent
// (Defined, Event, Public)

void UForceFieldShapeCapsule::GetDrawComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.GetDrawComponent");

	UForceFieldShapeCapsule_GetDrawComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.FillByCylinder
// (Defined, Event, Public)

void UForceFieldShapeCapsule::FillByCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.FillByCylinder");

	UForceFieldShapeCapsule_FillByCylinder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.FillByCapsule
// (Defined, Event, Public)

void UForceFieldShapeCapsule::FillByCapsule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.FillByCapsule");

	UForceFieldShapeCapsule_FillByCapsule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.FillByBox
// (Defined, Event, Public)

void UForceFieldShapeCapsule::FillByBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.FillByBox");

	UForceFieldShapeCapsule_FillByBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.FillBySphere
// (Defined, Event, Public)

void UForceFieldShapeCapsule::FillBySphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.FillBySphere");

	UForceFieldShapeCapsule_FillBySphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.GetRadius
// (Defined, Event, Public)

void UForceFieldShapeCapsule::GetRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.GetRadius");

	UForceFieldShapeCapsule_GetRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeCapsule.GetHeight
// (Defined, Event, Public)

void UForceFieldShapeCapsule::GetHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeCapsule.GetHeight");

	UForceFieldShapeCapsule_GetHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.GetDrawComponent
// (Defined, Event, Public)

void UForceFieldShapeSphere::GetDrawComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.GetDrawComponent");

	UForceFieldShapeSphere_GetDrawComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.FillByCylinder
// (Defined, Event, Public)

void UForceFieldShapeSphere::FillByCylinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.FillByCylinder");

	UForceFieldShapeSphere_FillByCylinder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.FillByCapsule
// (Defined, Event, Public)

void UForceFieldShapeSphere::FillByCapsule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.FillByCapsule");

	UForceFieldShapeSphere_FillByCapsule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.FillByBox
// (Defined, Event, Public)

void UForceFieldShapeSphere::FillByBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.FillByBox");

	UForceFieldShapeSphere_FillByBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.FillBySphere
// (Defined, Event, Public)

void UForceFieldShapeSphere::FillBySphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.FillBySphere");

	UForceFieldShapeSphere_FillBySphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ForceFieldShapeSphere.GetRadius
// (Defined, Event, Public)

void UForceFieldShapeSphere::GetRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ForceFieldShapeSphere.GetRadius");

	UForceFieldShapeSphere_GetRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceFrame.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USequenceFrame::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceFrame.IsValidUISequenceObject");

	USequenceFrame_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Sequence.SetEnabled
// (Final, Native, Public)

void USequence::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Sequence.SetEnabled");

	USequence_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Sequence.Reset
// (Defined, Public)

void USequence::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Sequence.Reset");

	USequence_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Sequence.FindSeqObjectsByName
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequence::FindSeqObjectsByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Sequence.FindSeqObjectsByName");

	USequence_FindSeqObjectsByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Sequence.FindSeqObjectsByClass
// (Final, Native, Public, HasOutParms)

void USequence::FindSeqObjectsByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Sequence.FindSeqObjectsByClass");

	USequence_FindSeqObjectsByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrefabSequence.GetOwnerPrefab
// (Final, Native, Public)

void UPrefabSequence::GetOwnerPrefab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrefabSequence.GetOwnerPrefab");

	UPrefabSequence_GetOwnerPrefab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PrefabSequence.SetOwnerPrefab
// (Final, Native, Public)

void UPrefabSequence::SetOwnerPrefab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PrefabSequence.SetOwnerPrefab");

	UPrefabSequence_SetOwnerPrefab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ActivateRemoteEvent.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ActivateRemoteEvent::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ActivateRemoteEvent.GetObjClassVersion");

	USeqAct_ActivateRemoteEvent_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_CameraFade.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_CameraFade::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_CameraFade.GetObjClassVersion");

	USeqAct_CameraFade_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_CameraLookAt.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_CameraLookAt::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_CameraLookAt.GetObjClassVersion");

	USeqAct_CameraLookAt_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_CameraShake.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_CameraShake::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_CameraShake.GetObjClassVersion");

	USeqAct_CameraShake_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ChangeCollision.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ChangeCollision::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ChangeCollision.GetObjClassVersion");

	USeqAct_ChangeCollision_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ConvertToString.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ConvertToString::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ConvertToString.GetObjClassVersion");

	USeqAct_ConvertToString_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_DrawText.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_DrawText::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_DrawText.GetObjClassVersion");

	USeqAct_DrawText_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Gate.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Gate::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Gate.IsValidUISequenceObject");

	USeqAct_Gate_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_GetLocationAndRotation.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_GetLocationAndRotation::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_GetLocationAndRotation.GetObjClassVersion");

	USeqAct_GetLocationAndRotation_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_GetVelocity.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_GetVelocity::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_GetVelocity.GetObjClassVersion");

	USeqAct_GetVelocity_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_IsInObjectList.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_IsInObjectList::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_IsInObjectList.IsValidUISequenceObject");

	USeqAct_IsInObjectList_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Latent.Update
// (Event, Public)

void USeqAct_Latent::Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Latent.Update");

	USeqAct_Latent_Update_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Latent.AbortFor
// (Native, Public)

void USeqAct_Latent::AbortFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Latent.AbortFor");

	USeqAct_Latent_AbortFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ActorFactory.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ActorFactory::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ActorFactory.GetObjClassVersion");

	USeqAct_ActorFactory_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_AIMoveToActor.PickDestination
// (Defined, Public)

void USeqAct_AIMoveToActor::PickDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_AIMoveToActor.PickDestination");

	USeqAct_AIMoveToActor_PickDestination_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_AIMoveToActor.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_AIMoveToActor::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_AIMoveToActor.GetObjClassVersion");

	USeqAct_AIMoveToActor_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Delay.ResetDelayActive
// (Native, Public)

void USeqAct_Delay::ResetDelayActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Delay.ResetDelayActive");

	USeqAct_Delay_ResetDelayActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Delay.Reset
// (Defined, Public)

void USeqAct_Delay::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Delay.Reset");

	USeqAct_Delay_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Delay.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Delay::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Delay.IsValidUISequenceObject");

	USeqAct_Delay_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Interp.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_Interp::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Interp.GetObjClassVersion");

	USeqAct_Interp_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Interp.Reset
// (Defined, Public)

void USeqAct_Interp::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Interp.Reset");

	USeqAct_Interp_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Interp.AddPlayerToDirectorTracks
// (Final, Native, Public)

void USeqAct_Interp::AddPlayerToDirectorTracks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Interp.AddPlayerToDirectorTracks");

	USeqAct_Interp_AddPlayerToDirectorTracks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Interp.Stop
// (Final, Native, Public)

void USeqAct_Interp::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Interp.Stop");

	USeqAct_Interp_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Interp.SetPosition
// (Final, Native, HasOptionalParms, Public)

void USeqAct_Interp::SetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Interp.SetPosition");

	USeqAct_Interp_SetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_PlaySound.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_PlaySound::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_PlaySound.GetObjClassVersion");

	USeqAct_PlaySound_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_StreamInTextures.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_StreamInTextures::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_StreamInTextures.GetObjClassVersion");

	USeqAct_StreamInTextures_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_StreamInTextures.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_StreamInTextures::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_StreamInTextures.IsValidUISequenceObject");

	USeqAct_StreamInTextures_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Log.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_Log::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Log.GetObjClassVersion");

	USeqAct_Log_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Log.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Log::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Log.IsValidUISequenceObject");

	USeqAct_Log_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ModifyHealth.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ModifyHealth::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ModifyHealth.GetObjClassVersion");

	USeqAct_ModifyHealth_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ParticleEventGenerator.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ParticleEventGenerator::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ParticleEventGenerator.GetObjClassVersion");

	USeqAct_ParticleEventGenerator_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_PlayCameraAnim.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_PlayCameraAnim::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_PlayCameraAnim.GetObjClassVersion");

	USeqAct_PlayCameraAnim_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetCameraTarget.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetCameraTarget::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetCameraTarget.GetObjClassVersion");

	USeqAct_SetCameraTarget_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetSequenceVariable.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_SetSequenceVariable::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetSequenceVariable.IsValidUISequenceObject");

	USeqAct_SetSequenceVariable_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetFloat.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetFloat::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetFloat.GetObjClassVersion");

	USeqAct_SetFloat_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetInt.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetInt::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetInt.GetObjClassVersion");

	USeqAct_SetInt_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetLocation.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetLocation::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetLocation.GetObjClassVersion");

	USeqAct_SetLocation_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetObject.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetObject::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetObject.GetObjClassVersion");

	USeqAct_SetObject_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetString.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetString::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetString.GetObjClassVersion");

	USeqAct_SetString_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Switch.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Switch::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Switch.IsValidUISequenceObject");

	USeqAct_Switch_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Timer.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Timer::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Timer.IsValidUISequenceObject");

	USeqAct_Timer_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Toggle.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_Toggle::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Toggle.IsValidUISequenceObject");

	USeqAct_Toggle_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_Trace.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_Trace::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_Trace.GetObjClassVersion");

	USeqAct_Trace_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceCondition.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USequenceCondition::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceCondition.IsValidUISequenceObject");

	USequenceCondition_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_GetServerType.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqCond_GetServerType::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_GetServerType.GetObjClassVersion");

	USeqCond_GetServerType_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_IsLoggedIn.CheckLogins
// (Defined, Event, Public)

void USeqCond_IsLoggedIn::CheckLogins()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_IsLoggedIn.CheckLogins");

	USeqCond_IsLoggedIn_CheckLogins_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchBase.RemoveValueEntry
// (Event, Public)

void USeqCond_SwitchBase::RemoveValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchBase.RemoveValueEntry");

	USeqCond_SwitchBase_RemoveValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchBase.InsertValueEntry
// (Event, Public)

void USeqCond_SwitchBase::InsertValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchBase.InsertValueEntry");

	USeqCond_SwitchBase_InsertValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchBase.IsFallThruEnabled
// (Defined, Event, Public)

void USeqCond_SwitchBase::IsFallThruEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchBase.IsFallThruEnabled");

	USeqCond_SwitchBase_IsFallThruEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchBase.VerifyDefaultCaseValue
// (Event, Public)

void USeqCond_SwitchBase::VerifyDefaultCaseValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchBase.VerifyDefaultCaseValue");

	USeqCond_SwitchBase_VerifyDefaultCaseValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchClass.RemoveValueEntry
// (Defined, Event, Public)

void USeqCond_SwitchClass::RemoveValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchClass.RemoveValueEntry");

	USeqCond_SwitchClass_RemoveValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchClass.InsertValueEntry
// (Defined, Event, Public)

void USeqCond_SwitchClass::InsertValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchClass.InsertValueEntry");

	USeqCond_SwitchClass_InsertValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchClass.IsFallThruEnabled
// (Defined, Event, Public)

void USeqCond_SwitchClass::IsFallThruEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchClass.IsFallThruEnabled");

	USeqCond_SwitchClass_IsFallThruEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchClass.VerifyDefaultCaseValue
// (Defined, Event, Public)

void USeqCond_SwitchClass::VerifyDefaultCaseValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchClass.VerifyDefaultCaseValue");

	USeqCond_SwitchClass_VerifyDefaultCaseValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchObject.RemoveValueEntry
// (Defined, Event, Public)

void USeqCond_SwitchObject::RemoveValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchObject.RemoveValueEntry");

	USeqCond_SwitchObject_RemoveValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchObject.InsertValueEntry
// (Defined, Event, Public)

void USeqCond_SwitchObject::InsertValueEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchObject.InsertValueEntry");

	USeqCond_SwitchObject_InsertValueEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchObject.IsFallThruEnabled
// (Defined, Event, Public)

void USeqCond_SwitchObject::IsFallThruEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchObject.IsFallThruEnabled");

	USeqCond_SwitchObject_IsFallThruEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqCond_SwitchObject.VerifyDefaultCaseValue
// (Defined, Event, Public)

void USeqCond_SwitchObject::VerifyDefaultCaseValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqCond_SwitchObject.VerifyDefaultCaseValue");

	USeqCond_SwitchObject_VerifyDefaultCaseValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceEvent.Toggled
// (Event, Public)

void USequenceEvent::Toggled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceEvent.Toggled");

	USequenceEvent_Toggled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceEvent.Reset
// (Defined, Public)

void USequenceEvent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceEvent.Reset");

	USequenceEvent_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceEvent.CheckActivate
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USequenceEvent::CheckActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceEvent.CheckActivate");

	USequenceEvent_CheckActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceEvent.RegisterEvent
// (Event, Public)

void USequenceEvent::RegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceEvent.RegisterEvent");

	USequenceEvent_RegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_LevelLoaded.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_LevelLoaded::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_LevelLoaded.GetObjClassVersion");

	USeqEvent_LevelLoaded_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Mover.NotifyFinishedOpen
// (Defined, Public)

void USeqEvent_Mover::NotifyFinishedOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Mover.NotifyFinishedOpen");

	USeqEvent_Mover_NotifyFinishedOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Mover.NotifyDetached
// (Defined, Public)

void USeqEvent_Mover::NotifyDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Mover.NotifyDetached");

	USeqEvent_Mover_NotifyDetached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Mover.NotifyAttached
// (Defined, Public)

void USeqEvent_Mover::NotifyAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Mover.NotifyAttached");

	USeqEvent_Mover_NotifyAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Mover.NotifyEncroachingOn
// (Defined, Public)

void USeqEvent_Mover::NotifyEncroachingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Mover.NotifyEncroachingOn");

	USeqEvent_Mover_NotifyEncroachingOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Mover.RegisterEvent
// (Defined, Event, Public)

void USeqEvent_Mover::RegisterEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Mover.RegisterEvent");

	USeqEvent_Mover_RegisterEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_ParticleEvent.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_ParticleEvent::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_ParticleEvent.GetObjClassVersion");

	USeqEvent_ParticleEvent_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_RemoteEvent.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_RemoteEvent::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_RemoteEvent.GetObjClassVersion");

	USeqEvent_RemoteEvent_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_TakeDamage.Toggled
// (Defined, Event, Public)

void USeqEvent_TakeDamage::Toggled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_TakeDamage.Toggled");

	USeqEvent_TakeDamage_Toggled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_TakeDamage.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_TakeDamage::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_TakeDamage.GetObjClassVersion");

	USeqEvent_TakeDamage_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_TakeDamage.Reset
// (Defined, Public)

void USeqEvent_TakeDamage::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_TakeDamage.Reset");

	USeqEvent_TakeDamage_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_TakeDamage.HandleDamage
// (Final, Defined, Public)

void USeqEvent_TakeDamage::HandleDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_TakeDamage.HandleDamage");

	USeqEvent_TakeDamage_HandleDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_TakeDamage.IsValidDamageType
// (Final, Defined, Public)

void USeqEvent_TakeDamage::IsValidDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_TakeDamage.IsValidDamageType");

	USeqEvent_TakeDamage_IsValidDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Touch.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_Touch::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Touch.GetObjClassVersion");

	USeqEvent_Touch_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Touch.NotifyTouchingPawnDied
// (Defined, Public)

void USeqEvent_Touch::NotifyTouchingPawnDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Touch.NotifyTouchingPawnDied");

	USeqEvent_Touch_NotifyTouchingPawnDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Touch.Toggled
// (Defined, Event, Public)

void USeqEvent_Touch::Toggled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Touch.Toggled");

	USeqEvent_Touch_Toggled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Touch.CheckUnTouchActivate
// (Final, Native, HasOptionalParms, Public)

void USeqEvent_Touch::CheckUnTouchActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Touch.CheckUnTouchActivate");

	USeqEvent_Touch_CheckUnTouchActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_Touch.CheckTouchActivate
// (Final, Native, HasOptionalParms, Public)

void USeqEvent_Touch::CheckTouchActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_Touch.CheckTouchActivate");

	USeqEvent_Touch_CheckTouchActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SequenceVariable.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USequenceVariable::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SequenceVariable.IsValidUISequenceObject");

	USequenceVariable_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_Object.SetObjectValue
// (Defined, Public)

void USeqVar_Object::SetObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_Object.SetObjectValue");

	USeqVar_Object_SetObjectValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_Object.GetObjectValue
// (Defined, Public)

void USeqVar_Object::GetObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_Object.GetObjectValue");

	USeqVar_Object_GetObjectValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_ObjectList.SetObjectValue
// (Defined, Public)

void USeqVar_ObjectList::SetObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_ObjectList.SetObjectValue");

	USeqVar_ObjectList_SetObjectValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_ObjectList.GetObjectValue
// (Defined, Public)

void USeqVar_ObjectList::GetObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_ObjectList.GetObjectValue");

	USeqVar_ObjectList_GetObjectValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_Player.GetObjectValue
// (Defined, Public)

void USeqVar_Player::GetObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_Player.GetObjectValue");

	USeqVar_Player_GetObjectValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqVar_Player.UpdatePlayersList
// (Final, Native, Public)

void USeqVar_Player::UpdatePlayersList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqVar_Player.UpdatePlayersList");

	USeqVar_Player_UpdatePlayersList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void AAmbientSoundSimpleToggleable::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.ApplyCheckpointRecord");

	AAmbientSoundSimpleToggleable_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void AAmbientSoundSimpleToggleable::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.CreateCheckpointRecord");

	AAmbientSoundSimpleToggleable_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.OnToggle
// (Defined, Simulated, Public)

void AAmbientSoundSimpleToggleable::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.OnToggle");

	AAmbientSoundSimpleToggleable_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.StopPlaying
// (Defined, Simulated, Public)

void AAmbientSoundSimpleToggleable::StopPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.StopPlaying");

	AAmbientSoundSimpleToggleable_StopPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.StartPlaying
// (Defined, Simulated, Public)

void AAmbientSoundSimpleToggleable::StartPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.StartPlaying");

	AAmbientSoundSimpleToggleable_StartPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AAmbientSoundSimpleToggleable::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.ReplicatedEvent");

	AAmbientSoundSimpleToggleable_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AmbientSoundSimpleToggleable.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AAmbientSoundSimpleToggleable::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AmbientSoundSimpleToggleable.PostBeginPlay");

	AAmbientSoundSimpleToggleable_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundNodeWave.GeneratePCMData
// (Event, Public, HasOutParms)

void USoundNodeWave::GeneratePCMData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundNodeWave.GeneratePCMData");

	USoundNodeWave_GeneratePCMData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundNodeWaveStreaming.GeneratePCMData
// (Native, Event, Public, HasOutParms)

void USoundNodeWaveStreaming::GeneratePCMData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundNodeWaveStreaming.GeneratePCMData");

	USoundNodeWaveStreaming_GeneratePCMData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundNodeWaveStreaming.AvailableAudioBytes
// (Native, Event, Public)

void USoundNodeWaveStreaming::AvailableAudioBytes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundNodeWaveStreaming.AvailableAudioBytes");

	USoundNodeWaveStreaming_AvailableAudioBytes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundNodeWaveStreaming.ResetAudio
// (Native, Event, Public)

void USoundNodeWaveStreaming::ResetAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundNodeWaveStreaming.ResetAudio");

	USoundNodeWaveStreaming_ResetAudio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SoundNodeWaveStreaming.QueueAudio
// (Native, Event, Public)

void USoundNodeWaveStreaming::QueueAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SoundNodeWaveStreaming.QueueAudio");

	USoundNodeWaveStreaming_QueueAudio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Terrain.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ATerrain::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Terrain.PostBeginPlay");

	ATerrain_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Terrain.CalcLayerBounds
// (Final, Native, Public)

void ATerrain::CalcLayerBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Terrain.CalcLayerBounds");

	ATerrain_CalcLayerBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TerrainLayerSetup.PostBeginPlay
// (Simulated, Public)

void UTerrainLayerSetup::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TerrainLayerSetup.PostBeginPlay");

	UTerrainLayerSetup_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TerrainLayerSetup.SetMaterials
// (Final, Native, Public)

void UTerrainLayerSetup::SetMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TerrainLayerSetup.SetMaterials");

	UTerrainLayerSetup_SetMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetOnlinePlayerInterfaceEx
// (Final, Defined, Static, Public)

void UUIRoot::STATIC_GetOnlinePlayerInterfaceEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetOnlinePlayerInterfaceEx");

	UUIRoot_GetOnlinePlayerInterfaceEx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetOnlinePlayerInterface
// (Final, Defined, Static, Public)

void UUIRoot::STATIC_GetOnlinePlayerInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetOnlinePlayerInterface");

	UUIRoot_GetOnlinePlayerInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetOnlineGameInterface
// (Final, Defined, Static, Public)

void UUIRoot::STATIC_GetOnlineGameInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetOnlineGameInterface");

	UUIRoot_GetOnlineGameInterface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.ConvertWidgetIDToString
// (Final, Defined, Static, Public)

void UUIRoot::STATIC_ConvertWidgetIDToString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.ConvertWidgetIDToString");

	UUIRoot_ConvertWidgetIDToString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetDataStoreStringValue
// (Defined, Static, HasOptionalParms, Public, HasOutParms, HasDefaults)

void UUIRoot::STATIC_GetDataStoreStringValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetDataStoreStringValue");

	UUIRoot_GetDataStoreStringValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetDataStoreFieldValue
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void UUIRoot::STATIC_GetDataStoreFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetDataStoreFieldValue");

	UUIRoot_GetDataStoreFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.SetDataStoreStringValue
// (Defined, Static, HasOptionalParms, Public, HasDefaults, K2Call)

void UUIRoot::STATIC_SetDataStoreStringValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.SetDataStoreStringValue");

	UUIRoot_SetDataStoreStringValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.SetDataStoreFieldValue
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms, K2Call)

void UUIRoot::STATIC_SetDataStoreFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.SetDataStoreFieldValue");

	UUIRoot_SetDataStoreFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.StaticResolveDataStore
// (Final, Defined, Static, HasOptionalParms, Public)

void UUIRoot::STATIC_StaticResolveDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.StaticResolveDataStore");

	UUIRoot_StaticResolveDataStore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetPrimitiveTransform
// (Final, Native, Static, HasOptionalParms, Public)

void UUIRoot::STATIC_GetPrimitiveTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetPrimitiveTransform");

	UUIRoot_GetPrimitiveTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.SetMouseCaptureOverride
// (Final, Native, Static, Public)

void UUIRoot::STATIC_SetMouseCaptureOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.SetMouseCaptureOverride");

	UUIRoot_SetMouseCaptureOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetCursorSize
// (Final, Native, Static, Public, HasOutParms)

void UUIRoot::STATIC_GetCursorSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetCursorSize");

	UUIRoot_GetCursorSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetCursorPosition
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void UUIRoot::STATIC_GetCursorPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetCursorPosition");

	UUIRoot_GetCursorPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetFaceOrientation
// (Final, Native, Static, Public)

void UUIRoot::STATIC_GetFaceOrientation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetFaceOrientation");

	UUIRoot_GetFaceOrientation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetSceneClient
// (Final, Native, Static, Public)

void UUIRoot::STATIC_GetSceneClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetSceneClient");

	UUIRoot_GetSceneClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetCurrentUIController
// (Final, Native, Static, Public)

void UUIRoot::STATIC_GetCurrentUIController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetCurrentUIController");

	UUIRoot_GetCurrentUIController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.IsEditor
// (Final, Defined, Static, Public)

void UUIRoot::STATIC_IsEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.IsEditor");

	UUIRoot_IsEditor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.IsConsole
// (Final, Defined, Static, HasOptionalParms, Public)

void UUIRoot::STATIC_IsConsole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.IsConsole");

	UUIRoot_IsConsole_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIRoot.GetInputPlatformType
// (Final, Native, Static, HasOptionalParms, Public)

void UUIRoot::STATIC_GetInputPlatformType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIRoot.GetInputPlatformType");

	UUIRoot_GetInputPlatformType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.AllowInputAlias
// (Defined, Event, Public)

void UUIScreenObject::AllowInputAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.AllowInputAlias");

	UUIScreenObject_AllowInputAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.AllowNavigationAway
// (Public, Delegate)

void UUIScreenObject::AllowNavigationAway()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.AllowNavigationAway");

	UUIScreenObject_AllowNavigationAway_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.LostFocus
// (Public)

void UUIScreenObject::LostFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.LostFocus");

	UUIScreenObject_LostFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GainedFocus
// (Public)

void UUIScreenObject::GainedFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GainedFocus");

	UUIScreenObject_GainedFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetFocusGainedName
// (Defined, Public)

void UUIScreenObject::GetFocusGainedName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetFocusGainedName");

	UUIScreenObject_GetFocusGainedName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetFocusLostName
// (Defined, Public)

void UUIScreenObject::GetFocusLostName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetFocusLostName");

	UUIScreenObject_GetFocusLostName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.LogCurrentState
// (Public)

void UUIScreenObject::LogCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.LogCurrentState");

	UUIScreenObject_LogCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Find_UIAnimTrackCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Find_UIAnimTrackCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Find_UIAnimTrackCompletedHandler");

	UUIScreenObject_Find_UIAnimTrackCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Find_UIAnimKeyFrameCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Find_UIAnimKeyFrameCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Find_UIAnimKeyFrameCompletedHandler");

	UUIScreenObject_Find_UIAnimKeyFrameCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Remove_UIAnimTrackCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Remove_UIAnimTrackCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Remove_UIAnimTrackCompletedHandler");

	UUIScreenObject_Remove_UIAnimTrackCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Remove_UIAnimKeyFrameCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Remove_UIAnimKeyFrameCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Remove_UIAnimKeyFrameCompletedHandler");

	UUIScreenObject_Remove_UIAnimKeyFrameCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Add_UIAnimTrackCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Add_UIAnimTrackCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Add_UIAnimTrackCompletedHandler");

	UUIScreenObject_Add_UIAnimTrackCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Add_UIAnimKeyFrameCompletedHandler
// (Final, Defined, Public)

void UUIScreenObject::Add_UIAnimKeyFrameCompletedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Add_UIAnimKeyFrameCompletedHandler");

	UUIScreenObject_Add_UIAnimKeyFrameCompletedHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateTrackCompletedDelegates
// (Defined, Event, Public)

void UUIScreenObject::ActivateTrackCompletedDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateTrackCompletedDelegates");

	UUIScreenObject_ActivateTrackCompletedDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateKeyFrameCompletedDelegates
// (Defined, Event, Public)

void UUIScreenObject::ActivateKeyFrameCompletedDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateKeyFrameCompletedDelegates");

	UUIScreenObject_ActivateKeyFrameCompletedDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.UIAnimationEnded
// (Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::UIAnimationEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.UIAnimationEnded");

	UUIScreenObject_UIAnimationEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.UIAnimationStarted
// (Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::UIAnimationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.UIAnimationStarted");

	UUIScreenObject_UIAnimationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsAnimationPaused
// (Final, Native, Public)

void UUIScreenObject::IsAnimationPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsAnimationPaused");

	UUIScreenObject_IsAnimationPaused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PauseAnimations
// (Final, Native, Public)

void UUIScreenObject::PauseAnimations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PauseAnimations");

	UUIScreenObject_PauseAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsAnimating
// (Native, Event, HasOptionalParms, Public)

void UUIScreenObject::IsAnimating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsAnimating");

	UUIScreenObject_IsAnimating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ClearUIAnimationLoop
// (Native, Event, HasOptionalParms, Public)

void UUIScreenObject::ClearUIAnimationLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ClearUIAnimationLoop");

	UUIScreenObject_ClearUIAnimationLoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.StopUIAnimation
// (Native, Event, HasOptionalParms, Public)

void UUIScreenObject::StopUIAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.StopUIAnimation");

	UUIScreenObject_StopUIAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PlayUIAnimation
// (Native, Event, HasOptionalParms, Public)

void UUIScreenObject::PlayUIAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PlayUIAnimation");

	UUIScreenObject_PlayUIAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FindAnimationSequenceIndex
// (Final, Native, Public)

void UUIScreenObject::FindAnimationSequenceIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FindAnimationSequenceIndex");

	UUIScreenObject_FindAnimationSequenceIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.TickAnimations
// (Native, Public)

void UUIScreenObject::TickAnimations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.TickAnimations");

	UUIScreenObject_TickAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.AnimGetCurrentPPSettings
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::AnimGetCurrentPPSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.AnimGetCurrentPPSettings");

	UUIScreenObject_AnimGetCurrentPPSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Anim_SetValue
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::Anim_SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Anim_SetValue");

	UUIScreenObject_Anim_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Anim_GetValue
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::Anim_GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Anim_GetValue");

	UUIScreenObject_Anim_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnUIAnim_TrackCompleted
// (Public, Delegate)

void UUIScreenObject::OnUIAnim_TrackCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnUIAnim_TrackCompleted");

	UUIScreenObject_OnUIAnim_TrackCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnUIAnim_KeyFrameCompleted
// (Public, Delegate)

void UUIScreenObject::OnUIAnim_KeyFrameCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnUIAnim_KeyFrameCompleted");

	UUIScreenObject_OnUIAnim_KeyFrameCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.BecomePrimaryPlayer
// (Defined, Public)

void UUIScreenObject::BecomePrimaryPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.BecomePrimaryPlayer");

	UUIScreenObject_BecomePrimaryPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetNATType
// (Defined, Public)

void UUIScreenObject::GetNATType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetNATType");

	UUIScreenObject_GetNATType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetLoggedInControllerIds
// (Final, Defined, Static, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::STATIC_GetLoggedInControllerIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetLoggedInControllerIds");

	UUIScreenObject_GetLoggedInControllerIds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetLoggedInPlayerCount
// (Final, Defined, Static, HasOptionalParms, Public)

void UUIScreenObject::STATIC_GetLoggedInPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetLoggedInPlayerCount");

	UUIScreenObject_GetLoggedInPlayerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CanPlayOnline
// (Final, Defined, HasOptionalParms, Public)

void UUIScreenObject::CanPlayOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CanPlayOnline");

	UUIScreenObject_CanPlayOnline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.HasLinkConnection
// (Final, Defined, Static, Public)

void UUIScreenObject::STATIC_HasLinkConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.HasLinkConnection");

	UUIScreenObject_HasLinkConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetLoginStatus
// (Final, Defined, HasOptionalParms, Public)

void UUIScreenObject::GetLoginStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetLoginStatus");

	UUIScreenObject_GetLoginStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnConsoleCommand
// (Defined, Public)

void UUIScreenObject::OnConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnConsoleCommand");

	UUIScreenObject_OnConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.DisableWidget
// (Final, Defined, Public)

void UUIScreenObject::DisableWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.DisableWidget");

	UUIScreenObject_DisableWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.EnableWidget
// (Final, Defined, Public)

void UUIScreenObject::EnableWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.EnableWidget");

	UUIScreenObject_EnableWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetParent
// (Public)

void UUIScreenObject::GetParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetParent");

	UUIScreenObject_GetParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateFocusHint
// (Defined, Event, Public)

void UUIScreenObject::ActivateFocusHint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateFocusHint");

	UUIScreenObject_ActivateFocusHint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetSupportedUIActionKeyNames
// (Event, Public, HasOutParms)

void UUIScreenObject::GetSupportedUIActionKeyNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetSupportedUIActionKeyNames");

	UUIScreenObject_GetSupportedUIActionKeyNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.DisablePlayerInput
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::DisablePlayerInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.DisablePlayerInput");

	UUIScreenObject_DisablePlayerInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.EnablePlayerInput
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::EnablePlayerInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.EnablePlayerInput");

	UUIScreenObject_EnablePlayerInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetVisibility
// (Defined, Event, Public)

void UUIScreenObject::SetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetVisibility");

	UUIScreenObject_SetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PrivateSetVisibility
// (Final, Defined, Private)

void UUIScreenObject::PrivateSetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PrivateSetVisibility");

	UUIScreenObject_PrivateSetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsGamepadConnected
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::IsGamepadConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsGamepadConnected");

	UUIScreenObject_IsGamepadConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsLoggedIn
// (Defined, Event, HasOptionalParms, Public)

void UUIScreenObject::IsLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsLoggedIn");

	UUIScreenObject_IsLoggedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RemovedFromParent
// (Defined, Event, Public)

void UUIScreenObject::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RemovedFromParent");

	UUIScreenObject_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RemovedChild
// (Event, HasOptionalParms, Public)

void UUIScreenObject::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RemovedChild");

	UUIScreenObject_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.AddedChild
// (Event, Public)

void UUIScreenObject::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.AddedChild");

	UUIScreenObject_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PostInitialize
// (Event, Public)

void UUIScreenObject::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PostInitialize");

	UUIScreenObject_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Initialized
// (Event, Public)

void UUIScreenObject::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Initialized");

	UUIScreenObject_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetWidgetPathName
// (Final, Native, Public)

void UUIScreenObject::GetWidgetPathName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetWidgetPathName");

	UUIScreenObject_GetWidgetPathName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ShouldHideForConsole
// (Final, Native, Public)

void UUIScreenObject::ShouldHideForConsole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ShouldHideForConsole");

	UUIScreenObject_ShouldHideForConsole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetAspectRatioAutoScaleFactor
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetAspectRatioAutoScaleFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetAspectRatioAutoScaleFactor");

	UUIScreenObject_GetAspectRatioAutoScaleFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetInverseCanvasToScreen
// (Final, Native, Public)

void UUIScreenObject::GetInverseCanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetInverseCanvasToScreen");

	UUIScreenObject_GetInverseCanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetCanvasToScreen
// (Final, Native, Public)

void UUIScreenObject::GetCanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetCanvasToScreen");

	UUIScreenObject_GetCanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PixelToCanvas
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::PixelToCanvas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PixelToCanvas");

	UUIScreenObject_PixelToCanvas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ScreenToCanvas
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::ScreenToCanvas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ScreenToCanvas");

	UUIScreenObject_ScreenToCanvas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PixelToScreen
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::PixelToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PixelToScreen");

	UUIScreenObject_PixelToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ScreenToPixel
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::ScreenToPixel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ScreenToPixel");

	UUIScreenObject_ScreenToPixel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CanvasToScreen
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::CanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CanvasToScreen");

	UUIScreenObject_CanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.DeProject
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::DeProject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.DeProject");

	UUIScreenObject_DeProject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Project
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::Project()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Project");

	UUIScreenObject_Project_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetDockedWidgets
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::GetDockedWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetDockedWidgets");

	UUIScreenObject_GetDockedWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ResolveUIExtent
// (Final, Native, Static, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::STATIC_ResolveUIExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ResolveUIExtent");

	UUIScreenObject_ResolveUIExtent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetPositionVector
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetPositionVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetPositionVector");

	UUIScreenObject_GetPositionVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetBounds
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetBounds");

	UUIScreenObject_GetBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetPosition
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetPosition");

	UUIScreenObject_GetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetPosition
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::SetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetPosition");

	UUIScreenObject_SetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.InvalidateAllPositions
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::InvalidateAllPositions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.InvalidateAllPositions");

	UUIScreenObject_InvalidateAllPositions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.InvalidatePosition
// (Final, Native, Public)

void UUIScreenObject::InvalidatePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.InvalidatePosition");

	UUIScreenObject_InvalidatePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetPlayerOwnerIndex
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetPlayerOwnerIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetPlayerOwnerIndex");

	UUIScreenObject_GetPlayerOwnerIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetBestControllerId
// (Final, Native, Public)

void UUIScreenObject::GetBestControllerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetBestControllerId");

	UUIScreenObject_GetBestControllerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetBestPlayerIndex
// (Final, Native, Public)

void UUIScreenObject::GetBestPlayerIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetBestPlayerIndex");

	UUIScreenObject_GetBestPlayerIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetSupportedPlayerCount
// (Final, Native, Public)

void UUIScreenObject::GetSupportedPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetSupportedPlayerCount");

	UUIScreenObject_GetSupportedPlayerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetActivePlayerCount
// (Final, Native, Static, Public)

void UUIScreenObject::STATIC_GetActivePlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetActivePlayerCount");

	UUIScreenObject_GetActivePlayerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetInputMask
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::SetInputMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetInputMask");

	UUIScreenObject_SetInputMask_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetInputMask
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetInputMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetInputMask");

	UUIScreenObject_GetInputMask_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.AcceptsPlayerInput
// (Final, Native, Public)

void UUIScreenObject::AcceptsPlayerInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.AcceptsPlayerInput");

	UUIScreenObject_AcceptsPlayerInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsRuntimeInstance
// (Final, Native, Public)

void UUIScreenObject::IsRuntimeInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsRuntimeInstance");

	UUIScreenObject_IsRuntimeInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsPressed
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsPressed");

	UUIScreenObject_IsPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsActive
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsActive");

	UUIScreenObject_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsFocused
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsFocused");

	UUIScreenObject_IsFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsDisabled
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsDisabled");

	UUIScreenObject_IsDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsEnabled
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsEnabled");

	UUIScreenObject_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OverrideLastFocusedControl
// (Final, Native, Public)

void UUIScreenObject::OverrideLastFocusedControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OverrideLastFocusedControl");

	UUIScreenObject_OverrideLastFocusedControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetLastFocusedControl
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetLastFocusedControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetLastFocusedControl");

	UUIScreenObject_GetLastFocusedControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetFocusedControl
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetFocusedControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetFocusedControl");

	UUIScreenObject_GetFocusedControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.KillFocus
// (Native, HasOptionalParms, Public)

void UUIScreenObject::KillFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.KillFocus");

	UUIScreenObject_KillFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetFocusToChild
// (Native, HasOptionalParms, Public)

void UUIScreenObject::SetFocusToChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetFocusToChild");

	UUIScreenObject_SetFocusToChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetFocus
// (Native, HasOptionalParms, Public)

void UUIScreenObject::SetFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetFocus");

	UUIScreenObject_SetFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CanPropagateFocusFor
// (Final, Native, Public)

void UUIScreenObject::CanPropagateFocusFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CanPropagateFocusFor");

	UUIScreenObject_CanPropagateFocusFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CanAcceptFocus
// (Native, HasOptionalParms, Public)

void UUIScreenObject::CanAcceptFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CanAcceptFocus");

	UUIScreenObject_CanAcceptFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsNeverFocused
// (Final, Native, Public)

void UUIScreenObject::IsNeverFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsNeverFocused");

	UUIScreenObject_IsNeverFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NavigateFocus
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::NavigateFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NavigateFocus");

	UUIScreenObject_NavigateFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PrevControl
// (Native, HasOptionalParms, Public)

void UUIScreenObject::PrevControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PrevControl");

	UUIScreenObject_PrevControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NextControl
// (Native, HasOptionalParms, Public)

void UUIScreenObject::NextControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NextControl");

	UUIScreenObject_NextControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FocusLastControl
// (Native, HasOptionalParms, Public)

void UUIScreenObject::FocusLastControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FocusLastControl");

	UUIScreenObject_FocusLastControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FocusFirstControl
// (Native, HasOptionalParms, Public)

void UUIScreenObject::FocusFirstControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FocusFirstControl");

	UUIScreenObject_FocusFirstControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsHoldingShift
// (Final, Native, Public)

void UUIScreenObject::IsHoldingShift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsHoldingShift");

	UUIScreenObject_IsHoldingShift_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsHoldingAlt
// (Final, Native, Public)

void UUIScreenObject::IsHoldingAlt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsHoldingAlt");

	UUIScreenObject_IsHoldingAlt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsHoldingCtrl
// (Final, Native, Public)

void UUIScreenObject::IsHoldingCtrl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsHoldingCtrl");

	UUIScreenObject_IsHoldingCtrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ConditionalPropagateEnabledState
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::ConditionalPropagateEnabledState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ConditionalPropagateEnabledState");

	UUIScreenObject_ConditionalPropagateEnabledState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.DeactivateStateByClass
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::DeactivateStateByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.DeactivateStateByClass");

	UUIScreenObject_DeactivateStateByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.DeactivateState
// (Final, Native, Public)

void UUIScreenObject::DeactivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.DeactivateState");

	UUIScreenObject_DeactivateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateStateByClass
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::ActivateStateByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateStateByClass");

	UUIScreenObject_ActivateStateByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateState
// (Final, Native, Public)

void UUIScreenObject::ActivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateState");

	UUIScreenObject_ActivateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.HasActiveStateOfClass
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::HasActiveStateOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.HasActiveStateOfClass");

	UUIScreenObject_HasActiveStateOfClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetCurrentState
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetCurrentState");

	UUIScreenObject_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetEnabled
// (Native, HasOptionalParms, Public)

void UUIScreenObject::SetEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetEnabled");

	UUIScreenObject_SetEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FindEventsOfClass
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::FindEventsOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FindEventsOfClass");

	UUIScreenObject_FindEventsOfClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ActivateEventByClass
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::ActivateEventByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ActivateEventByClass");

	UUIScreenObject_ActivateEventByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetAspectRatio
// (Final, Native, Public)

void UUIScreenObject::GetAspectRatio()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetAspectRatio");

	UUIScreenObject_GetAspectRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportHeight
// (Final, Native, Public)

void UUIScreenObject::GetViewportHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportHeight");

	UUIScreenObject_GetViewportHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportWidth
// (Final, Native, Public)

void UUIScreenObject::GetViewportWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportWidth");

	UUIScreenObject_GetViewportWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportSize
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::GetViewportSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportSize");

	UUIScreenObject_GetViewportSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportOrigin
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::GetViewportOrigin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportOrigin");

	UUIScreenObject_GetViewportOrigin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportScale
// (Final, Native, Public)

void UUIScreenObject::GetViewportScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportScale");

	UUIScreenObject_GetViewportScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetViewportOffset
// (Final, Native, Public, HasOutParms)

void UUIScreenObject::GetViewportOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetViewportOffset");

	UUIScreenObject_GetViewportOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RebuildNavigationLinks
// (Final, Native, Public)

void UUIScreenObject::RebuildNavigationLinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RebuildNavigationLinks");

	UUIScreenObject_RebuildNavigationLinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RequestPrimitiveReview
// (Final, Native, Public)

void UUIScreenObject::RequestPrimitiveReview()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RequestPrimitiveReview");

	UUIScreenObject_RequestPrimitiveReview_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RequestSceneInputMaskUpdate
// (Final, Native, Public)

void UUIScreenObject::RequestSceneInputMaskUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RequestSceneInputMaskUpdate");

	UUIScreenObject_RequestSceneInputMaskUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RequestFormattingUpdate
// (Final, Native, Public)

void UUIScreenObject::RequestFormattingUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RequestFormattingUpdate");

	UUIScreenObject_RequestFormattingUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RequestSceneUpdate
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::RequestSceneUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RequestSceneUpdate");

	UUIScreenObject_RequestSceneUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetDockClients
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::GetDockClients()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetDockClients");

	UUIScreenObject_GetDockClients_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetObjectCount
// (Final, Native, Public)

void UUIScreenObject::GetObjectCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetObjectCount");

	UUIScreenObject_GetObjectCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetChildren
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetChildren");

	UUIScreenObject_GetChildren_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ContainsChildOfClass
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::ContainsChildOfClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ContainsChildOfClass");

	UUIScreenObject_ContainsChildOfClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ContainsChild
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::ContainsChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ContainsChild");

	UUIScreenObject_ContainsChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FindChildIndex
// (Final, Native, Public)

void UUIScreenObject::FindChildIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FindChildIndex");

	UUIScreenObject_FindChildIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FindChildUsingID
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::FindChildUsingID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FindChildUsingID");

	UUIScreenObject_FindChildUsingID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.FindChild
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::FindChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.FindChild");

	UUIScreenObject_FindChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ReplaceChild
// (Final, Native, Public)

void UUIScreenObject::ReplaceChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ReplaceChild");

	UUIScreenObject_ReplaceChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ReparentChildren
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::ReparentChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ReparentChildren");

	UUIScreenObject_ReparentChildren_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.ReparentChild
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::ReparentChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.ReparentChild");

	UUIScreenObject_ReparentChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RemoveChildren
// (Final, Native, Public)

void UUIScreenObject::RemoveChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RemoveChildren");

	UUIScreenObject_RemoveChildren_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RemoveChild
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::RemoveChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RemoveChild");

	UUIScreenObject_RemoveChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.InsertChild
// (Native, HasOptionalParms, Public)

void UUIScreenObject::InsertChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.InsertChild");

	UUIScreenObject_InsertChild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.Initialize
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.Initialize");

	UUIScreenObject_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.InstanceUIPrefab
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScreenObject::InstanceUIPrefab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.InstanceUIPrefab");

	UUIScreenObject_InstanceUIPrefab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CreateWidget
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::CreateWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CreateWidget");

	UUIScreenObject_CreateWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.PlayUISound
// (Final, Native, Static, HasOptionalParms, Public)

void UUIScreenObject::STATIC_PlayUISound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.PlayUISound");

	UUIScreenObject_PlayUISound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetPlayerOwner
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetPlayerOwner");

	UUIScreenObject_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.InitializePlayerTracking
// (Final, Native, Public)

void UUIScreenObject::InitializePlayerTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.InitializePlayerTracking");

	UUIScreenObject_InitializePlayerTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.RemovePlayerData
// (Final, Native, Public)

void UUIScreenObject::RemovePlayerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.RemovePlayerData");

	UUIScreenObject_RemovePlayerData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.CreatePlayerData
// (Final, Native, Public)

void UUIScreenObject::CreatePlayerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.CreatePlayerData");

	UUIScreenObject_CreatePlayerData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.SetZDepth
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::SetZDepth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.SetZDepth");

	UUIScreenObject_SetZDepth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.GetZDepth
// (Final, Native, Public)

void UUIScreenObject::GetZDepth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.GetZDepth");

	UUIScreenObject_GetZDepth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsHidden
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsHidden");

	UUIScreenObject_IsHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsVisible
// (Final, Native, HasOptionalParms, Public)

void UUIScreenObject::IsVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsVisible");

	UUIScreenObject_IsVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.IsInitialized
// (Final, Native, Public)

void UUIScreenObject::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.IsInitialized");

	UUIScreenObject_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnInitialSceneUpdate
// (Public, Delegate)

void UUIScreenObject::OnInitialSceneUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnInitialSceneUpdate");

	UUIScreenObject_OnInitialSceneUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NotifyVisibilityChanged
// (Public, Delegate)

void UUIScreenObject::NotifyVisibilityChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NotifyVisibilityChanged");

	UUIScreenObject_NotifyVisibilityChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NotifyActiveStateChanged
// (HasOptionalParms, Public, Delegate)

void UUIScreenObject::NotifyActiveStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NotifyActiveStateChanged");

	UUIScreenObject_NotifyActiveStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NotifyResolutionChanged
// (Public, Delegate, HasOutParms)

void UUIScreenObject::NotifyResolutionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NotifyResolutionChanged");

	UUIScreenObject_NotifyResolutionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NotifyPositionChanged
// (Public, Delegate)

void UUIScreenObject::NotifyPositionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NotifyPositionChanged");

	UUIScreenObject_NotifyPositionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnProcessInputAxis
// (Public, Delegate, HasOutParms)

void UUIScreenObject::OnProcessInputAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnProcessInputAxis");

	UUIScreenObject_OnProcessInputAxis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnProcessInputKey
// (Public, Delegate, HasOutParms)

void UUIScreenObject::OnProcessInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnProcessInputKey");

	UUIScreenObject_OnProcessInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnRawInputAxis
// (Public, Delegate, HasOutParms)

void UUIScreenObject::OnRawInputAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnRawInputAxis");

	UUIScreenObject_OnRawInputAxis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.OnRawInputKey
// (Public, Delegate, HasOutParms)

void UUIScreenObject::OnRawInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.OnRawInputKey");

	UUIScreenObject_OnRawInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScreenObject.NotifyActiveSkinChanged
// (Public, Delegate)

void UUIScreenObject::NotifyActiveSkinChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScreenObject.NotifyActiveSkinChanged");

	UUIScreenObject_NotifyActiveSkinChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_Event.UnregisterInputEvents
// (Final, Native, Public)

void UUIComp_Event::UnregisterInputEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_Event.UnregisterInputEvents");

	UUIComp_Event_UnregisterInputEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_Event.RegisterInputEvents
// (Final, Native, Public)

void UUIComp_Event::RegisterInputEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_Event.RegisterInputEvents");

	UUIComp_Event_RegisterInputEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEventContainer.RemoveSequenceObjects
// (Final, Native, Public)

void UUIEventContainer::RemoveSequenceObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEventContainer.RemoveSequenceObjects");

	UUIEventContainer_RemoveSequenceObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEventContainer.RemoveSequenceObject
// (Final, Native, Public)

void UUIEventContainer::RemoveSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEventContainer.RemoveSequenceObject");

	UUIEventContainer_RemoveSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEventContainer.AddSequenceObject
// (Final, Native, HasOptionalParms, Public)

void UUIEventContainer::AddSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEventContainer.AddSequenceObject");

	UUIEventContainer_AddSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEventContainer.GetUIEvents
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIEventContainer::GetUIEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEventContainer.GetUIEvents");

	UUIEventContainer_GetUIEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.DebugDumpDataStoreInfo
// (Final, Public)

void UDataStoreClient::DebugDumpDataStoreInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.DebugDumpDataStoreInfo");

	UDataStoreClient_DebugDumpDataStoreInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.NotifyGameSessionEnded
// (Final, Defined, Event, Public)

void UDataStoreClient::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.NotifyGameSessionEnded");

	UDataStoreClient_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.FindDataStoreClass
// (Final, Defined, Public)

void UDataStoreClient::FindDataStoreClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.FindDataStoreClass");

	UDataStoreClient_FindDataStoreClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.GetPlayerDataStoreClasses
// (Final, Defined, Public, HasOutParms)

void UDataStoreClient::GetPlayerDataStoreClasses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.GetPlayerDataStoreClasses");

	UDataStoreClient_GetPlayerDataStoreClasses_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.FindPlayerDataStoreIndex
// (Final, Native, Public)

void UDataStoreClient::FindPlayerDataStoreIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.FindPlayerDataStoreIndex");

	UDataStoreClient_FindPlayerDataStoreIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.GetAvailableDataStores
// (Final, Native, Public, HasOutParms)

void UDataStoreClient::GetAvailableDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.GetAvailableDataStores");

	UDataStoreClient_GetAvailableDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.UnregisterDataStore
// (Final, Native, Public)

void UDataStoreClient::UnregisterDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.UnregisterDataStore");

	UDataStoreClient_UnregisterDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.RegisterDataStore
// (Final, Native, HasOptionalParms, Public)

void UDataStoreClient::RegisterDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.RegisterDataStore");

	UDataStoreClient_RegisterDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.CreateDataStore
// (Final, Native, Public)

void UDataStoreClient::CreateDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.CreateDataStore");

	UDataStoreClient_CreateDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DataStoreClient.FindDataStore
// (Final, Native, HasOptionalParms, Public)

void UDataStoreClient::FindDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DataStoreClient.FindDataStore");

	UDataStoreClient_FindDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.NotifyPlayerRemoved
// (Public)

void UInteraction::NotifyPlayerRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.NotifyPlayerRemoved");

	UInteraction_NotifyPlayerRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.NotifyPlayerAdded
// (Public)

void UInteraction::NotifyPlayerAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.NotifyPlayerAdded");

	UInteraction_NotifyPlayerAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.NotifyGameSessionEnded
// (Public)

void UInteraction::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.NotifyGameSessionEnded");

	UInteraction_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.Initialized
// (Public)

void UInteraction::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.Initialized");

	UInteraction_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.OnInitialize
// (Public, Delegate)

void UInteraction::OnInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.OnInitialize");

	UInteraction_OnInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.Init
// (Final, Native, Public)

void UInteraction::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.Init");

	UInteraction_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.PostRender
// (Event, Public)

void UInteraction::PostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.PostRender");

	UInteraction_PostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.Tick
// (Event, Public)

void UInteraction::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.Tick");

	UInteraction_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.OnReceivedNativeInputChar
// (Public, Delegate)

void UInteraction::OnReceivedNativeInputChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.OnReceivedNativeInputChar");

	UInteraction_OnReceivedNativeInputChar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.OnReceivedNativeInputAxis
// (HasOptionalParms, Public, Delegate)

void UInteraction::OnReceivedNativeInputAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.OnReceivedNativeInputAxis");

	UInteraction_OnReceivedNativeInputAxis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Interaction.OnReceivedNativeInputKey
// (HasOptionalParms, Public, Delegate)

void UInteraction::OnReceivedNativeInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Interaction.OnReceivedNativeInputKey");

	UInteraction_OnReceivedNativeInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.UpdateCompleteIndices
// (Native, Public)

void UConsole::UpdateCompleteIndices()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.UpdateCompleteIndices");

	UConsole_UpdateCompleteIndices_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.BuildRuntimeAutoCompleteList
// (Final, Native, HasOptionalParms, Public)

void UConsole::BuildRuntimeAutoCompleteList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.BuildRuntimeAutoCompleteList");

	UConsole_BuildRuntimeAutoCompleteList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.AppendInputText
// (Defined, Public)

void UConsole::AppendInputText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.AppendInputText");

	UConsole_AppendInputText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.ProcessControlKey
// (Defined, Public)

void UConsole::ProcessControlKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.ProcessControlKey");

	UConsole_ProcessControlKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.FlushPlayerInput
// (Defined, Public)

void UConsole::FlushPlayerInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.FlushPlayerInput");

	UConsole_FlushPlayerInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.IsUIMiniConsoleOpen
// (Defined, Public)

void UConsole::IsUIMiniConsoleOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.IsUIMiniConsoleOpen");

	UConsole_IsUIMiniConsoleOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.IsUIConsoleOpen
// (Defined, Public)

void UConsole::IsUIConsoleOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.IsUIConsoleOpen");

	UConsole_IsUIConsoleOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.InputChar
// (Defined, Public)

void UConsole::InputChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.InputChar");

	UConsole_InputChar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.InputKey
// (Defined, HasOptionalParms, Public)

void UConsole::InputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.InputKey");

	UConsole_InputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.PostRender_Console
// (Public)

void UConsole::PostRender_Console()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.PostRender_Console");

	UConsole_PostRender_Console_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.StartTyping
// (Defined, Public)

void UConsole::StartTyping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.StartTyping");

	UConsole_StartTyping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.OutputText
// (Defined, Event, Public)

void UConsole::OutputText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.OutputText");

	UConsole_OutputText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.OutputTextLine
// (Defined, Public)

void UConsole::OutputTextLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.OutputTextLine");

	UConsole_OutputTextLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.ClearOutput
// (Defined, Public)

void UConsole::ClearOutput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.ClearOutput");

	UConsole_ClearOutput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.ConsoleCommand
// (Defined, Public)

void UConsole::ConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.ConsoleCommand");

	UConsole_ConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.chunkMessage
// (Defined, Public)

void UConsole::chunkMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.chunkMessage");

	UConsole_chunkMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.PurgeCommandFromHistory
// (Defined, Public)

void UConsole::PurgeCommandFromHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.PurgeCommandFromHistory");

	UConsole_PurgeCommandFromHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.SetCursorPos
// (Defined, Public)

void UConsole::SetCursorPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.SetCursorPos");

	UConsole_SetCursorPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.SetInputText
// (Defined, Public)

void UConsole::SetInputText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.SetInputText");

	UConsole_SetInputText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Console.Initialized
// (Defined, Public)

void UConsole::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Console.Initialized");

	UConsole_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Input.SetBind
// (Defined, Exec, Public, HasOutParms, HasDefaults)

void UInput::SetBind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Input.SetBind");

	UInput_SetBind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Input.GetBind
// (Native, Public, HasOutParms)

void UInput::GetBind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Input.GetBind");

	UInput_GetBind_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Input.ResetInput
// (Native, Public)

void UInput::ResetInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Input.ResetInput");

	UInput_ResetInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.SmoothMouse
// (Defined, Public, HasOutParms)

void UPlayerInput::SmoothMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.SmoothMouse");

	UPlayerInput_SmoothMouse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.ClearSmoothing
// (Defined, Exec, Public)

void UPlayerInput::ClearSmoothing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.ClearSmoothing");

	UPlayerInput_ClearSmoothing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.SmartJump
// (Defined, Exec, Public)

void UPlayerInput::SmartJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.SmartJump");

	UPlayerInput_SmartJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.Jump
// (Defined, Public)

void UPlayerInput::Jump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.Jump");

	UPlayerInput_Jump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.ProcessInputMatching
// (Final, Defined, Public)

void UPlayerInput::ProcessInputMatching()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.ProcessInputMatching");

	UPlayerInput_ProcessInputMatching_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.CheckForDoubleClickMove
// (Defined, Public)

void UPlayerInput::CheckForDoubleClickMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.CheckForDoubleClickMove");

	UPlayerInput_CheckForDoubleClickMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.CatchDoubleClickInput
// (Defined, Public)

void UPlayerInput::CatchDoubleClickInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.CatchDoubleClickInput");

	UPlayerInput_CatchDoubleClickInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.PlayerInput
// (Defined, Event, Public)

void UPlayerInput::PlayerInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.PlayerInput");

	UPlayerInput_PlayerInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.AdjustMouseSensitivity
// (Defined, Public)

void UPlayerInput::AdjustMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.AdjustMouseSensitivity");

	UPlayerInput_AdjustMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.PostProcessInput
// (Public)

void UPlayerInput::PostProcessInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.PostProcessInput");

	UPlayerInput_PostProcessInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.PreProcessInput
// (Public)

void UPlayerInput::PreProcessInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.PreProcessInput");

	UPlayerInput_PreProcessInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.DrawHUD
// (Public)

void UPlayerInput::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.DrawHUD");

	UPlayerInput_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.SetSensitivity
// (Defined, Exec, Public)

void UPlayerInput::SetSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.SetSensitivity");

	UPlayerInput_SetSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.InvertTurn
// (Defined, Exec, Public)

void UPlayerInput::InvertTurn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.InvertTurn");

	UPlayerInput_InvertTurn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerInput.InvertMouse
// (Defined, Exec, Public)

void UPlayerInput::InvertMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerInput.InvertMouse");

	UPlayerInput_InvertMouse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.NotifyGameSessionEnded
// (Defined, Public)

void UUIInteraction::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.NotifyGameSessionEnded");

	UUIInteraction_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetNATType
// (Final, Defined, Event, Static, Public)

void UUIInteraction::STATIC_GetNATType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetNATType");

	UUIInteraction_GetNATType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.CanAllPlayOnline
// (Final, Defined, Public)

void UUIInteraction::CanAllPlayOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.CanAllPlayOnline");

	UUIInteraction_CanAllPlayOnline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.CanPlayOnline
// (Final, Defined, Event, Static, Public)

void UUIInteraction::STATIC_CanPlayOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.CanPlayOnline");

	UUIInteraction_CanPlayOnline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetConnectedGamepadCount
// (Final, Defined, Static, HasOptionalParms, Public)

void UUIInteraction::STATIC_GetConnectedGamepadCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetConnectedGamepadCount");

	UUIInteraction_GetConnectedGamepadCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.IsGamepadConnected
// (Final, Defined, Static, Public)

void UUIInteraction::STATIC_IsGamepadConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.IsGamepadConnected");

	UUIInteraction_IsGamepadConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetNumGuestsLoggedIn
// (Final, Defined, Static, Public)

void UUIInteraction::STATIC_GetNumGuestsLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetNumGuestsLoggedIn");

	UUIInteraction_GetNumGuestsLoggedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetLoggedInPlayerCount
// (Final, Defined, Static, HasOptionalParms, Public)

void UUIInteraction::STATIC_GetLoggedInPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetLoggedInPlayerCount");

	UUIInteraction_GetLoggedInPlayerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.IsGuest
// (Final, Defined, Static, Public)

void UUIInteraction::STATIC_IsGuest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.IsGuest");

	UUIInteraction_IsGuest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.IsLoggedIn
// (Final, Defined, Event, Static, HasOptionalParms, Public)

void UUIInteraction::STATIC_IsLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.IsLoggedIn");

	UUIInteraction_IsLoggedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.HasLinkConnection
// (Final, Defined, Event, Static, Public)

void UUIInteraction::STATIC_HasLinkConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.HasLinkConnection");

	UUIInteraction_HasLinkConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetLowestLoginStatusOfControllers
// (Final, Defined, Public)

void UUIInteraction::GetLowestLoginStatusOfControllers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetLowestLoginStatusOfControllers");

	UUIInteraction_GetLowestLoginStatusOfControllers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetGuestStatus
// (Final, Defined, Static, Public)

void UUIInteraction::STATIC_GetGuestStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetGuestStatus");

	UUIInteraction_GetGuestStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetLoginStatus
// (Final, Defined, Event, Static, Public)

void UUIInteraction::STATIC_GetLoginStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetLoginStatus");

	UUIInteraction_GetLoginStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.SetMousePosition
// (Final, Defined, Public)

void UUIInteraction::SetMousePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.SetMousePosition");

	UUIInteraction_SetMousePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.NotifyPlayerRemoved
// (Defined, Public, HasDefaults)

void UUIInteraction::NotifyPlayerRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.NotifyPlayerRemoved");

	UUIInteraction_NotifyPlayerRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.NotifyPlayerAdded
// (Defined, Public, HasDefaults)

void UUIInteraction::NotifyPlayerAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.NotifyPlayerAdded");

	UUIInteraction_NotifyPlayerAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetLocalPlayer
// (Final, Defined, Static, Public)

void UUIInteraction::STATIC_GetLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetLocalPlayer");

	UUIInteraction_GetLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.CreateScene
// (Final, Native, HasOptionalParms, Public)

void UUIInteraction::CreateScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.CreateScene");

	UUIInteraction_CreateScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.CreateTransientWidget
// (Final, Native, HasOptionalParms, Public)

void UUIInteraction::CreateTransientWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.CreateTransientWidget");

	UUIInteraction_CreateTransientWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.PlayUISound
// (Final, Native, HasOptionalParms, Public)

void UUIInteraction::PlayUISound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.PlayUISound");

	UUIInteraction_PlayUISound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetDataStoreClient
// (Final, Native, Static, Public)

void UUIInteraction::STATIC_GetDataStoreClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetDataStoreClient");

	UUIInteraction_GetDataStoreClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetPlayerControllerId
// (Final, Native, Static, Public)

void UUIInteraction::STATIC_GetPlayerControllerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetPlayerControllerId");

	UUIInteraction_GetPlayerControllerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetPlayerIndex
// (Final, Native, Static, Public)

void UUIInteraction::STATIC_GetPlayerIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetPlayerIndex");

	UUIInteraction_GetPlayerIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInteraction.GetPlayerCount
// (Final, Native, Static, Public)

void UUIInteraction::STATIC_GetPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInteraction.GetPlayerCount");

	UUIInteraction_GetPlayerCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInputConfiguration.NotifyGameSessionEnded
// (Native, Public)

void UUIInputConfiguration::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInputConfiguration.NotifyGameSessionEnded");

	UUIInputConfiguration_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIInputConfiguration.LoadInputAliasClasses
// (Final, Native, Public)

void UUIInputConfiguration::LoadInputAliasClasses()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIInputConfiguration.LoadInputAliasClasses");

	UUIInputConfiguration_LoadInputAliasClasses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.InitializeSceneClient
// (Event, Public)

void UUISceneClient::InitializeSceneClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.InitializeSceneClient");

	UUISceneClient_InitializeSceneClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.GetInverseCanvasToScreen
// (Final, Native, HasOptionalParms, Public)

void UUISceneClient::GetInverseCanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.GetInverseCanvasToScreen");

	UUISceneClient_GetInverseCanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.GetCanvasToScreen
// (Final, Native, HasOptionalParms, Public)

void UUISceneClient::GetCanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.GetCanvasToScreen");

	UUISceneClient_GetCanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.UpdateCanvasToScreen
// (Final, Native, Public)

void UUISceneClient::UpdateCanvasToScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.UpdateCanvasToScreen");

	UUISceneClient_UpdateCanvasToScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.ChangeMouseCursor
// (Final, Native, Public)

void UUISceneClient::ChangeMouseCursor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.ChangeMouseCursor");

	UUISceneClient_ChangeMouseCursor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.SetMousePosition
// (Final, Native, Public)

void UUISceneClient::SetMousePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.SetMousePosition");

	UUISceneClient_SetMousePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.CloseSceneAtIndex
// (Final, Native, HasOptionalParms, Public)

void UUISceneClient::CloseSceneAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.CloseSceneAtIndex");

	UUISceneClient_CloseSceneAtIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.CloseScene
// (Final, Native, HasOptionalParms, Public)

void UUISceneClient::CloseScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.CloseScene");

	UUISceneClient_CloseScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.ReplaceSceneAtIndex
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISceneClient::ReplaceSceneAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.ReplaceSceneAtIndex");

	UUISceneClient_ReplaceSceneAtIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.ReplaceScene
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISceneClient::ReplaceScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.ReplaceScene");

	UUISceneClient_ReplaceScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.InsertScene
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISceneClient::InsertScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.InsertScene");

	UUISceneClient_InsertScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.OpenScene
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISceneClient::OpenScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.OpenScene");

	UUISceneClient_OpenScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.InitializeScene
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISceneClient::InitializeScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.InitializeScene");

	UUISceneClient_InitializeScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.IsSceneInitialized
// (Final, Native, Public)

void UUISceneClient::IsSceneInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.IsSceneInitialized");

	UUISceneClient_IsSceneInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.IsUIActive
// (Final, Native, HasOptionalParms, Public)

void UUISceneClient::IsUIActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.IsUIActive");

	UUISceneClient_IsUIActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISceneClient.ChangeActiveSkin
// (Final, Native, Public)

void UUISceneClient::ChangeActiveSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISceneClient.ChangeActiveSkin");

	UUISceneClient_ChangeActiveSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.RemoveSequenceObjects
// (Final, Native, Public, HasOutParms)

void UUIState::RemoveSequenceObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.RemoveSequenceObjects");

	UUIState_RemoveSequenceObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.RemoveSequenceObject
// (Final, Native, Public)

void UUIState::RemoveSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.RemoveSequenceObject");

	UUIState_RemoveSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.AddSequenceObject
// (Final, Native, HasOptionalParms, Public)

void UUIState::AddSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.AddSequenceObject");

	UUIState_AddSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.GetUIEvents
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIState::GetUIEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.GetUIEvents");

	UUIState_GetUIEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.IsStateAllowed
// (Defined, Event, Public)

void UUIState::IsStateAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.IsStateAllowed");

	UUIState_IsStateAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.OnDeactivate
// (Event, Public)

void UUIState::OnDeactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.OnDeactivate");

	UUIState_OnDeactivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.OnActivate
// (Event, Public)

void UUIState::OnActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.OnActivate");

	UUIState_OnActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.DeactivateState
// (Defined, Event, Public)

void UUIState::DeactivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.DeactivateState");

	UUIState_DeactivateState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.ActivateState
// (Defined, Event, Public)

void UUIState::ActivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.ActivateState");

	UUIState_ActivateState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.IsActiveForPlayer
// (Final, Native, Public)

void UUIState::IsActiveForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.IsActiveForPlayer");

	UUIState_IsActiveForPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState.IsWidgetClassSupported
// (Defined, Event, Public)

void UUIState::IsWidgetClassSupported()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState.IsWidgetClassSupported");

	UUIState_IsWidgetClassSupported_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState_Disabled.IsStateAllowed
// (Defined, Event, Public)

void UUIState_Disabled::IsStateAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState_Disabled.IsStateAllowed");

	UUIState_Disabled_IsStateAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState_Disabled.ActivateState
// (Defined, Event, Public)

void UUIState_Disabled::ActivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState_Disabled.ActivateState");

	UUIState_Disabled_ActivateState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIString.ContainsMarkup
// (Final, Native, Public)

void UUIString::ContainsMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIString.ContainsMarkup");

	UUIString_ContainsMarkup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIString.GetAutoScaleValue
// (Final, Native, Public, HasOutParms)

void UUIString::GetAutoScaleValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIString.GetAutoScaleValue");

	UUIString_GetAutoScaleValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIString.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUIString::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIString.GetValue");

	UUIString_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIString.SetValue
// (Final, Native, Public)

void UUIString::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIString.SetValue");

	UUIString_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.ParseTagArrayDelimiter
// (Final, Defined, Public, HasOutParms)

void UUIDataProvider::ParseTagArrayDelimiter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.ParseTagArrayDelimiter");

	UUIDataProvider_ParseTagArrayDelimiter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.RemovePropertyNotificationChangeRequest
// (Final, Defined, Public)

void UUIDataProvider::RemovePropertyNotificationChangeRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.RemovePropertyNotificationChangeRequest");

	UUIDataProvider_RemovePropertyNotificationChangeRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.AddPropertyNotificationChangeRequest
// (Final, Defined, HasOptionalParms, Public)

void UUIDataProvider::AddPropertyNotificationChangeRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.AddPropertyNotificationChangeRequest");

	UUIDataProvider_AddPropertyNotificationChangeRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.NotifyPropertyChanged
// (Defined, Event, HasOptionalParms, Public)

void UUIDataProvider::NotifyPropertyChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.NotifyPropertyChanged");

	UUIDataProvider_NotifyPropertyChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.IsCollectionDataType
// (Defined, Event, Public)

void UUIDataProvider::IsCollectionDataType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.IsCollectionDataType");

	UUIDataProvider_IsCollectionDataType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.IsProviderDisabled
// (Event, Public)

void UUIDataProvider::IsProviderDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.IsProviderDisabled");

	UUIDataProvider_IsProviderDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.GenerateFillerData
// (Event, Public)

void UUIDataProvider::GenerateFillerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.GenerateFillerData");

	UUIDataProvider_GenerateFillerData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.GenerateScriptMarkupString
// (Event, Public)

void UUIDataProvider::GenerateScriptMarkupString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.GenerateScriptMarkupString");

	UUIDataProvider_GenerateScriptMarkupString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.SetFieldValue
// (Event, HasOptionalParms, Public, HasOutParms)

void UUIDataProvider::SetFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.SetFieldValue");

	UUIDataProvider_SetFieldValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.GetFieldValue
// (Event, HasOptionalParms, Public, HasOutParms)

void UUIDataProvider::GetFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.GetFieldValue");

	UUIDataProvider_GetFieldValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.AllowPublishingToField
// (Event, HasOptionalParms, Public)

void UUIDataProvider::AllowPublishingToField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.AllowPublishingToField");

	UUIDataProvider_AllowPublishingToField_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.GetSupportedScriptFields
// (Event, Public, HasOutParms)

void UUIDataProvider::GetSupportedScriptFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.GetSupportedScriptFields");

	UUIDataProvider_GetSupportedScriptFields_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.ParseArrayDelimiter
// (Native, Public, HasOutParms)

void UUIDataProvider::ParseArrayDelimiter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.ParseArrayDelimiter");

	UUIDataProvider_ParseArrayDelimiter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.GetProviderFieldType
// (Final, Native, Public, HasOutParms)

void UUIDataProvider::GetProviderFieldType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.GetProviderFieldType");

	UUIDataProvider_GetProviderFieldType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider.OnDataProviderPropertyChange
// (HasOptionalParms, Public, Delegate)

void UUIDataProvider::OnDataProviderPropertyChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider.OnDataProviderPropertyChange");

	UUIDataProvider_OnDataProviderPropertyChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.GetDataStoreClient
// (Final, Defined, Public)

void UUIDataStore::GetDataStoreClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.GetDataStoreClient");

	UUIDataStore_GetDataStoreClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.OnCommit
// (Native, Public)

void UUIDataStore::OnCommit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.OnCommit");

	UUIDataStore_OnCommit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.RefreshSubscribers
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIDataStore::RefreshSubscribers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.RefreshSubscribers");

	UUIDataStore_RefreshSubscribers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.NotifyGameSessionEnded
// (Public)

void UUIDataStore::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.NotifyGameSessionEnded");

	UUIDataStore_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.SubscriberDetached
// (Defined, Event, Public)

void UUIDataStore::SubscriberDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.SubscriberDetached");

	UUIDataStore_SubscriberDetached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.SubscriberAttached
// (Defined, Event, Public)

void UUIDataStore::SubscriberAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.SubscriberAttached");

	UUIDataStore_SubscriberAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.Unregistered
// (Event, Public)

void UUIDataStore::Unregistered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.Unregistered");

	UUIDataStore_Unregistered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.Registered
// (Event, Public)

void UUIDataStore::Registered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.Registered");

	UUIDataStore_Registered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore.OnDataStoreValueUpdated
// (Public, Delegate)

void UUIDataStore::OnDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore.OnDataStoreValueUpdated");

	UUIDataStore_OnDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.SubscriberDetached
// (Event, Public)

void UUISkin::SubscriberDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.SubscriberDetached");

	UUISkin_SubscriberDetached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.SubscriberAttached
// (Event, Public)

void UUISkin::SubscriberAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.SubscriberAttached");

	UUISkin_SubscriberAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.GetStyleGroups
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISkin::GetStyleGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.GetStyleGroups");

	UUISkin_GetStyleGroups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.FindStyleGroupIndex
// (Final, Native, Public)

void UUISkin::FindStyleGroupIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.FindStyleGroupIndex");

	UUISkin_FindStyleGroupIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.RenameStyleGroup
// (Final, Native, Public)

void UUISkin::RenameStyleGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.RenameStyleGroup");

	UUISkin_RenameStyleGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.RemoveStyleGroupName
// (Final, Native, Public)

void UUISkin::RemoveStyleGroupName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.RemoveStyleGroupName");

	UUISkin_RemoveStyleGroupName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.AddStyleGroupName
// (Final, Native, Public)

void UUISkin::AddStyleGroupName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.AddStyleGroupName");

	UUISkin_AddStyleGroupName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.IsInheritedGroupName
// (Final, Native, Public)

void UUISkin::IsInheritedGroupName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.IsInheritedGroupName");

	UUISkin_IsInheritedGroupName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.GetSkinSoundCues
// (Final, Native, Public, HasOutParms)

void UUISkin::GetSkinSoundCues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.GetSkinSoundCues");

	UUISkin_GetSkinSoundCues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.GetUISoundCue
// (Final, Native, Public, HasOutParms)

void UUISkin::GetUISoundCue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.GetUISoundCue");

	UUISkin_GetUISoundCue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.RemoveUISoundCue
// (Final, Native, Public)

void UUISkin::RemoveUISoundCue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.RemoveUISoundCue");

	UUISkin_RemoveUISoundCue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.AddUISoundCue
// (Final, Native, Public)

void UUISkin::AddUISoundCue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.AddUISoundCue");

	UUISkin_AddUISoundCue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.GetCursorResource
// (Final, Native, Public)

void UUISkin::GetCursorResource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.GetCursorResource");

	UUISkin_GetCursorResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISkin.GetAvailableStyles
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISkin::GetAvailableStyles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISkin.GetAvailableStyles");

	UUISkin_GetAvailableStyles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle.GetDefaultStyle
// (Final, Defined, Event, Public)

void UUIStyle::GetDefaultStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle.GetDefaultStyle");

	UUIStyle_GetDefaultStyle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle.GetStyleForStateByClass
// (Final, Native, Public)

void UUIStyle::GetStyleForStateByClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle.GetStyleForStateByClass");

	UUIStyle_GetStyleForStateByClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle.GetStyleForState
// (Final, Native, Public)

void UUIStyle::GetStyleForState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle.GetStyleForState");

	UUIStyle_GetStyleForState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.AllowInputAlias
// (Defined, Event, Public)

void UUIObject::AllowInputAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.AllowInputAlias");

	UUIObject_AllowInputAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.LogRenderBounds
// (Public)

void UUIObject::LogRenderBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.LogRenderBounds");

	UUIObject_LogRenderBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.ClearDockTargets
// (Defined, Public)

void UUIObject::ClearDockTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.ClearDockTargets");

	UUIObject_ClearDockTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetParent
// (Defined, Public)

void UUIObject::GetParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetParent");

	UUIObject_GetParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetOwner
// (Final, Defined, Public)

void UUIObject::GetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetOwner");

	UUIObject_GetOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetScene
// (Final, Defined, Public)

void UUIObject::GetScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetScene");

	UUIObject_GetScene_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetWidgetStyleByName
// (Final, Native, Public)

void UUIObject::SetWidgetStyleByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetWidgetStyleByName");

	UUIObject_SetWidgetStyleByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.FindStyleSubscriberIndexById
// (Final, Native, Public)

void UUIObject::FindStyleSubscriberIndexById()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.FindStyleSubscriberIndexById");

	UUIObject_FindStyleSubscriberIndexById_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.FindStyleSubscriberIndex
// (Final, Native, Public, HasOutParms)

void UUIObject::FindStyleSubscriberIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.FindStyleSubscriberIndex");

	UUIObject_FindStyleSubscriberIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.RemoveStyleSubscriber
// (Final, Native, Public)

void UUIObject::RemoveStyleSubscriber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.RemoveStyleSubscriber");

	UUIObject_RemoveStyleSubscriber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.AddStyleSubscriber
// (Final, Native, Public)

void UUIObject::AddStyleSubscriber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.AddStyleSubscriber");

	UUIObject_AddStyleSubscriber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetPositionExtent
// (Final, Native, HasOptionalParms, Public)

void UUIObject::GetPositionExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetPositionExtent");

	UUIObject_GetPositionExtent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetPositionExtents
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIObject::GetPositionExtents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetPositionExtents");

	UUIObject_GetPositionExtents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.NeedsActiveCursorUpdates
// (Final, Native, Public)

void UUIObject::NeedsActiveCursorUpdates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.NeedsActiveCursorUpdates");

	UUIObject_NeedsActiveCursorUpdates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetActiveCursorUpdate
// (Native, Public)

void UUIObject::SetActiveCursorUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetActiveCursorUpdate");

	UUIObject_SetActiveCursorUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetPrivateBehavior
// (Final, Native, HasOptionalParms, Public)

void UUIObject::SetPrivateBehavior()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetPrivateBehavior");

	UUIObject_SetPrivateBehavior_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.IsPrivateBehaviorSet
// (Final, Native, Public)

void UUIObject::IsPrivateBehaviorSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.IsPrivateBehaviorSet");

	UUIObject_IsPrivateBehaviorSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.CanAcceptFocus
// (Native, HasOptionalParms, Public)

void UUIObject::CanAcceptFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.CanAcceptFocus");

	UUIObject_CanAcceptFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetForcedNavigationTarget
// (Final, Native, HasOptionalParms, Public)

void UUIObject::SetForcedNavigationTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetForcedNavigationTarget");

	UUIObject_SetForcedNavigationTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetNavigationTarget
// (Final, Native, Public)

void UUIObject::SetNavigationTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetNavigationTarget");

	UUIObject_SetNavigationTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.IsDockedTo
// (Final, Native, HasOptionalParms, Public)

void UUIObject::IsDockedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.IsDockedTo");

	UUIObject_IsDockedTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetDockParameters
// (Final, Native, Public, HasOutParms)

void UUIObject::GetDockParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetDockParameters");

	UUIObject_GetDockParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetDockParameters
// (Final, Native, HasOptionalParms, Public)

void UUIObject::SetDockParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetDockParameters");

	UUIObject_SetDockParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetDockPadding
// (Native, HasOptionalParms, Public)

void UUIObject::SetDockPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetDockPadding");

	UUIObject_SetDockPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetDockTarget
// (Native, Public)

void UUIObject::SetDockTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetDockTarget");

	UUIObject_SetDockTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.IsContainedBy
// (Final, Native, Public)

void UUIObject::IsContainedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.IsContainedBy");

	UUIObject_IsContainedBy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.NotifyValueChanged
// (Native, HasOptionalParms, Public)

void UUIObject::NotifyValueChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.NotifyValueChanged");

	UUIObject_NotifyValueChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetRotationMatrix
// (Final, Native, HasOptionalParms, Public)

void UUIObject::GetRotationMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetRotationMatrix");

	UUIObject_GetRotationMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GenerateTransformMatrix
// (Final, Native, HasOptionalParms, Public)

void UUIObject::GenerateTransformMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GenerateTransformMatrix");

	UUIObject_GenerateTransformMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetAnchorPosition
// (Final, Native, HasOptionalParms, Public)

void UUIObject::GetAnchorPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetAnchorPosition");

	UUIObject_GetAnchorPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.UpdateRotationMatrix
// (Final, Native, Public)

void UUIObject::UpdateRotationMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.UpdateRotationMatrix");

	UUIObject_UpdateRotationMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.RotateWidget
// (Final, Native, HasOptionalParms, Public)

void UUIObject::RotateWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.RotateWidget");

	UUIObject_RotateWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetAnchorPosition
// (Final, Native, HasOptionalParms, Public)

void UUIObject::SetAnchorPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetAnchorPosition");

	UUIObject_SetAnchorPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.HasTransform
// (Final, Native, HasOptionalParms, Public)

void UUIObject::HasTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.HasTransform");

	UUIObject_HasTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetToolTipValue
// (Final, Native, Public)

void UUIObject::GetToolTipValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetToolTipValue");

	UUIObject_GetToolTipValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GenerateSceneDataStoreMarkup
// (Native, HasOptionalParms, Public)

void UUIObject::GenerateSceneDataStoreMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GenerateSceneDataStoreMarkup");

	UUIObject_GenerateSceneDataStoreMarkup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.ClearDefaultDataBinding
// (Final, Native, Public)

void UUIObject::ClearDefaultDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.ClearDefaultDataBinding");

	UUIObject_ClearDefaultDataBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetDefaultDataStores
// (Final, Native, Public, HasOutParms)

void UUIObject::GetDefaultDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetDefaultDataStores");

	UUIObject_GetDefaultDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.ResolveDefaultDataBinding
// (Final, Native, Public)

void UUIObject::ResolveDefaultDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.ResolveDefaultDataBinding");

	UUIObject_ResolveDefaultDataBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.GetDefaultDataBinding
// (Final, Native, Public)

void UUIObject::GetDefaultDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.GetDefaultDataBinding");

	UUIObject_GetDefaultDataBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.SetDefaultDataBinding
// (Final, Native, Public)

void UUIObject::SetDefaultDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.SetDefaultDataBinding");

	UUIObject_SetDefaultDataBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnContextMenuItemSelected
// (Public, Delegate)

void UUIObject::OnContextMenuItemSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnContextMenuItemSelected");

	UUIObject_OnContextMenuItemSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnSubRender
// (Public, Delegate)

void UUIObject::OnSubRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnSubRender");

	UUIObject_OnSubRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPostRender
// (Public, Delegate)

void UUIObject::OnPostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPostRender");

	UUIObject_OnPostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnCloseContextMenu
// (Public, Delegate)

void UUIObject::OnCloseContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnCloseContextMenu");

	UUIObject_OnCloseContextMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnOpenContextMenu
// (Public, Delegate, HasOutParms)

void UUIObject::OnOpenContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnOpenContextMenu");

	UUIObject_OnOpenContextMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnDoubleClick
// (Public, Delegate)

void UUIObject::OnDoubleClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnDoubleClick");

	UUIObject_OnDoubleClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnClicked
// (Public, Delegate)

void UUIObject::OnClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnClicked");

	UUIObject_OnClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPressRelease
// (Public, Delegate)

void UUIObject::OnPressRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPressRelease");

	UUIObject_OnPressRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPressRepeat
// (Public, Delegate)

void UUIObject::OnPressRepeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPressRepeat");

	UUIObject_OnPressRepeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPressed
// (Public, Delegate)

void UUIObject::OnPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPressed");

	UUIObject_OnPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnRefreshSubscriberValue
// (Public, Delegate)

void UUIObject::OnRefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnRefreshSubscriberValue");

	UUIObject_OnRefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnValueChanged
// (Public, Delegate)

void UUIObject::OnValueChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnValueChanged");

	UUIObject_OnValueChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPostSceneUpdate
// (Public, Delegate)

void UUIObject::OnPostSceneUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPostSceneUpdate");

	UUIObject_OnPostSceneUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnPreSceneUpdate
// (Public, Delegate)

void UUIObject::OnPreSceneUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnPreSceneUpdate");

	UUIObject_OnPreSceneUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObject.OnCreate
// (Public, Delegate)

void UUIObject::OnCreate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObject.OnCreate");

	UUIObject_OnCreate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawComponents.OnFadeComplete
// (Public, Delegate)

void UUIComp_DrawComponents::OnFadeComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawComponents.OnFadeComplete");

	UUIComp_DrawComponents_OnFadeComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawComponents.ResetFade
// (Final, Native, Public)

void UUIComp_DrawComponents::ResetFade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawComponents.ResetFade");

	UUIComp_DrawComponents_ResetFade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawComponents.Pulse
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawComponents::Pulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawComponents.Pulse");

	UUIComp_DrawComponents_Pulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawComponents.Fade
// (Final, Native, Public)

void UUIComp_DrawComponents::Fade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawComponents.Fade");

	UUIComp_DrawComponents_Fade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.NotifyResolveStyle
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawImage::NotifyResolveStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.NotifyResolveStyle");

	UUIComp_DrawImage_NotifyResolveStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetStyleResolverTag
// (Final, Native, Public)

void UUIComp_DrawImage::SetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetStyleResolverTag");

	UUIComp_DrawImage_SetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.GetStyleResolverTag
// (Final, Native, Public)

void UUIComp_DrawImage::GetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.GetStyleResolverTag");

	UUIComp_DrawImage_GetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.GetImage
// (Final, Native, Public)

void UUIComp_DrawImage::GetImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.GetImage");

	UUIComp_DrawImage_GetImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.DisableCustomFormatting
// (Final, Native, Public)

void UUIComp_DrawImage::DisableCustomFormatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.DisableCustomFormatting");

	UUIComp_DrawImage_DisableCustomFormatting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.DisableCustomPadding
// (Final, Native, Public)

void UUIComp_DrawImage::DisableCustomPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.DisableCustomPadding");

	UUIComp_DrawImage_DisableCustomPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.DisableCustomOpacity
// (Final, Native, Public)

void UUIComp_DrawImage::DisableCustomOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.DisableCustomOpacity");

	UUIComp_DrawImage_DisableCustomOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.DisableCustomColor
// (Final, Native, Public)

void UUIComp_DrawImage::DisableCustomColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.DisableCustomColor");

	UUIComp_DrawImage_DisableCustomColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.DisableCustomCoordinates
// (Final, Native, Public)

void UUIComp_DrawImage::DisableCustomCoordinates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.DisableCustomCoordinates");

	UUIComp_DrawImage_DisableCustomCoordinates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetFormatting
// (Final, Native, Public)

void UUIComp_DrawImage::SetFormatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetFormatting");

	UUIComp_DrawImage_SetFormatting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetPadding
// (Final, Native, Public)

void UUIComp_DrawImage::SetPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetPadding");

	UUIComp_DrawImage_SetPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetOpacity
// (Final, Native, Public)

void UUIComp_DrawImage::SetOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetOpacity");

	UUIComp_DrawImage_SetOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetColor
// (Final, Native, Public)

void UUIComp_DrawImage::SetColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetColor");

	UUIComp_DrawImage_SetColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetCoordinates
// (Final, Native, Public)

void UUIComp_DrawImage::SetCoordinates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetCoordinates");

	UUIComp_DrawImage_SetCoordinates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.SetImage
// (Final, Native, Public)

void UUIComp_DrawImage::SetImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.SetImage");

	UUIComp_DrawImage_SetImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawImage.GetAppliedImageStyle
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawImage::GetAppliedImageStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawImage.GetAppliedImageStyle");

	UUIComp_DrawImage_GetAppliedImageStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetAutoSizePadding
// (Final, Defined, Event, Public)

void UUIComp_DrawString::SetAutoSizePadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetAutoSizePadding");

	UUIComp_DrawString_SetAutoSizePadding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.EnableAutoSizing
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIComp_DrawString::EnableAutoSizing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.EnableAutoSizing");

	UUIComp_DrawString_EnableAutoSizing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.IsAutoSizeEnabled
// (Final, Defined, Public)

void UUIComp_DrawString::IsAutoSizeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.IsAutoSizeEnabled");

	UUIComp_DrawString_IsAutoSizeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetAutoSizeExtent
// (Final, Native, Public)

void UUIComp_DrawString::SetAutoSizeExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetAutoSizeExtent");

	UUIComp_DrawString_SetAutoSizeExtent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.NotifyResolveStyle
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::NotifyResolveStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.NotifyResolveStyle");

	UUIComp_DrawString_NotifyResolveStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetStyleResolverTag
// (Final, Native, Public)

void UUIComp_DrawString::SetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetStyleResolverTag");

	UUIComp_DrawString_SetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetStyleResolverTag
// (Final, Native, Public)

void UUIComp_DrawString::GetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetStyleResolverTag");

	UUIComp_DrawString_GetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetFinalStringStyle
// (Final, Native, Public, HasOutParms)

void UUIComp_DrawString::GetFinalStringStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetFinalStringStyle");

	UUIComp_DrawString_GetFinalStringStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetAppliedStringStyle
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::GetAppliedStringStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetAppliedStringStyle");

	UUIComp_DrawString_GetAppliedStringStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetWrapMode
// (Final, Native, Public)

void UUIComp_DrawString::GetWrapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetWrapMode");

	UUIComp_DrawString_GetWrapMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomSpacingAdjust
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomSpacingAdjust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomSpacingAdjust");

	UUIComp_DrawString_DisableCustomSpacingAdjust_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomScale
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomScale");

	UUIComp_DrawString_DisableCustomScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomAutoScaling
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomAutoScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomAutoScaling");

	UUIComp_DrawString_DisableCustomAutoScaling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomClipAlignment
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomClipAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomClipAlignment");

	UUIComp_DrawString_DisableCustomClipAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomClipMode
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomClipMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomClipMode");

	UUIComp_DrawString_DisableCustomClipMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomAlignment
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomAlignment");

	UUIComp_DrawString_DisableCustomAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomAttributes
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomAttributes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomAttributes");

	UUIComp_DrawString_DisableCustomAttributes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomFont
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomFont");

	UUIComp_DrawString_DisableCustomFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomPadding
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomPadding");

	UUIComp_DrawString_DisableCustomPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomOpacity
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomOpacity");

	UUIComp_DrawString_DisableCustomOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.DisableCustomColor
// (Final, Native, Public)

void UUIComp_DrawString::DisableCustomColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.DisableCustomColor");

	UUIComp_DrawString_DisableCustomColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetSpacingAdjust
// (Final, Native, Public)

void UUIComp_DrawString::SetSpacingAdjust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetSpacingAdjust");

	UUIComp_DrawString_SetSpacingAdjust_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetScale
// (Final, Native, Public)

void UUIComp_DrawString::SetScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetScale");

	UUIComp_DrawString_SetScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetAutoScaling
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::SetAutoScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetAutoScaling");

	UUIComp_DrawString_SetAutoScaling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetClipAlignment
// (Final, Native, Public)

void UUIComp_DrawString::SetClipAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetClipAlignment");

	UUIComp_DrawString_SetClipAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetWrapMode
// (Final, Native, Public)

void UUIComp_DrawString::SetWrapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetWrapMode");

	UUIComp_DrawString_SetWrapMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetAlignment
// (Final, Native, Public)

void UUIComp_DrawString::SetAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetAlignment");

	UUIComp_DrawString_SetAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetAttributes
// (Final, Native, Public)

void UUIComp_DrawString::SetAttributes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetAttributes");

	UUIComp_DrawString_SetAttributes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetFont
// (Final, Native, Public)

void UUIComp_DrawString::SetFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetFont");

	UUIComp_DrawString_SetFont_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetPadding
// (Final, Native, Public)

void UUIComp_DrawString::SetPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetPadding");

	UUIComp_DrawString_SetPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetOpacity
// (Final, Native, Public)

void UUIComp_DrawString::SetOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetOpacity");

	UUIComp_DrawString_SetOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetColor
// (Final, Native, Public)

void UUIComp_DrawString::SetColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetColor");

	UUIComp_DrawString_SetColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetSubregionAlignment
// (Final, Native, Public)

void UUIComp_DrawString::SetSubregionAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetSubregionAlignment");

	UUIComp_DrawString_SetSubregionAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetSubregionOffset
// (Final, Native, Public)

void UUIComp_DrawString::SetSubregionOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetSubregionOffset");

	UUIComp_DrawString_SetSubregionOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetSubregionSize
// (Final, Native, Public)

void UUIComp_DrawString::SetSubregionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetSubregionSize");

	UUIComp_DrawString_SetSubregionSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.EnableSubregion
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::EnableSubregion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.EnableSubregion");

	UUIComp_DrawString_EnableSubregion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetSubregionAlignment
// (Final, Native, Public)

void UUIComp_DrawString::GetSubregionAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetSubregionAlignment");

	UUIComp_DrawString_GetSubregionAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetSubregionOffset
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::GetSubregionOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetSubregionOffset");

	UUIComp_DrawString_GetSubregionOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetSubregionSize
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::GetSubregionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetSubregionSize");

	UUIComp_DrawString_GetSubregionSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.IsSubregionEnabled
// (Final, Native, Public)

void UUIComp_DrawString::IsSubregionEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.IsSubregionEnabled");

	UUIComp_DrawString_IsSubregionEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.RefreshValue
// (Final, Native, Public)

void UUIComp_DrawString::RefreshValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.RefreshValue");

	UUIComp_DrawString_RefreshValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.GetValue");

	UUIComp_DrawString_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawString.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUIComp_DrawString::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawString.SetValue");

	UUIComp_DrawString_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.IgnoreMarkup
// (Final, Defined, Public)

void UUIEditBox::IgnoreMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.IgnoreMarkup");

	UUIEditBox_IgnoreMarkup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.SetReadOnly
// (Defined, Public)

void UUIEditBox::SetReadOnly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.SetReadOnly");

	UUIEditBox_SetReadOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.IsReadOnly
// (Final, Defined, Public)

void UUIEditBox::IsReadOnly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.IsReadOnly");

	UUIEditBox_IsReadOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.Initialized
// (Defined, Event, Public)

void UUIEditBox::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.Initialized");

	UUIEditBox_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIEditBox::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.SaveSubscriberValue");

	UUIEditBox_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.ClearBoundDataStores
// (Final, Native, Public)

void UUIEditBox::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.ClearBoundDataStores");

	UUIEditBox_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.GetBoundDataStores
// (Native, Public, HasOutParms)

void UUIEditBox::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.GetBoundDataStores");

	UUIEditBox_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIEditBox::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.NotifyDataStoreValueUpdated");

	UUIEditBox_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIEditBox::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.RefreshSubscriberValue");

	UUIEditBox_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIEditBox::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.GetDataStoreBinding");

	UUIEditBox_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIEditBox::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.SetDataStoreBinding");

	UUIEditBox_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.CalculateCaretPositionFromCursorLocation
// (Native, HasOptionalParms, Public)

void UUIEditBox::CalculateCaretPositionFromCursorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.CalculateCaretPositionFromCursorLocation");

	UUIEditBox_CalculateCaretPositionFromCursorLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUIEditBox::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.GetValue");

	UUIEditBox_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUIEditBox::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.SetValue");

	UUIEditBox_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.SetBackgroundImage
// (Final, Defined, Public)

void UUIEditBox::SetBackgroundImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.SetBackgroundImage");

	UUIEditBox_SetBackgroundImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEditBox.OnSubmitText
// (Public, Delegate)

void UUIEditBox::OnSubmitText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEditBox.OnSubmitText");

	UUIEditBox_OnSubmitText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.GetSelectedText
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::GetSelectedText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.GetSelectedText");

	UUIComp_DrawStringEditbox_GetSelectedText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.GetSelectionRange
// (Final, Native, Public, HasOutParms)

void UUIComp_DrawStringEditbox::GetSelectionRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.GetSelectionRange");

	UUIComp_DrawStringEditbox_GetSelectionRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.ClearSelection
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::ClearSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.ClearSelection");

	UUIComp_DrawStringEditbox_ClearSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.SetSelectionEnd
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::SetSelectionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.SetSelectionEnd");

	UUIComp_DrawStringEditbox_SetSelectionEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.SetSelectionStart
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::SetSelectionStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.SetSelectionStart");

	UUIComp_DrawStringEditbox_SetSelectionStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.SetSelectionRange
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::SetSelectionRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.SetSelectionRange");

	UUIComp_DrawStringEditbox_SetSelectionRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.GetUserTextLength
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::GetUserTextLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.GetUserTextLength");

	UUIComp_DrawStringEditbox_GetUserTextLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_DrawStringEditbox.SetUserText
// (Final, Native, Public)

void UUIComp_DrawStringEditbox::SetUserText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_DrawStringEditbox.SetUserText");

	UUIComp_DrawStringEditbox_SetUserText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.OnStateChanged
// (Final, Defined, HasOptionalParms, Public)

void UUIList::OnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.OnStateChanged");

	UUIList_OnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.ClickedScrollZone
// (Defined, Public)

void UUIList::ClickedScrollZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.ClickedScrollZone");

	UUIList_ClickedScrollZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.ShouldRenderColumnHeaders
// (Final, Defined, Public)

void UUIList::ShouldRenderColumnHeaders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.ShouldRenderColumnHeaders");

	UUIList_ShouldRenderColumnHeaders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.EnableColumnHeaderRendering
// (Final, Defined, HasOptionalParms, Public)

void UUIList::EnableColumnHeaderRendering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.EnableColumnHeaderRendering");

	UUIList_EnableColumnHeaderRendering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsValueChangeNotificationEnabled
// (Final, Defined, Event, Public)

void UUIList::IsValueChangeNotificationEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsValueChangeNotificationEnabled");

	UUIList_IsValueChangeNotificationEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.DisableValueChangeNotification
// (Final, Defined, Event, Public)

void UUIList::DisableValueChangeNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.DisableValueChangeNotification");

	UUIList_DisableValueChangeNotification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.EnableValueChangeNotification
// (Final, Defined, Event, Public)

void UUIList::EnableValueChangeNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.EnableValueChangeNotification");

	UUIList_EnableValueChangeNotification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsSetIndexEnabled
// (Final, Defined, Event, Public)

void UUIList::IsSetIndexEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsSetIndexEnabled");

	UUIList_IsSetIndexEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.DisableSetIndex
// (Final, Defined, Event, Public)

void UUIList::DisableSetIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.DisableSetIndex");

	UUIList_DisableSetIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.EnableSetIndex
// (Final, Defined, Event, Public)

void UUIList::EnableSetIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.EnableSetIndex");

	UUIList_EnableSetIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.DecrementAllMutexes
// (Final, Defined, Event, HasOptionalParms, Public)

void UUIList::DecrementAllMutexes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.DecrementAllMutexes");

	UUIList_DecrementAllMutexes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IncrementAllMutexes
// (Final, Defined, Event, Public)

void UUIList::IncrementAllMutexes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IncrementAllMutexes");

	UUIList_IncrementAllMutexes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.AllMutexesDisabled
// (Final, Defined, Event, Public)

void UUIList::AllMutexesDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.AllMutexesDisabled");

	UUIList_AllMutexesDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.PostInitialize
// (Defined, Event, Public)

void UUIList::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.PostInitialize");

	UUIList_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.Initialized
// (Defined, Event, Public)

void UUIList::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.Initialized");

	UUIList_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIList::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SaveSubscriberValue");

	UUIList_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsElementAutoSizingEnabled
// (Final, Native, Public)

void UUIList::IsElementAutoSizingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsElementAutoSizingEnabled");

	UUIList_IsElementAutoSizingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.ClearBoundDataStores
// (Final, Native, Public)

void UUIList::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.ClearBoundDataStores");

	UUIList_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUIList::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetBoundDataStores");

	UUIList_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIList::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.NotifyDataStoreValueUpdated");

	UUIList_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIList::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.RefreshSubscriberValue");

	UUIList_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIList::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetDataStoreBinding");

	UUIList_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIList::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetDataStoreBinding");

	UUIList_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsHotTrackingEnabled
// (Final, Native, Public)

void UUIList::IsHotTrackingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsHotTrackingEnabled");

	UUIList_IsHotTrackingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetHotTracking
// (Final, Native, Public)

void UUIList::SetHotTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetHotTracking");

	UUIList_SetHotTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.CanSelectElement
// (Final, Native, Public)

void UUIList::CanSelectElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.CanSelectElement");

	UUIList_CanSelectElement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsElementSelected
// (Final, Native, Public)

void UUIList::IsElementSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsElementSelected");

	UUIList_IsElementSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.IsElementEnabled
// (Final, Native, Public)

void UUIList::IsElementEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.IsElementEnabled");

	UUIList_IsElementEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetTopIndex
// (Final, Native, HasOptionalParms, Public)

void UUIList::SetTopIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetTopIndex");

	UUIList_SetTopIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.NavigateIndex
// (Final, Native, Public)

void UUIList::NavigateIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.NavigateIndex");

	UUIList_NavigateIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetIndex
// (Final, Native, HasOptionalParms, Public)

void UUIList::SetIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetIndex");

	UUIList_SetIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.FindItemIndex
// (Final, Native, HasOptionalParms, Public)

void UUIList::FindItemIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.FindItemIndex");

	UUIList_FindItemIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetElementCellState
// (Final, Native, Public)

void UUIList::GetElementCellState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetElementCellState");

	UUIList_GetElementCellState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetElementCellState
// (Final, Native, Public)

void UUIList::SetElementCellState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetElementCellState");

	UUIList_SetElementCellState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetElementValue
// (Final, Native, HasOptionalParms, Public)

void UUIList::GetElementValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetElementValue");

	UUIList_GetElementValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetCurrentItem
// (Final, Native, Public)

void UUIList::GetCurrentItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetCurrentItem");

	UUIList_GetCurrentItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetSelectedItems
// (Final, Native, Public)

void UUIList::GetSelectedItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetSelectedItems");

	UUIList_GetSelectedItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetResizeColumn
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIList::GetResizeColumn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetResizeColumn");

	UUIList_GetResizeColumn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.CalculateIndexFromCursorLocation
// (Native, HasOptionalParms, Public)

void UUIList::CalculateIndexFromCursorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.CalculateIndexFromCursorLocation");

	UUIList_CalculateIndexFromCursorLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetClientRegion
// (Final, Native, Public)

void UUIList::GetClientRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetClientRegion");

	UUIList_GetClientRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetRowHeight
// (Native, HasOptionalParms, Public)

void UUIList::GetRowHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetRowHeight");

	UUIList_GetRowHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetColumnWidth
// (Final, Native, HasOptionalParms, Public)

void UUIList::GetColumnWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetColumnWidth");

	UUIList_GetColumnWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetRowCount
// (Final, Native, Public)

void UUIList::SetRowCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetRowCount");

	UUIList_SetRowCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.SetColumnCount
// (Final, Native, Public)

void UUIList::SetColumnCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.SetColumnCount");

	UUIList_SetColumnCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetTotalColumnCount
// (Final, Native, Public)

void UUIList::GetTotalColumnCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetTotalColumnCount");

	UUIList_GetTotalColumnCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetTotalRowCount
// (Final, Native, Public)

void UUIList::GetTotalRowCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetTotalRowCount");

	UUIList_GetTotalRowCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetMaxNumVisibleColumns
// (Final, Native, Public)

void UUIList::GetMaxNumVisibleColumns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetMaxNumVisibleColumns");

	UUIList_GetMaxNumVisibleColumns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetMaxNumVisibleRows
// (Final, Native, Public)

void UUIList::GetMaxNumVisibleRows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetMaxNumVisibleRows");

	UUIList_GetMaxNumVisibleRows_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetMaxVisibleElementCount
// (Native, Public)

void UUIList::GetMaxVisibleElementCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetMaxVisibleElementCount");

	UUIList_GetMaxVisibleElementCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.GetItemCount
// (Native, Public)

void UUIList::GetItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.GetItemCount");

	UUIList_GetItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.RemoveElement
// (Native, Public)

void UUIList::RemoveElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.RemoveElement");

	UUIList_RemoveElement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.ScrollVertical
// (Final, Native, HasOptionalParms, Public)

void UUIList::ScrollVertical()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.ScrollVertical");

	UUIList_ScrollVertical_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.OnOverrideListElementState
// (Public, Delegate)

void UUIList::OnOverrideListElementState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.OnOverrideListElementState");

	UUIList_OnOverrideListElementState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.OnScrollFailed
// (Public, Delegate)

void UUIList::OnScrollFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.OnScrollFailed");

	UUIList_OnScrollFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.ShouldDisableElement
// (Public, Delegate)

void UUIList::ShouldDisableElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.ShouldDisableElement");

	UUIList_ShouldDisableElement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.OnListElementsSorted
// (Public, Delegate)

void UUIList::OnListElementsSorted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.OnListElementsSorted");

	UUIList_OnListElementsSorted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIList.OnSubmitSelection
// (HasOptionalParms, Public, Delegate)

void UUIList::OnSubmitSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIList.OnSubmitSelection");

	UUIList_OnSubmitSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListElementSorter.ResortItems
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListElementSorter::ResortItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListElementSorter.ResortItems");

	UUIComp_ListElementSorter_ResortItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListElementSorter.SortItems
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListElementSorter::SortItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListElementSorter.SortItems");

	UUIComp_ListElementSorter_SortItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListElementSorter.ResetSortColumns
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListElementSorter::ResetSortColumns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListElementSorter.ResetSortColumns");

	UUIComp_ListElementSorter_ResetSortColumns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListElementSorter.OverrideListSort
// (Public, Delegate, HasOutParms)

void UUIComp_ListElementSorter::OverrideListSort()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListElementSorter.OverrideListSort");

	UUIComp_ListElementSorter_OverrideListSort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.CustomizeCell
// (Public, Delegate, HasOutParms)

void UUIComp_ListPresenterBase::CustomizeCell()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.CustomizeCell");

	UUIComp_ListPresenterBase_CustomizeCell_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.AddHighlightCriteria
// (Final, Native, Public)

void UUIComp_ListPresenterBase::AddHighlightCriteria()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.AddHighlightCriteria");

	UUIComp_ListPresenterBase_AddHighlightCriteria_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetMaxElementsPerPage
// (Final, Native, Public)

void UUIComp_ListPresenterBase::GetMaxElementsPerPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetMaxElementsPerPage");

	UUIComp_ListPresenterBase_GetMaxElementsPerPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.SetMaxElementsPerPage
// (Final, Native, Public)

void UUIComp_ListPresenterBase::SetMaxElementsPerPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.SetMaxElementsPerPage");

	UUIComp_ListPresenterBase_SetMaxElementsPerPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetElementValue
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListPresenterBase::GetElementValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetElementValue");

	UUIComp_ListPresenterBase_GetElementValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.EnableColumnHeaderRendering
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListPresenterBase::EnableColumnHeaderRendering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.EnableColumnHeaderRendering");

	UUIComp_ListPresenterBase_EnableColumnHeaderRendering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.ShouldRenderColumnHeaders
// (Final, Native, Public)

void UUIComp_ListPresenterBase::ShouldRenderColumnHeaders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.ShouldRenderColumnHeaders");

	UUIComp_ListPresenterBase_ShouldRenderColumnHeaders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.ShouldAdjustListBounds
// (Final, Native, Public)

void UUIComp_ListPresenterBase::ShouldAdjustListBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.ShouldAdjustListBounds");

	UUIComp_ListPresenterBase_ShouldAdjustListBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeColumnWidth
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIComp_ListPresenterBase::CalculateAutoSizeColumnWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeColumnWidth");

	UUIComp_ListPresenterBase_CalculateAutoSizeColumnWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeRowHeight
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIComp_ListPresenterBase::CalculateAutoSizeRowHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeRowHeight");

	UUIComp_ListPresenterBase_CalculateAutoSizeRowHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetSchemaCellPosition
// (Final, Native, Public)

void UUIComp_ListPresenterBase::GetSchemaCellPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetSchemaCellPosition");

	UUIComp_ListPresenterBase_GetSchemaCellPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.SetSchemaCellSize
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListPresenterBase::SetSchemaCellSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.SetSchemaCellSize");

	UUIComp_ListPresenterBase_SetSchemaCellSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetSchemaCellSize
// (Final, Native, HasOptionalParms, Public)

void UUIComp_ListPresenterBase::GetSchemaCellSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetSchemaCellSize");

	UUIComp_ListPresenterBase_GetSchemaCellSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetSchemaCellCount
// (Final, Native, Public)

void UUIComp_ListPresenterBase::GetSchemaCellCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetSchemaCellCount");

	UUIComp_ListPresenterBase_GetSchemaCellCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenterBase.GetCellSchemaProvider
// (Final, Native, Public)

void UUIComp_ListPresenterBase::GetCellSchemaProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenterBase.GetCellSchemaProvider");

	UUIComp_ListPresenterBase_GetCellSchemaProvider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComp_ListPresenter.FindElementIndex
// (Final, Native, Public)

void UUIComp_ListPresenter::FindElementIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComp_ListPresenter.FindElementIndex");

	UUIComp_ListPresenter_FindElementIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.FindMenuItemIndex
// (Defined, Event, Public)

void UUIContextMenu::FindMenuItemIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.FindMenuItemIndex");

	UUIContextMenu_FindMenuItemIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.GetMenuItem
// (Defined, Event, Public, HasOutParms)

void UUIContextMenu::GetMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.GetMenuItem");

	UUIContextMenu_GetMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.GetAllMenuItems
// (Defined, Event, Public, HasOutParms)

void UUIContextMenu::GetAllMenuItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.GetAllMenuItems");

	UUIContextMenu_GetAllMenuItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.RemoveMenuItemAtIndex
// (Defined, Event, Public)

void UUIContextMenu::RemoveMenuItemAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.RemoveMenuItemAtIndex");

	UUIContextMenu_RemoveMenuItemAtIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.RemoveMenuItem
// (Defined, Event, Public)

void UUIContextMenu::RemoveMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.RemoveMenuItem");

	UUIContextMenu_RemoveMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.ClearMenuItems
// (Defined, Event, Public)

void UUIContextMenu::ClearMenuItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.ClearMenuItems");

	UUIContextMenu_ClearMenuItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.InsertMenuItem
// (Defined, Event, HasOptionalParms, Public)

void UUIContextMenu::InsertMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.InsertMenuItem");

	UUIContextMenu_InsertMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.SetMenuItems
// (Defined, Event, HasOptionalParms, Public)

void UUIContextMenu::SetMenuItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.SetMenuItems");

	UUIContextMenu_SetMenuItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.Close
// (Final, Native, HasOptionalParms, Public)

void UUIContextMenu::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.Close");

	UUIContextMenu_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.Open
// (Final, Native, HasOptionalParms, Public)

void UUIContextMenu::Open()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.Open");

	UUIContextMenu_Open_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIContextMenu.IsActiveContextMenu
// (Final, Native, Public)

void UUIContextMenu::IsActiveContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIContextMenu.IsActiveContextMenu");

	UUIContextMenu_IsActiveContextMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIObjectList.GetElementObjectValue
// (Final, Native, HasOptionalParms, Public)

void UUIObjectList::GetElementObjectValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIObjectList.GetElementObjectValue");

	UUIObjectList_GetElementObjectValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.ClearBoundDataStores
// (Native, Public)

void UUIDataStoreSubscriber::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.ClearBoundDataStores");

	UUIDataStoreSubscriber_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.GetBoundDataStores
// (Native, Public, HasOutParms)

void UUIDataStoreSubscriber::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.GetBoundDataStores");

	UUIDataStoreSubscriber_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.NotifyDataStoreValueUpdated
// (Native, Public)

void UUIDataStoreSubscriber::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.NotifyDataStoreValueUpdated");

	UUIDataStoreSubscriber_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.RefreshSubscriberValue
// (Native, HasOptionalParms, Public)

void UUIDataStoreSubscriber::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.RefreshSubscriberValue");

	UUIDataStoreSubscriber_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.GetDataStoreBinding
// (Native, HasOptionalParms, Public)

void UUIDataStoreSubscriber::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.GetDataStoreBinding");

	UUIDataStoreSubscriber_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStoreSubscriber.SetDataStoreBinding
// (Native, HasOptionalParms, Public)

void UUIDataStoreSubscriber::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStoreSubscriber.SetDataStoreBinding");

	UUIDataStoreSubscriber_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStorePublisher.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIDataStorePublisher::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStorePublisher.SaveSubscriberValue");

	UUIDataStorePublisher_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAnimationSeq.GetSequenceLength
// (Final, Native, Public)

void UUIAnimationSeq::GetSequenceLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAnimationSeq.GetSequenceLength");

	UUIAnimationSeq_GetSequenceLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAnimationSeq.GetTrackLength
// (Final, Native, Public, HasOutParms)

void UUIAnimationSeq::GetTrackLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAnimationSeq.GetTrackLength");

	UUIAnimationSeq_GetTrackLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAnimationSeq.GetFrameLength
// (Final, Native, Public, HasOutParms)

void UUIAnimationSeq::GetFrameLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAnimationSeq.GetFrameLength");

	UUIAnimationSeq_GetFrameLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAnimationSeq.IsValidFrameIndex
// (Final, Native, Public)

void UUIAnimationSeq::IsValidFrameIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAnimationSeq.IsValidFrameIndex");

	UUIAnimationSeq_IsValidFrameIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerDataBase.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayerDataBase::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerDataBase.OnUnregister");

	UUIDataProvider_OnlinePlayerDataBase_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerDataBase.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayerDataBase::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerDataBase.OnRegister");

	UUIDataProvider_OnlinePlayerDataBase_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineClanMates.OnClanMatesReadComplete
// (Defined, Public)

void UUIDataProvider_OnlineClanMates::OnClanMatesReadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineClanMates.OnClanMatesReadComplete");

	UUIDataProvider_OnlineClanMates_OnClanMatesReadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineClanMates.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlineClanMates::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineClanMates.OnRegister");

	UUIDataProvider_OnlineClanMates_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnGameInviteReceived
// (Defined, Public)

void UUIDataProvider_OnlineFriendMessages::OnGameInviteReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnGameInviteReceived");

	UUIDataProvider_OnlineFriendMessages_OnGameInviteReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnLoginChange
// (Defined, Public)

void UUIDataProvider_OnlineFriendMessages::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnLoginChange");

	UUIDataProvider_OnlineFriendMessages_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendMessageReceived
// (Defined, Public)

void UUIDataProvider_OnlineFriendMessages::OnFriendMessageReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendMessageReceived");

	UUIDataProvider_OnlineFriendMessages_OnFriendMessageReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendInviteReceived
// (Defined, Public)

void UUIDataProvider_OnlineFriendMessages::OnFriendInviteReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendInviteReceived");

	UUIDataProvider_OnlineFriendMessages_OnFriendInviteReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.ReadMessages
// (Defined, Public)

void UUIDataProvider_OnlineFriendMessages::ReadMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.ReadMessages");

	UUIDataProvider_OnlineFriendMessages_ReadMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_OnlineFriendMessages::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnUnregister");

	UUIDataProvider_OnlineFriendMessages_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriendMessages.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlineFriendMessages::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriendMessages.OnRegister");

	UUIDataProvider_OnlineFriendMessages_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriends.RefreshFriendsList
// (Defined, Event, Public)

void UUIDataProvider_OnlineFriends::RefreshFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriends.RefreshFriendsList");

	UUIDataProvider_OnlineFriends_RefreshFriendsList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriends.OnLoginChange
// (Defined, Public)

void UUIDataProvider_OnlineFriends::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriends.OnLoginChange");

	UUIDataProvider_OnlineFriends_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriends.OnFriendsReadComplete
// (Defined, Public)

void UUIDataProvider_OnlineFriends::OnFriendsReadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriends.OnFriendsReadComplete");

	UUIDataProvider_OnlineFriends_OnFriendsReadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriends.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_OnlineFriends::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriends.OnUnregister");

	UUIDataProvider_OnlineFriends_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineFriends.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlineFriends::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineFriends.OnRegister");

	UUIDataProvider_OnlineFriends_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePartyChatList.RefreshMembersList
// (Defined, Event, Public)

void UUIDataProvider_OnlinePartyChatList::RefreshMembersList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePartyChatList.RefreshMembersList");

	UUIDataProvider_OnlinePartyChatList_RefreshMembersList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePartyChatList.OnLoginChange
// (Defined, Public)

void UUIDataProvider_OnlinePartyChatList::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePartyChatList.OnLoginChange");

	UUIDataProvider_OnlinePartyChatList_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePartyChatList.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePartyChatList::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePartyChatList.OnUnregister");

	UUIDataProvider_OnlinePartyChatList_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePartyChatList.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePartyChatList::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePartyChatList.OnRegister");

	UUIDataProvider_OnlinePartyChatList_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayers.OnPlayersReadComplete
// (Defined, Public)

void UUIDataProvider_OnlinePlayers::OnPlayersReadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayers.OnPlayersReadComplete");

	UUIDataProvider_OnlinePlayers_OnPlayersReadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayers.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayers::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayers.OnRegister");

	UUIDataProvider_OnlinePlayers_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.OnSettingValueUpdated
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::OnSettingValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.OnSettingValueUpdated");

	UUIDataProvider_OnlinePlayerStorage_OnSettingValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.ArrayProviderPropertyChanged
// (Defined, HasOptionalParms, Public)

void UUIDataProvider_OnlinePlayerStorage::ArrayProviderPropertyChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.ArrayProviderPropertyChanged");

	UUIDataProvider_OnlinePlayerStorage_ArrayProviderPropertyChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.SaveStorageData
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayerStorage::SaveStorageData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.SaveStorageData");

	UUIDataProvider_OnlinePlayerStorage_SaveStorageData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.RefreshStorageData
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::RefreshStorageData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.RefreshStorageData");

	UUIDataProvider_OnlinePlayerStorage_RefreshStorageData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.OnLoginChange
// (Defined, Public, HasDefaults)

void UUIDataProvider_OnlinePlayerStorage::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.OnLoginChange");

	UUIDataProvider_OnlinePlayerStorage_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.OnReadStorageComplete
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::OnReadStorageComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.OnReadStorageComplete");

	UUIDataProvider_OnlinePlayerStorage_OnReadStorageComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayerStorage::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.OnUnregister");

	UUIDataProvider_OnlinePlayerStorage_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_OnlinePlayerStorage::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.OnRegister");

	UUIDataProvider_OnlinePlayerStorage_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.ClearReadCompleteDelegate
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::ClearReadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.ClearReadCompleteDelegate");

	UUIDataProvider_OnlinePlayerStorage_ClearReadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.AddReadCompleteDelegate
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::AddReadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.AddReadCompleteDelegate");

	UUIDataProvider_OnlinePlayerStorage_AddReadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.WriteData
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::WriteData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.WriteData");

	UUIDataProvider_OnlinePlayerStorage_WriteData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlinePlayerStorage.ReadData
// (Defined, Public)

void UUIDataProvider_OnlinePlayerStorage::ReadData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlinePlayerStorage.ReadData");

	UUIDataProvider_OnlinePlayerStorage_ReadData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineProfileSettings.ClearReadCompleteDelegate
// (Defined, Public)

void UUIDataProvider_OnlineProfileSettings::ClearReadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineProfileSettings.ClearReadCompleteDelegate");

	UUIDataProvider_OnlineProfileSettings_ClearReadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineProfileSettings.AddReadCompleteDelegate
// (Defined, Public)

void UUIDataProvider_OnlineProfileSettings::AddReadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineProfileSettings.AddReadCompleteDelegate");

	UUIDataProvider_OnlineProfileSettings_AddReadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineProfileSettings.WriteData
// (Defined, Public)

void UUIDataProvider_OnlineProfileSettings::WriteData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineProfileSettings.WriteData");

	UUIDataProvider_OnlineProfileSettings_WriteData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_OnlineProfileSettings.ReadData
// (Defined, Public)

void UUIDataProvider_OnlineProfileSettings::ReadData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_OnlineProfileSettings.ReadData");

	UUIDataProvider_OnlineProfileSettings_ReadData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.UpdateAchievements
// (Defined, Public)

void UUIDataProvider_PlayerAchievements::UpdateAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.UpdateAchievements");

	UUIDataProvider_PlayerAchievements_UpdateAchievements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.OnLoginChange
// (Defined, Public)

void UUIDataProvider_PlayerAchievements::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.OnLoginChange");

	UUIDataProvider_PlayerAchievements_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.OnUnregister
// (Defined, Event, Public)

void UUIDataProvider_PlayerAchievements::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.OnUnregister");

	UUIDataProvider_PlayerAchievements_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.OnRegister
// (Defined, Event, Public)

void UUIDataProvider_PlayerAchievements::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.OnRegister");

	UUIDataProvider_PlayerAchievements_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementUnlocked
// (Defined, Public)

void UUIDataProvider_PlayerAchievements::OnPlayerAchievementUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementUnlocked");

	UUIDataProvider_PlayerAchievements_OnPlayerAchievementUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementsChanged
// (Defined, Public)

void UUIDataProvider_PlayerAchievements::OnPlayerAchievementsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementsChanged");

	UUIDataProvider_PlayerAchievements_OnPlayerAchievementsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.GetAchievementDetails
// (Defined, Public, HasOutParms)

void UUIDataProvider_PlayerAchievements::GetAchievementDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.GetAchievementDetails");

	UUIDataProvider_PlayerAchievements_GetAchievementDetails_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.GetAchievementIconPathName
// (HasOptionalParms, Public)

void UUIDataProvider_PlayerAchievements::GetAchievementIconPathName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.GetAchievementIconPathName");

	UUIDataProvider_PlayerAchievements_GetAchievementIconPathName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.PopulateAchievementIcons
// (Public)

void UUIDataProvider_PlayerAchievements::PopulateAchievementIcons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.PopulateAchievementIcons");

	UUIDataProvider_PlayerAchievements_PopulateAchievementIcons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.GetMaxTotalGamerScore
// (Final, Native, Public)

void UUIDataProvider_PlayerAchievements::GetMaxTotalGamerScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.GetMaxTotalGamerScore");

	UUIDataProvider_PlayerAchievements_GetMaxTotalGamerScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_PlayerAchievements.GetTotalGamerScore
// (Final, Native, Public)

void UUIDataProvider_PlayerAchievements::GetTotalGamerScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_PlayerAchievements.GetTotalGamerScore");

	UUIDataProvider_PlayerAchievements_GetTotalGamerScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.Registered
// (Defined, Event, Public)

void USceneDataStore::Registered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.Registered");

	USceneDataStore_Registered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.SceneDataFieldChanged
// (Defined, HasOptionalParms, Public)

void USceneDataStore::SceneDataFieldChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.SceneDataFieldChanged");

	USceneDataStore_SceneDataFieldChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.FindCollectionValueIndex
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::FindCollectionValueIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.FindCollectionValueIndex");

	USceneDataStore_FindCollectionValueIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.GetCollectionValue
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::GetCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.GetCollectionValue");

	USceneDataStore_GetCollectionValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.ClearCollectionValueArray
// (Final, Defined, HasOptionalParms, Public)

void USceneDataStore::ClearCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.ClearCollectionValueArray");

	USceneDataStore_ClearCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.ReplaceCollectionValueByIndex
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::ReplaceCollectionValueByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.ReplaceCollectionValueByIndex");

	USceneDataStore_ReplaceCollectionValueByIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.ReplaceCollectionValue
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::ReplaceCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.ReplaceCollectionValue");

	USceneDataStore_ReplaceCollectionValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.RemoveCollectionValueByIndex
// (Final, Defined, HasOptionalParms, Public)

void USceneDataStore::RemoveCollectionValueByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.RemoveCollectionValueByIndex");

	USceneDataStore_RemoveCollectionValueByIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.RemoveCollectionValue
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::RemoveCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.RemoveCollectionValue");

	USceneDataStore_RemoveCollectionValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.InsertCollectionValue
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::InsertCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.InsertCollectionValue");

	USceneDataStore_InsertCollectionValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.SetCollectionValueArray
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::SetCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.SetCollectionValueArray");

	USceneDataStore_SetCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.GetCollectionValueArray
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::GetCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.GetCollectionValueArray");

	USceneDataStore_GetCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.ClearFields
// (Final, Defined, HasOptionalParms, Public)

void USceneDataStore::ClearFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.ClearFields");

	USceneDataStore_ClearFields_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.FindFieldIndex
// (Final, Defined, HasOptionalParms, Public)

void USceneDataStore::FindFieldIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.FindFieldIndex");

	USceneDataStore_FindFieldIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.RemoveField
// (Final, Defined, Public)

void USceneDataStore::RemoveField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.RemoveField");

	USceneDataStore_RemoveField_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SceneDataStore.AddField
// (Final, Defined, HasOptionalParms, Public, HasOutParms)

void USceneDataStore::AddField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SceneDataStore.AddField");

	USceneDataStore_AddField_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.Unregistered
// (Defined, Event, Public)

void UUIDataStore_DynamicResource::Unregistered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.Unregistered");

	UUIDataStore_DynamicResource_Unregistered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.Registered
// (Defined, Event, Public)

void UUIDataStore_DynamicResource::Registered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.Registered");

	UUIDataStore_DynamicResource_Registered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.OnLoginChange
// (Final, Native, Public)

void UUIDataStore_DynamicResource::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.OnLoginChange");

	UUIDataStore_DynamicResource_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.FindProviderIndexByFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_DynamicResource::FindProviderIndexByFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.FindProviderIndexByFieldValue");

	UUIDataStore_DynamicResource_FindProviderIndexByFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.GetProviderFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_DynamicResource::GetProviderFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.GetProviderFieldValue");

	UUIDataStore_DynamicResource_GetProviderFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.GetResourceProviderFields
// (Final, Native, Public, HasOutParms)

void UUIDataStore_DynamicResource::GetResourceProviderFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.GetResourceProviderFields");

	UUIDataStore_DynamicResource_GetResourceProviderFields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.GetResourceProviders
// (Final, Native, Public, HasOutParms)

void UUIDataStore_DynamicResource::GetResourceProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.GetResourceProviders");

	UUIDataStore_DynamicResource_GetResourceProviders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.GetProviderCount
// (Native, Public)

void UUIDataStore_DynamicResource::GetProviderCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.GetProviderCount");

	UUIDataStore_DynamicResource_GetProviderCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.GenerateProviderAccessTag
// (Final, Native, Public)

void UUIDataStore_DynamicResource::GenerateProviderAccessTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.GenerateProviderAccessTag");

	UUIDataStore_DynamicResource_GenerateProviderAccessTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_DynamicResource.FindProviderTypeIndex
// (Final, Native, Public)

void UUIDataStore_DynamicResource::FindProviderTypeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_DynamicResource.FindProviderTypeIndex");

	UUIDataStore_DynamicResource_FindProviderTypeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.PostInit
// (Event, Public)

void UUIDataStore_GameResource::PostInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.PostInit");

	UUIDataStore_GameResource_PostInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.FindProviderIndexByFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_GameResource::FindProviderIndexByFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.FindProviderIndexByFieldValue");

	UUIDataStore_GameResource_FindProviderIndexByFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.GetProviderFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_GameResource::GetProviderFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.GetProviderFieldValue");

	UUIDataStore_GameResource_GetProviderFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.GetResourceProviderFields
// (Final, Native, Public, HasOutParms)

void UUIDataStore_GameResource::GetResourceProviderFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.GetResourceProviderFields");

	UUIDataStore_GameResource_GetResourceProviderFields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.GetResourceProviders
// (Final, Native, Public, HasOutParms)

void UUIDataStore_GameResource::GetResourceProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.GetResourceProviders");

	UUIDataStore_GameResource_GetResourceProviders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.GetProviderCount
// (Native, Public)

void UUIDataStore_GameResource::GetProviderCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.GetProviderCount");

	UUIDataStore_GameResource_GetProviderCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.GenerateProviderAccessTag
// (Final, Native, Public)

void UUIDataStore_GameResource::GenerateProviderAccessTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.GenerateProviderAccessTag");

	UUIDataStore_GameResource_GenerateProviderAccessTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameResource.FindProviderTypeIndex
// (Final, Native, Public)

void UUIDataStore_GameResource::FindProviderTypeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameResource.FindProviderTypeIndex");

	UUIDataStore_GameResource_FindProviderTypeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.Unregistered
// (Defined, Event, Public)

void UUIDataStore_MenuItems::Unregistered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.Unregistered");

	UUIDataStore_MenuItems_Unregistered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.Registered
// (Defined, Event, Public)

void UUIDataStore_MenuItems::Registered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.Registered");

	UUIDataStore_MenuItems_Registered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.OnGameSettingsChanged
// (Defined, HasOptionalParms, Public)

void UUIDataStore_MenuItems::OnGameSettingsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.OnGameSettingsChanged");

	UUIDataStore_MenuItems_OnGameSettingsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.GetSet
// (Native, Public, HasOutParms)

void UUIDataStore_MenuItems::GetSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.GetSet");

	UUIDataStore_MenuItems_GetSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.AppendToSet
// (Native, Public)

void UUIDataStore_MenuItems::AppendToSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.AppendToSet");

	UUIDataStore_MenuItems_AppendToSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_MenuItems.ClearSet
// (Native, Public)

void UUIDataStore_MenuItems::ClearSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_MenuItems.ClearSet");

	UUIDataStore_MenuItems_ClearSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameState.NotifyGameSessionEnded
// (Defined, Public)

void UUIDataStore_GameState::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameState.NotifyGameSessionEnded");

	UUIDataStore_GameState_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_GameState.OnRefreshDataFieldValue
// (Public, Delegate)

void UUIDataStore_GameState::OnRefreshDataFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_GameState.OnRefreshDataFieldValue");

	UUIDataStore_GameState_OnRefreshDataFieldValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.OnAddTeamProvider
// (Public, Delegate)

void UCurrentGameDataStore::OnAddTeamProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.OnAddTeamProvider");

	UCurrentGameDataStore_OnAddTeamProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.NotifyGameSessionEnded
// (Defined, Public)

void UCurrentGameDataStore::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.NotifyGameSessionEnded");

	UCurrentGameDataStore_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.RefreshTeamDataProviders
// (Defined, Public)

void UCurrentGameDataStore::RefreshTeamDataProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.RefreshTeamDataProviders");

	UCurrentGameDataStore_RefreshTeamDataProviders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.RefreshPlayerDataProviders
// (Defined, Public)

void UCurrentGameDataStore::RefreshPlayerDataProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.RefreshPlayerDataProviders");

	UCurrentGameDataStore_RefreshPlayerDataProviders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.NotifyTeamChange
// (Defined, Public)

void UCurrentGameDataStore::NotifyTeamChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.NotifyTeamChange");

	UCurrentGameDataStore_NotifyTeamChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.NotifyPlayersChanged
// (Defined, Public)

void UCurrentGameDataStore::NotifyPlayersChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.NotifyPlayersChanged");

	UCurrentGameDataStore_NotifyPlayersChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.Timer
// (Defined, Public)

void UCurrentGameDataStore::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.Timer");

	UCurrentGameDataStore_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.TeamDataProviderPropertyChange
// (Defined, HasOptionalParms, Public)

void UCurrentGameDataStore::TeamDataProviderPropertyChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.TeamDataProviderPropertyChange");

	UCurrentGameDataStore_TeamDataProviderPropertyChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.PlayerDataProviderPropertyChange
// (Defined, HasOptionalParms, Public)

void UCurrentGameDataStore::PlayerDataProviderPropertyChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.PlayerDataProviderPropertyChange");

	UCurrentGameDataStore_PlayerDataProviderPropertyChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.ClearDataProviders
// (Final, Defined, Public)

void UCurrentGameDataStore::ClearDataProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.ClearDataProviders");

	UCurrentGameDataStore_ClearDataProviders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.GetTeamDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::GetTeamDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.GetTeamDataProvider");

	UCurrentGameDataStore_GetTeamDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.GetPlayerDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::GetPlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.GetPlayerDataProvider");

	UCurrentGameDataStore_GetPlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.FindTeamDataProviderIndex
// (Final, Defined, Public)

void UCurrentGameDataStore::FindTeamDataProviderIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.FindTeamDataProviderIndex");

	UCurrentGameDataStore_FindTeamDataProviderIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.FindPlayerDataProviderIndex
// (Final, Defined, Public)

void UCurrentGameDataStore::FindPlayerDataProviderIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.FindPlayerDataProviderIndex");

	UCurrentGameDataStore_FindPlayerDataProviderIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.RemoveTeamDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::RemoveTeamDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.RemoveTeamDataProvider");

	UCurrentGameDataStore_RemoveTeamDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.AddTeamDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::AddTeamDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.AddTeamDataProvider");

	UCurrentGameDataStore_AddTeamDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.RemovePlayerDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::RemovePlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.RemovePlayerDataProvider");

	UCurrentGameDataStore_RemovePlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.AddPlayerDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::AddPlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.AddPlayerDataProvider");

	UCurrentGameDataStore_AddPlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CurrentGameDataStore.CreateGameDataProvider
// (Final, Defined, Public)

void UCurrentGameDataStore::CreateGameDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CurrentGameDataStore.CreateGameDataProvider");

	UCurrentGameDataStore_CreateGameDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerOwnerDataStore.NotifyGameSessionEnded
// (Defined, Public)

void UPlayerOwnerDataStore::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerOwnerDataStore.NotifyGameSessionEnded");

	UPlayerOwnerDataStore_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerOwnerDataStore.ClearDataProviders
// (Final, Defined, Public)

void UPlayerOwnerDataStore::ClearDataProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerOwnerDataStore.ClearDataProviders");

	UPlayerOwnerDataStore_ClearDataProviders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerOwnerDataStore.SetPlayerDataProvider
// (Defined, Public)

void UPlayerOwnerDataStore::SetPlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerOwnerDataStore.SetPlayerDataProvider");

	UPlayerOwnerDataStore_SetPlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetOnlinePlaylistProvider
// (Defined, Static, HasOptionalParms, Public, HasOutParms, HasDefaults)

void UUIDataStore_OnlinePlaylists::STATIC_GetOnlinePlaylistProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetOnlinePlaylistProvider");

	UUIDataStore_OnlinePlaylists_GetOnlinePlaylistProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetPlaylistProvider
// (Final, Native, Public, HasOutParms)

void UUIDataStore_OnlinePlaylists::GetPlaylistProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetPlaylistProvider");

	UUIDataStore_OnlinePlaylists_GetPlaylistProvider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.FindProviderIndexByFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_OnlinePlaylists::FindProviderIndexByFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.FindProviderIndexByFieldValue");

	UUIDataStore_OnlinePlaylists_FindProviderIndexByFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetProviderFieldValue
// (Final, Native, Public, HasOutParms)

void UUIDataStore_OnlinePlaylists::GetProviderFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetProviderFieldValue");

	UUIDataStore_OnlinePlaylists_GetProviderFieldValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetResourceProviderFields
// (Final, Native, Public, HasOutParms)

void UUIDataStore_OnlinePlaylists::GetResourceProviderFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetResourceProviderFields");

	UUIDataStore_OnlinePlaylists_GetResourceProviderFields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetResourceProviders
// (Final, Native, Public, HasOutParms)

void UUIDataStore_OnlinePlaylists::GetResourceProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetResourceProviders");

	UUIDataStore_OnlinePlaylists_GetResourceProviders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlaylists.GetProviderCount
// (Native, Public)

void UUIDataStore_OnlinePlaylists::GetProviderCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlaylists.GetProviderCount");

	UUIDataStore_OnlinePlaylists_GetProviderCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_Registry.GetDataProvider
// (Final, Defined, Public)

void UUIDataStore_Registry::GetDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_Registry.GetDataProvider");

	UUIDataStore_Registry_GetDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.ClearAllSearchResults
// (Defined, Public)

void UUIDataStore_OnlineGameSearch::ClearAllSearchResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.ClearAllSearchResults");

	UUIDataStore_OnlineGameSearch_ClearAllSearchResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.MoveToPrevious
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSearch::MoveToPrevious()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.MoveToPrevious");

	UUIDataStore_OnlineGameSearch_MoveToPrevious_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.MoveToNext
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSearch::MoveToNext()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.MoveToNext");

	UUIDataStore_OnlineGameSearch_MoveToNext_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByName
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSearch::SetCurrentByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByName");

	UUIDataStore_OnlineGameSearch_SetCurrentByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByIndex
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSearch::SetCurrentByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByIndex");

	UUIDataStore_OnlineGameSearch_SetCurrentByIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.FindSearchConfigurationIndex
// (Defined, Public)

void UUIDataStore_OnlineGameSearch::FindSearchConfigurationIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.FindSearchConfigurationIndex");

	UUIDataStore_OnlineGameSearch_FindSearchConfigurationIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.GetActiveGameSearch
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSearch::GetActiveGameSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.GetActiveGameSearch");

	UUIDataStore_OnlineGameSearch_GetActiveGameSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.GetCurrentGameSearch
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSearch::GetCurrentGameSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.GetCurrentGameSearch");

	UUIDataStore_OnlineGameSearch_GetCurrentGameSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.BuildSearchResults
// (Native, Public)

void UUIDataStore_OnlineGameSearch::BuildSearchResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.BuildSearchResults");

	UUIDataStore_OnlineGameSearch_BuildSearchResults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.ShowHostGamercard
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSearch::ShowHostGamercard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.ShowHostGamercard");

	UUIDataStore_OnlineGameSearch_ShowHostGamercard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.GetSearchResultFromIndex
// (Defined, Event, Public, HasOutParms)

void UUIDataStore_OnlineGameSearch::GetSearchResultFromIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.GetSearchResultFromIndex");

	UUIDataStore_OnlineGameSearch_GetSearchResultFromIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.OnSearchComplete
// (Defined, Public)

void UUIDataStore_OnlineGameSearch::OnSearchComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.OnSearchComplete");

	UUIDataStore_OnlineGameSearch_OnSearchComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.OverrideQuerySubmission
// (Defined, Protected)

void UUIDataStore_OnlineGameSearch::OverrideQuerySubmission()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.OverrideQuerySubmission");

	UUIDataStore_OnlineGameSearch_OverrideQuerySubmission_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.SubmitGameSearch
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSearch::SubmitGameSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.SubmitGameSearch");

	UUIDataStore_OnlineGameSearch_SubmitGameSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.InvalidateCurrentSearchResults
// (Defined, Public)

void UUIDataStore_OnlineGameSearch::InvalidateCurrentSearchResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.InvalidateCurrentSearchResults");

	UUIDataStore_OnlineGameSearch_InvalidateCurrentSearchResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSearch.Init
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSearch::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSearch.Init");

	UUIDataStore_OnlineGameSearch_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerStorage
// (Defined, Event, Static, Public)

void UUIDataStore_OnlinePlayerData::STATIC_GetCachedPlayerStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerStorage");

	UUIDataStore_OnlinePlayerData_GetCachedPlayerStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerProfile
// (Defined, Event, Static, Public)

void UUIDataStore_OnlinePlayerData::STATIC_GetCachedPlayerProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerProfile");

	UUIDataStore_OnlinePlayerData_GetCachedPlayerProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.SaveProfileData
// (Defined, Event, Public)

void UUIDataStore_OnlinePlayerData::SaveProfileData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.SaveProfileData");

	UUIDataStore_OnlinePlayerData_SaveProfileData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnDownloadableContentQueryDone
// (Defined, Public)

void UUIDataStore_OnlinePlayerData::OnDownloadableContentQueryDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnDownloadableContentQueryDone");

	UUIDataStore_OnlinePlayerData_OnDownloadableContentQueryDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.ClearDelegates
// (Defined, Public)

void UUIDataStore_OnlinePlayerData::ClearDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.ClearDelegates");

	UUIDataStore_OnlinePlayerData_ClearDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.RegisterDelegates
// (Defined, Public)

void UUIDataStore_OnlinePlayerData::RegisterDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.RegisterDelegates");

	UUIDataStore_OnlinePlayerData_RegisterDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnPlayerDataChange
// (Defined, Public)

void UUIDataStore_OnlinePlayerData::OnPlayerDataChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnPlayerDataChange");

	UUIDataStore_OnlinePlayerData_OnPlayerDataChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnLoginChange
// (Defined, Public)

void UUIDataStore_OnlinePlayerData::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnLoginChange");

	UUIDataStore_OnlinePlayerData_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnUnregister
// (Defined, Event, Public)

void UUIDataStore_OnlinePlayerData::OnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnUnregister");

	UUIDataStore_OnlinePlayerData_OnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnRegister
// (Defined, Event, Public)

void UUIDataStore_OnlinePlayerData::OnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnRegister");

	UUIDataStore_OnlinePlayerData_OnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlinePlayerData.OnSettingProviderChanged
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_OnlinePlayerData::OnSettingProviderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlinePlayerData.OnSettingProviderChanged");

	UUIDataStore_OnlinePlayerData_OnSettingProviderChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.SortResultsByRank
// (Native, Public)

void UUIDataStore_OnlineStats::SortResultsByRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.SortResultsByRank");

	UUIDataStore_OnlineStats_SortResultsByRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.OnReadComplete
// (Defined, Public)

void UUIDataStore_OnlineStats::OnReadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.OnReadComplete");

	UUIDataStore_OnlineStats_OnReadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.ShowGamercard
// (Defined, Event, Public, HasDefaults)

void UUIDataStore_OnlineStats::ShowGamercard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.ShowGamercard");

	UUIDataStore_OnlineStats_ShowGamercard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.RefreshStats
// (Defined, Event, Public, HasDefaults)

void UUIDataStore_OnlineStats::RefreshStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.RefreshStats");

	UUIDataStore_OnlineStats_RefreshStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.SetStatsReadInfo
// (Defined, Public)

void UUIDataStore_OnlineStats::SetStatsReadInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.SetStatsReadInfo");

	UUIDataStore_OnlineStats_SetStatsReadInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineStats.Init
// (Defined, Event, Public)

void UUIDataStore_OnlineStats::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineStats.Init");

	UUIDataStore_OnlineStats_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.Unregistered
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::Unregistered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.Unregistered");

	UUIDataStore_OnlineGameSettings_Unregistered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.Registered
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::Registered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.Registered");

	UUIDataStore_OnlineGameSettings_Registered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.MoveToPrevious
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::MoveToPrevious()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.MoveToPrevious");

	UUIDataStore_OnlineGameSettings_MoveToPrevious_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.MoveToNext
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::MoveToNext()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.MoveToNext");

	UUIDataStore_OnlineGameSettings_MoveToNext_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByName
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::SetCurrentByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByName");

	UUIDataStore_OnlineGameSettings_SetCurrentByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByIndex
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::SetCurrentByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByIndex");

	UUIDataStore_OnlineGameSettings_SetCurrentByIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.GetCurrentProvider
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::GetCurrentProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.GetCurrentProvider");

	UUIDataStore_OnlineGameSettings_GetCurrentProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.GetCurrentGameSettings
// (Defined, Event, Public)

void UUIDataStore_OnlineGameSettings::GetCurrentGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.GetCurrentGameSettings");

	UUIDataStore_OnlineGameSettings_GetCurrentGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.CreateGame
// (Defined, Event, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSettings::CreateGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.CreateGame");

	UUIDataStore_OnlineGameSettings_CreateGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_OnlineGameSettings.OnSettingProviderChanged
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_OnlineGameSettings::OnSettingProviderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_OnlineGameSettings.OnSettingProviderChanged");

	UUIDataStore_OnlineGameSettings_OnSettingProviderChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_SessionSettings.NotifyGameSessionEnded
// (Defined, Public)

void UUIDataStore_SessionSettings::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_SessionSettings.NotifyGameSessionEnded");

	UUIDataStore_SessionSettings_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_SessionSettings.ClearDataProviders
// (Final, Defined, Public)

void UUIDataStore_SessionSettings::ClearDataProviders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_SessionSettings.ClearDataProviders");

	UUIDataStore_SessionSettings_ClearDataProviders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.HasAliasMappingForPlatform
// (Final, Native, Public)

void UUIDataStore_InputAlias::HasAliasMappingForPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.HasAliasMappingForPlatform");

	UUIDataStore_InputAlias_HasAliasMappingForPlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.FindInputAliasIndex
// (Final, Native, Public)

void UUIDataStore_InputAlias::FindInputAliasIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.FindInputAliasIndex");

	UUIDataStore_InputAlias_FindInputAliasIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyDataByIndex
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDataStore_InputAlias::GetAliasInputKeyDataByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyDataByIndex");

	UUIDataStore_InputAlias_GetAliasInputKeyDataByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyData
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDataStore_InputAlias::GetAliasInputKeyData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyData");

	UUIDataStore_InputAlias_GetAliasInputKeyData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyNameByIndex
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_InputAlias::GetAliasInputKeyNameByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyNameByIndex");

	UUIDataStore_InputAlias_GetAliasInputKeyNameByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyName
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_InputAlias::GetAliasInputKeyName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyName");

	UUIDataStore_InputAlias_GetAliasInputKeyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasFontMarkupByIndex
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_InputAlias::GetAliasFontMarkupByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasFontMarkupByIndex");

	UUIDataStore_InputAlias_GetAliasFontMarkupByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_InputAlias.GetAliasFontMarkup
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_InputAlias::GetAliasFontMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_InputAlias.GetAliasFontMarkup");

	UUIDataStore_InputAlias_GetAliasFontMarkup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_StringAliasMap.GetStringWithFieldName
// (Native, Public, HasOutParms)

void UUIDataStore_StringAliasMap::GetStringWithFieldName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_StringAliasMap.GetStringWithFieldName");

	UUIDataStore_StringAliasMap_GetStringWithFieldName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_StringAliasMap.FindMappingWithFieldName
// (Final, Native, HasOptionalParms, Public)

void UUIDataStore_StringAliasMap::FindMappingWithFieldName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_StringAliasMap.FindMappingWithFieldName");

	UUIDataStore_StringAliasMap_FindMappingWithFieldName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataStore_StringAliasMap.GetPlayerOwner
// (Final, Native, Public)

void UUIDataStore_StringAliasMap::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataStore_StringAliasMap.GetPlayerOwner");

	UUIDataStore_StringAliasMap_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.FindCollectionValueIndex
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::FindCollectionValueIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.FindCollectionValueIndex");

	UUIDynamicFieldProvider_FindCollectionValueIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.GetCollectionValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::GetCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.GetCollectionValue");

	UUIDynamicFieldProvider_GetCollectionValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.ClearCollectionValueArray
// (Final, Native, HasOptionalParms, Public)

void UUIDynamicFieldProvider::ClearCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.ClearCollectionValueArray");

	UUIDynamicFieldProvider_ClearCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.ReplaceCollectionValueByIndex
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::ReplaceCollectionValueByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.ReplaceCollectionValueByIndex");

	UUIDynamicFieldProvider_ReplaceCollectionValueByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.ReplaceCollectionValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::ReplaceCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.ReplaceCollectionValue");

	UUIDynamicFieldProvider_ReplaceCollectionValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.RemoveCollectionValueByIndex
// (Final, Native, HasOptionalParms, Public)

void UUIDynamicFieldProvider::RemoveCollectionValueByIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.RemoveCollectionValueByIndex");

	UUIDynamicFieldProvider_RemoveCollectionValueByIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.RemoveCollectionValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::RemoveCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.RemoveCollectionValue");

	UUIDynamicFieldProvider_RemoveCollectionValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.InsertCollectionValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::InsertCollectionValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.InsertCollectionValue");

	UUIDynamicFieldProvider_InsertCollectionValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.SetCollectionValueArray
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::SetCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.SetCollectionValueArray");

	UUIDynamicFieldProvider_SetCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.GetCollectionValueArray
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::GetCollectionValueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.GetCollectionValueArray");

	UUIDynamicFieldProvider_GetCollectionValueArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.GetCollectionValueSchema
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::GetCollectionValueSchema()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.GetCollectionValueSchema");

	UUIDynamicFieldProvider_GetCollectionValueSchema_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.SavePersistentProviderData
// (Final, Native, Public)

void UUIDynamicFieldProvider::SavePersistentProviderData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.SavePersistentProviderData");

	UUIDynamicFieldProvider_SavePersistentProviderData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.SetField
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::SetField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.SetField");

	UUIDynamicFieldProvider_SetField_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.GetField
// (Final, Native, Public, HasOutParms)

void UUIDynamicFieldProvider::GetField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.GetField");

	UUIDynamicFieldProvider_GetField_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.ClearFields
// (Final, Native, HasOptionalParms, Public)

void UUIDynamicFieldProvider::ClearFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.ClearFields");

	UUIDynamicFieldProvider_ClearFields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.FindFieldIndex
// (Final, Native, HasOptionalParms, Public)

void UUIDynamicFieldProvider::FindFieldIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.FindFieldIndex");

	UUIDynamicFieldProvider_FindFieldIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.RemoveField
// (Final, Native, Public)

void UUIDynamicFieldProvider::RemoveField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.RemoveField");

	UUIDynamicFieldProvider_RemoveField_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.AddField
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIDynamicFieldProvider::AddField()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.AddField");

	UUIDynamicFieldProvider_AddField_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicFieldProvider.InitializeRuntimeFields
// (Native, Public)

void UUIDynamicFieldProvider::InitializeRuntimeFields()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicFieldProvider.InitializeRuntimeFields");

	UUIDynamicFieldProvider_InitializeRuntimeFields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIPropertyDataProvider.GetCustomPropertyValue
// (Event, HasOptionalParms, Public, HasOutParms)

void UUIPropertyDataProvider::GetCustomPropertyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIPropertyDataProvider.GetCustomPropertyValue");

	UUIPropertyDataProvider_GetCustomPropertyValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIPropertyDataProvider.CanSupportComplexPropertyType
// (Public, Delegate)

void UUIPropertyDataProvider::CanSupportComplexPropertyType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIPropertyDataProvider.CanSupportComplexPropertyType");

	UUIPropertyDataProvider_CanSupportComplexPropertyType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.CleanupDataProvider
// (Defined, Public)

void UUIDynamicDataProvider::CleanupDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.CleanupDataProvider");

	UUIDynamicDataProvider_CleanupDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.GetDataSource
// (Final, Defined, Public)

void UUIDynamicDataProvider::GetDataSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.GetDataSource");

	UUIDynamicDataProvider_GetDataSource_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.IsValidDataSourceClass
// (Defined, Event, Public)

void UUIDynamicDataProvider::IsValidDataSourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.IsValidDataSourceClass");

	UUIDynamicDataProvider_IsValidDataSourceClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.ProviderInstanceUnbound
// (Event, Public)

void UUIDynamicDataProvider::ProviderInstanceUnbound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.ProviderInstanceUnbound");

	UUIDynamicDataProvider_ProviderInstanceUnbound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.ProviderInstanceBound
// (Event, Public)

void UUIDynamicDataProvider::ProviderInstanceBound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.ProviderInstanceBound");

	UUIDynamicDataProvider_ProviderInstanceBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.UnbindProviderInstance
// (Final, Native, Public)

void UUIDynamicDataProvider::UnbindProviderInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.UnbindProviderInstance");

	UUIDynamicDataProvider_UnbindProviderInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDynamicDataProvider.BindProviderInstance
// (Final, Native, Public)

void UUIDynamicDataProvider::BindProviderInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDynamicDataProvider.BindProviderInstance");

	UUIDynamicDataProvider_BindProviderInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameInfoDataProvider.ProviderInstanceBound
// (Defined, Event, Public)

void UGameInfoDataProvider::ProviderInstanceBound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameInfoDataProvider.ProviderInstanceBound");

	UGameInfoDataProvider_ProviderInstanceBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PowerupDataProvider.IsValidDataSourceClass
// (Defined, Event, Public)

void UPowerupDataProvider::IsValidDataSourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PowerupDataProvider.IsValidDataSourceClass");

	UPowerupDataProvider_IsValidDataSourceClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerOwnerDataProvider.CleanupDataProvider
// (Defined, Public)

void UPlayerOwnerDataProvider::CleanupDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerOwnerDataProvider.CleanupDataProvider");

	UPlayerOwnerDataProvider_CleanupDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerOwnerDataProvider.SetPlayerDataProvider
// (Defined, Public)

void UPlayerOwnerDataProvider::SetPlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerOwnerDataProvider.SetPlayerDataProvider");

	UPlayerOwnerDataProvider_SetPlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamDataProvider.RegeneratePlayerLists
// (Defined, Public)

void UTeamDataProvider::RegeneratePlayerLists()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamDataProvider.RegeneratePlayerLists");

	UTeamDataProvider_RegeneratePlayerLists_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_Settings.OnSettingValueUpdated
// (Defined, Public)

void UUIDataProvider_Settings::OnSettingValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_Settings.OnSettingValueUpdated");

	UUIDataProvider_Settings_OnSettingValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_Settings.ArrayProviderPropertyChanged
// (Defined, HasOptionalParms, Public)

void UUIDataProvider_Settings::ArrayProviderPropertyChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_Settings.ArrayProviderPropertyChanged");

	UUIDataProvider_Settings_ArrayProviderPropertyChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_Settings.ProviderInstanceUnbound
// (Defined, Event, Public)

void UUIDataProvider_Settings::ProviderInstanceUnbound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_Settings.ProviderInstanceUnbound");

	UUIDataProvider_Settings_ProviderInstanceUnbound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_Settings.ProviderInstanceBound
// (Defined, Event, Public)

void UUIDataProvider_Settings::ProviderInstanceBound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_Settings.ProviderInstanceBound");

	UUIDataProvider_Settings_ProviderInstanceBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceDataProvider.InitializeProvider
// (Event, Public)

void UUIResourceDataProvider::InitializeProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceDataProvider.InitializeProvider");

	UUIResourceDataProvider_InitializeProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIDataProvider_MenuItem.IsFiltered
// (Final, Native, Public)

void UUIDataProvider_MenuItem::IsFiltered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIDataProvider_MenuItem.IsFiltered");

	UUIDataProvider_MenuItem_IsFiltered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISettingsProvider.CleanupDataProvider
// (Defined, Public)

void UUISettingsProvider::CleanupDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISettingsProvider.CleanupDataProvider");

	UUISettingsProvider_CleanupDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISettingsProvider.OnModifiedProperty
// (Public)

void UUISettingsProvider::OnModifiedProperty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISettingsProvider.OnModifiedProperty");

	UUISettingsProvider_OnModifiedProperty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISettingsProvider.SavePropertyValue
// (Public)

void UUISettingsProvider::SavePropertyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISettingsProvider.SavePropertyValue");

	UUISettingsProvider_SavePropertyValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISettingsProvider.LoadPropertyValue
// (Public)

void UUISettingsProvider::LoadPropertyValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISettingsProvider.LoadPropertyValue");

	UUISettingsProvider_LoadPropertyValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.CleanupDataProvider
// (Defined, Public)

void USessionSettingsProvider::CleanupDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.CleanupDataProvider");

	USessionSettingsProvider_CleanupDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.IsValidDataSourceClass
// (Defined, Event, Public)

void USessionSettingsProvider::IsValidDataSourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.IsValidDataSourceClass");

	USessionSettingsProvider_IsValidDataSourceClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.ProviderClientUnbound
// (Event, Public)

void USessionSettingsProvider::ProviderClientUnbound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.ProviderClientUnbound");

	USessionSettingsProvider_ProviderClientUnbound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.ProviderClientBound
// (Event, Public)

void USessionSettingsProvider::ProviderClientBound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.ProviderClientBound");

	USessionSettingsProvider_ProviderClientBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.UnbindProviderClient
// (Final, Native, Public)

void USessionSettingsProvider::UnbindProviderClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.UnbindProviderClient");

	USessionSettingsProvider_UnbindProviderClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SessionSettingsProvider.BindProviderClient
// (Final, Native, Public)

void USessionSettingsProvider::BindProviderClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SessionSettingsProvider.BindProviderClient");

	USessionSettingsProvider_BindProviderClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.ReplaceProviderCollection
// (Defined, Public, HasOutParms)

void UUIResourceCombinationProvider::ReplaceProviderCollection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.ReplaceProviderCollection");

	UUIResourceCombinationProvider_ReplaceProviderCollection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.ReplaceProviderValue
// (Defined, Public, HasOutParms)

void UUIResourceCombinationProvider::ReplaceProviderValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.ReplaceProviderValue");

	UUIResourceCombinationProvider_ReplaceProviderValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.ClearProviderReferences
// (Defined, Public)

void UUIResourceCombinationProvider::ClearProviderReferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.ClearProviderReferences");

	UUIResourceCombinationProvider_ClearProviderReferences_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetCellFieldValue
// (Defined, Event, HasOptionalParms, Public, HasOutParms)

void UUIResourceCombinationProvider::GetCellFieldValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetCellFieldValue");

	UUIResourceCombinationProvider_GetCellFieldValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetCellFieldType
// (Defined, Event, Public, HasOutParms)

void UUIResourceCombinationProvider::GetCellFieldType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetCellFieldType");

	UUIResourceCombinationProvider_GetCellFieldType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetElementCellTags
// (Defined, Event, HasOptionalParms, Public, HasOutParms)

void UUIResourceCombinationProvider::GetElementCellTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetElementCellTags");

	UUIResourceCombinationProvider_GetElementCellTags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetElementCellValueProvider
// (Defined, Event, Public, HasOutParms)

void UUIResourceCombinationProvider::GetElementCellValueProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetElementCellValueProvider");

	UUIResourceCombinationProvider_GetElementCellValueProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetElementCellSchemaProvider
// (Defined, Event, Public, HasOutParms)

void UUIResourceCombinationProvider::GetElementCellSchemaProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetElementCellSchemaProvider");

	UUIResourceCombinationProvider_GetElementCellSchemaProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.IsElementEnabled
// (Defined, Event, Public)

void UUIResourceCombinationProvider::IsElementEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.IsElementEnabled");

	UUIResourceCombinationProvider_IsElementEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetListElements
// (Defined, Event, Public, HasOutParms)

void UUIResourceCombinationProvider::GetListElements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetListElements");

	UUIResourceCombinationProvider_GetListElements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetElementCount
// (Defined, Event, Public)

void UUIResourceCombinationProvider::GetElementCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetElementCount");

	UUIResourceCombinationProvider_GetElementCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.GetElementProviderTags
// (Defined, Event, Public)

void UUIResourceCombinationProvider::GetElementProviderTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.GetElementProviderTags");

	UUIResourceCombinationProvider_GetElementProviderTags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIResourceCombinationProvider.InitializeProvider
// (Defined, Event, Public)

void UUIResourceCombinationProvider::InitializeProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIResourceCombinationProvider.InitializeProvider");

	UUIResourceCombinationProvider_InitializeProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.FindUIAnimation
// (Final, Native, Public)

void UGameUISceneClient::FindUIAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.FindUIAnimation");

	UGameUISceneClient_FindUIAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ShowMenuProgression
// (Defined, Exec, Public)

void UGameUISceneClient::ShowMenuProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ShowMenuProgression");

	UGameUISceneClient_ShowMenuProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ToggleDebugInput
// (Defined, Exec, HasOptionalParms, Public)

void UGameUISceneClient::ToggleDebugInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ToggleDebugInput");

	UGameUISceneClient_ToggleDebugInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ShowMenuStates
// (Defined, Exec, Public)

void UGameUISceneClient::ShowMenuStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ShowMenuStates");

	UGameUISceneClient_ShowMenuStates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ShowRenderBounds
// (Defined, Exec, Public)

void UGameUISceneClient::ShowRenderBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ShowRenderBounds");

	UGameUISceneClient_ShowRenderBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ShowDockingStacks
// (Defined, Exec, Public)

void UGameUISceneClient::ShowDockingStacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ShowDockingStacks");

	UGameUISceneClient_ShowDockingStacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ClearUIMessageScene
// (Final, Defined, Static, HasOptionalParms, Public)

void UGameUISceneClient::STATIC_ClearUIMessageScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ClearUIMessageScene");

	UGameUISceneClient_ClearUIMessageScene_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ShowUIMessage
// (Defined, Static, HasOptionalParms, Public, HasOutParms)

void UGameUISceneClient::STATIC_ShowUIMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ShowUIMessage");

	UGameUISceneClient_ShowUIMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.CreateUIMessageBox
// (Defined, Static, HasOptionalParms, Public)

void UGameUISceneClient::STATIC_CreateUIMessageBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.CreateUIMessageBox");

	UGameUISceneClient_CreateUIMessageBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.RestoreMenuProgression
// (Defined, HasOptionalParms, Public)

void UGameUISceneClient::RestoreMenuProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.RestoreMenuProgression");

	UGameUISceneClient_RestoreMenuProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.ClearMenuProgression
// (Defined, Public)

void UGameUISceneClient::ClearMenuProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.ClearMenuProgression");

	UGameUISceneClient_ClearMenuProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.SaveMenuProgression
// (Defined, Public)

void UGameUISceneClient::SaveMenuProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.SaveMenuProgression");

	UGameUISceneClient_SaveMenuProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyStorageDeviceChanged
// (Defined, Public)

void UGameUISceneClient::NotifyStorageDeviceChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyStorageDeviceChanged");

	UGameUISceneClient_NotifyStorageDeviceChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyPlayerRemoved
// (Defined, Public)

void UGameUISceneClient::NotifyPlayerRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyPlayerRemoved");

	UGameUISceneClient_NotifyPlayerRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyPlayerAdded
// (Defined, Public)

void UGameUISceneClient::NotifyPlayerAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyPlayerAdded");

	UGameUISceneClient_NotifyPlayerAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyLinkStatusChanged
// (Defined, Public)

void UGameUISceneClient::NotifyLinkStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyLinkStatusChanged");

	UGameUISceneClient_NotifyLinkStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyOnlineServiceStatusChanged
// (Defined, Public)

void UGameUISceneClient::NotifyOnlineServiceStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyOnlineServiceStatusChanged");

	UGameUISceneClient_NotifyOnlineServiceStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyControllerChanged
// (Defined, Public)

void UGameUISceneClient::NotifyControllerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyControllerChanged");

	UGameUISceneClient_NotifyControllerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.OnLoginChange
// (Defined, Public)

void UGameUISceneClient::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.OnLoginChange");

	UGameUISceneClient_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyGameSessionEnded
// (Defined, Public)

void UGameUISceneClient::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyGameSessionEnded");

	UGameUISceneClient_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.NotifyClientTravel
// (Defined, Public)

void UGameUISceneClient::NotifyClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.NotifyClientTravel");

	UGameUISceneClient_NotifyClientTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.IsAllowedToModifyPlayerCount
// (Defined, Public)

void UGameUISceneClient::IsAllowedToModifyPlayerCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.IsAllowedToModifyPlayerCount");

	UGameUISceneClient_IsAllowedToModifyPlayerCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.SynchronizePlayers
// (Defined, Event, HasOptionalParms, Public)

void UGameUISceneClient::SynchronizePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.SynchronizePlayers");

	UGameUISceneClient_SynchronizePlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.InitializeSceneClient
// (Defined, Event, Public)

void UGameUISceneClient::InitializeSceneClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.InitializeSceneClient");

	UGameUISceneClient_InitializeSceneClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.CanShowToolTips
// (Defined, Event, Public)

void UGameUISceneClient::CanShowToolTips()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.CanShowToolTips");

	UGameUISceneClient_CanShowToolTips_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.PauseGame
// (Defined, Event, HasOptionalParms, Public)

void UGameUISceneClient::PauseGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.PauseGame");

	UGameUISceneClient_PauseGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.SwapScenesInStack
// (Native, Public)

void UGameUISceneClient::SwapScenesInStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.SwapScenesInStack");

	UGameUISceneClient_SwapScenesInStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.SetActiveControl
// (Native, HasOptionalParms, Public)

void UGameUISceneClient::SetActiveControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.SetActiveControl");

	UGameUISceneClient_SetActiveControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.CanUnpauseInternalUI
// (Final, Native, Public)

void UGameUISceneClient::CanUnpauseInternalUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.CanUnpauseInternalUI");

	UGameUISceneClient_CanUnpauseInternalUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.RequestCursorRenderUpdate
// (Final, Native, Public)

void UGameUISceneClient::RequestCursorRenderUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.RequestCursorRenderUpdate");

	UGameUISceneClient_RequestCursorRenderUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.RequestInputProcessingUpdate
// (Final, Native, Public)

void UGameUISceneClient::RequestInputProcessingUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.RequestInputProcessingUpdate");

	UGameUISceneClient_RequestInputProcessingUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.AllActiveScenes
// (Final, Iterator, Native, HasOptionalParms, Public, HasOutParms)

void UGameUISceneClient::AllActiveScenes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.AllActiveScenes");

	UGameUISceneClient_AllActiveScenes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetNextSceneFromIndex
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetNextSceneFromIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetNextSceneFromIndex");

	UGameUISceneClient_GetNextSceneFromIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetNextScene
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetNextScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetNextScene");

	UGameUISceneClient_GetNextScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetPreviousInputProcessingScene
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetPreviousInputProcessingScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetPreviousInputProcessingScene");

	UGameUISceneClient_GetPreviousInputProcessingScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetPreviousSceneFromIndex
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetPreviousSceneFromIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetPreviousSceneFromIndex");

	UGameUISceneClient_GetPreviousSceneFromIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetPreviousScene
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetPreviousScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetPreviousScene");

	UGameUISceneClient_GetPreviousScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetActiveScene
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetActiveScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetActiveScene");

	UGameUISceneClient_GetActiveScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetActiveSceneCount
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::GetActiveSceneCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetActiveSceneCount");

	UGameUISceneClient_GetActiveSceneCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.FindSceneIndexByTag
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::FindSceneIndexByTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.FindSceneIndexByTag");

	UGameUISceneClient_FindSceneIndexByTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetSceneAtIndex
// (Final, Native, Public)

void UGameUISceneClient::GetSceneAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetSceneAtIndex");

	UGameUISceneClient_GetSceneAtIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.FindSceneIndex
// (Final, Native, Public)

void UGameUISceneClient::FindSceneIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.FindSceneIndex");

	UGameUISceneClient_FindSceneIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.FindSceneByTag
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::FindSceneByTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.FindSceneByTag");

	UGameUISceneClient_FindSceneByTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.CreateTransientWidget
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::CreateTransientWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.CreateTransientWidget");

	UGameUISceneClient_CreateTransientWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.CreateScene
// (Final, Native, HasOptionalParms, Public)

void UGameUISceneClient::CreateScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.CreateScene");

	UGameUISceneClient_CreateScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetTransientScene
// (Final, Native, Public)

void UGameUISceneClient::GetTransientScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetTransientScene");

	UGameUISceneClient_GetTransientScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.GetCurrentNetMode
// (Final, Native, Static, Public)

void UGameUISceneClient::STATIC_GetCurrentNetMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.GetCurrentNetMode");

	UGameUISceneClient_GetCurrentNetMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameUISceneClient.UpdateActiveControl
// (Final, Native, Public)

void UGameUISceneClient::UpdateActiveControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameUISceneClient.UpdateActiveControl");

	UGameUISceneClient_UpdateActiveControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ConsoleEntry.SetValue
// (Defined, Public)

void UConsoleEntry::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ConsoleEntry.SetValue");

	UConsoleEntry_SetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ConsoleEntry.SetupDockingLinks
// (Defined, Public)

void UConsoleEntry::SetupDockingLinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ConsoleEntry.SetupDockingLinks");

	UConsoleEntry_SetupDockingLinks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ConsoleEntry.PostInitialize
// (Defined, Event, Public)

void UConsoleEntry::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ConsoleEntry.PostInitialize");

	UConsoleEntry_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ConsoleEntry.RemovedChild
// (Defined, Event, HasOptionalParms, Public)

void UConsoleEntry::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ConsoleEntry.RemovedChild");

	UConsoleEntry_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ConsoleEntry.AddedChild
// (Defined, Event, Public)

void UConsoleEntry::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ConsoleEntry.AddedChild");

	UConsoleEntry_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIButton.GetFocusGainedName
// (Defined, Public)

void UUIButton::GetFocusGainedName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIButton.GetFocusGainedName");

	UUIButton_GetFocusGainedName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIButton.GetFocusLostName
// (Defined, Public)

void UUIButton::GetFocusLostName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIButton.GetFocusLostName");

	UUIButton_GetFocusLostName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIButton.SetImage
// (Final, Defined, Public)

void UUIButton::SetImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIButton.SetImage");

	UUIButton_SetImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.SetValue
// (Native, HasOptionalParms, Public)

void UUICheckbox::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.SetValue");

	UUICheckbox_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUICheckbox::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.SaveSubscriberValue");

	UUICheckbox_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.ClearBoundDataStores
// (Final, Native, Public)

void UUICheckbox::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.ClearBoundDataStores");

	UUICheckbox_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUICheckbox::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.GetBoundDataStores");

	UUICheckbox_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUICheckbox::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.NotifyDataStoreValueUpdated");

	UUICheckbox_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUICheckbox::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.RefreshSubscriberValue");

	UUICheckbox_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUICheckbox::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.GetDataStoreBinding");

	UUICheckbox_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUICheckbox::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.SetDataStoreBinding");

	UUICheckbox_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.IsChecked
// (Final, Defined, Public)

void UUICheckbox::IsChecked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.IsChecked");

	UUICheckbox_IsChecked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICheckbox.SetCheckImage
// (Final, Defined, Public)

void UUICheckbox::SetCheckImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICheckbox.SetCheckImage");

	UUICheckbox_SetCheckImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUILabelButton::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.SaveSubscriberValue");

	UUILabelButton_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.ClearBoundDataStores
// (Native, Public)

void UUILabelButton::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.ClearBoundDataStores");

	UUILabelButton_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.GetBoundDataStores
// (Native, Public, HasOutParms)

void UUILabelButton::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.GetBoundDataStores");

	UUILabelButton_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUILabelButton::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.NotifyDataStoreValueUpdated");

	UUILabelButton_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUILabelButton::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.RefreshSubscriberValue");

	UUILabelButton_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUILabelButton::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.GetDataStoreBinding");

	UUILabelButton_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUILabelButton::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.SetDataStoreBinding");

	UUILabelButton_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.SetTextAlignment
// (Final, Native, Public)

void UUILabelButton::SetTextAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.SetTextAlignment");

	UUILabelButton_SetTextAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.GetCaption
// (Final, Defined, Event, Public)

void UUILabelButton::GetCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.GetCaption");

	UUILabelButton_GetCaption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabelButton.SetCaption
// (Native, Public)

void UUILabelButton::SetCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabelButton.SetCaption");

	UUILabelButton_SetCaption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GetCalloutInputProxy
// (Defined, HasOptionalParms, Public)

void UUICalloutButton::GetCalloutInputProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GetCalloutInputProxy");

	UUICalloutButton_GetCalloutInputProxy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.VerifyDefaultMarkupString
// (Defined, Protected)

void UUICalloutButton::VerifyDefaultMarkupString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.VerifyDefaultMarkupString");

	UUICalloutButton_VerifyDefaultMarkupString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GetPanelOwner
// (Defined, Public)

void UUICalloutButton::GetPanelOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GetPanelOwner");

	UUICalloutButton_GetPanelOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.RemovedFromParent
// (Defined, Event, Public)

void UUICalloutButton::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.RemovedFromParent");

	UUICalloutButton_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.PostInitialize
// (Defined, Event, Public)

void UUICalloutButton::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.PostInitialize");

	UUICalloutButton_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GenerateCompleteCaptionMarkup
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButton::GenerateCompleteCaptionMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GenerateCompleteCaptionMarkup");

	UUICalloutButton_GenerateCompleteCaptionMarkup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GetCalloutMarkupString
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButton::GetCalloutMarkupString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GetCalloutMarkupString");

	UUICalloutButton_GetCalloutMarkupString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GetCalloutDataStoreName
// (Defined, Event, Public)

void UUICalloutButton::GetCalloutDataStoreName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GetCalloutDataStoreName");

	UUICalloutButton_GetCalloutDataStoreName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.SetInputAlias
// (Defined, Event, Public)

void UUICalloutButton::SetInputAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.SetInputAlias");

	UUICalloutButton_SetInputAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.OnReceivedInputKey
// (Native, Public, HasOutParms)

void UUICalloutButton::OnReceivedInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.OnReceivedInputKey");

	UUICalloutButton_OnReceivedInputKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.UnsubscribeFromInputProxy
// (Final, Native, HasOptionalParms, Public)

void UUICalloutButton::UnsubscribeFromInputProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.UnsubscribeFromInputProxy");

	UUICalloutButton_UnsubscribeFromInputProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.SubscribeToInputProxy
// (Final, Native, HasOptionalParms, Public)

void UUICalloutButton::SubscribeToInputProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.SubscribeToInputProxy");

	UUICalloutButton_SubscribeToInputProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.SetInputTag
// (Final, Native, Protected)

void UUICalloutButton::SetInputTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.SetInputTag");

	UUICalloutButton_SetInputTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButton.GetCalloutDataStore
// (Final, Native, HasOptionalParms, Public)

void UUICalloutButton::GetCalloutDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButton.GetCalloutDataStore");

	UUICalloutButton_GetCalloutDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.OnStateChanged
// (Defined, HasOptionalParms, Public)

void UUITabButton::OnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.OnStateChanged");

	UUITabButton_OnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.GetTabPage
// (Defined, Public)

void UUITabButton::GetTabPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.GetTabPage");

	UUITabButton_GetTabPage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.IsTargeted
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUITabButton::IsTargeted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.IsTargeted");

	UUITabButton_IsTargeted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.CanActivateButton
// (Final, Native, Public)

void UUITabButton::CanActivateButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.CanActivateButton");

	UUITabButton_CanActivateButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.RemovedFromParent
// (Defined, Event, Public)

void UUITabButton::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.RemovedFromParent");

	UUITabButton_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.RemovedChild
// (Defined, Event, HasOptionalParms, Public)

void UUITabButton::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.RemovedChild");

	UUITabButton_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.AddedChild
// (Defined, Event, Public)

void UUITabButton::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.AddedChild");

	UUITabButton_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabButton.IsActivationAllowed
// (Public, Delegate)

void UUITabButton::IsActivationAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabButton.IsActivationAllowed");

	UUITabButton_IsActivationAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIToggleButton.ButtonClicked
// (Defined, Public)

void UUIToggleButton::ButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIToggleButton.ButtonClicked");

	UUIToggleButton_ButtonClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIToggleButton.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUIToggleButton::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIToggleButton.SetValue");

	UUIToggleButton_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIToggleButton.IsChecked
// (Final, Defined, Public)

void UUIToggleButton::IsChecked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIToggleButton.IsChecked");

	UUIToggleButton_IsChecked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIToggleButton.SetCaption
// (Native, Public)

void UUIToggleButton::SetCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIToggleButton.SetCaption");

	UUIToggleButton_SetCaption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.OnStateChanged
// (Defined, HasOptionalParms, Public)

void UUIOptionListBase::OnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.OnStateChanged");

	UUIOptionListBase_OnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.OnButtonClicked
// (Defined, Public)

void UUIOptionListBase::OnButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.OnButtonClicked");

	UUIOptionListBase_OnButtonClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.OnPressRepeated
// (Defined, Public)

void UUIOptionListBase::OnPressRepeated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.OnPressRepeated");

	UUIOptionListBase_OnPressRepeated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.InitializeInternalControls
// (Defined, Public)

void UUIOptionListBase::InitializeInternalControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.InitializeInternalControls");

	UUIOptionListBase_InitializeInternalControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.Initialized
// (Defined, Event, Public)

void UUIOptionListBase::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.Initialized");

	UUIOptionListBase_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.Created
// (Defined, Public)

void UUIOptionListBase::Created()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.Created");

	UUIOptionListBase_Created_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.OnMoveSelectionRight
// (Native, Public)

void UUIOptionListBase::OnMoveSelectionRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.OnMoveSelectionRight");

	UUIOptionListBase_OnMoveSelectionRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.OnMoveSelectionLeft
// (Native, Public)

void UUIOptionListBase::OnMoveSelectionLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.OnMoveSelectionLeft");

	UUIOptionListBase_OnMoveSelectionLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.HasNextValue
// (Native, Public)

void UUIOptionListBase::HasNextValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.HasNextValue");

	UUIOptionListBase_HasNextValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.HasPrevValue
// (Native, Public)

void UUIOptionListBase::HasPrevValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.HasPrevValue");

	UUIOptionListBase_HasPrevValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIOptionListBase::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.SaveSubscriberValue");

	UUIOptionListBase_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.ClearBoundDataStores
// (Final, Native, Public)

void UUIOptionListBase::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.ClearBoundDataStores");

	UUIOptionListBase_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUIOptionListBase::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.GetBoundDataStores");

	UUIOptionListBase_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIOptionListBase::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.NotifyDataStoreValueUpdated");

	UUIOptionListBase_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIOptionListBase::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.RefreshSubscriberValue");

	UUIOptionListBase_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIOptionListBase::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.GetDataStoreBinding");

	UUIOptionListBase_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIOptionListBase::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.SetDataStoreBinding");

	UUIOptionListBase_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.CreateCustomIncrementButton
// (Public, Delegate)

void UUIOptionListBase::CreateCustomIncrementButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.CreateCustomIncrementButton");

	UUIOptionListBase_CreateCustomIncrementButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListBase.CreateCustomDecrementButton
// (Public, Delegate)

void UUIOptionListBase::CreateCustomDecrementButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListBase.CreateCustomDecrementButton");

	UUIOptionListBase_CreateCustomDecrementButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionListButton.UpdateButtonState
// (Final, Native, HasOptionalParms, Public)

void UUIOptionListButton::UpdateButtonState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionListButton.UpdateButtonState");

	UUIOptionListButton_UpdateButtonState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetMarkerSizePercent
// (Final, Defined, Public)

void UUIScrollbar::GetMarkerSizePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetMarkerSizePercent");

	UUIScrollbar_GetMarkerSizePercent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetMarkerPosPercent
// (Final, Defined, Public)

void UUIScrollbar::GetMarkerPosPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetMarkerPosPercent");

	UUIScrollbar_GetMarkerPosPercent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetNudgePercent
// (Final, Defined, Public)

void UUIScrollbar::GetNudgePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetNudgePercent");

	UUIScrollbar_GetNudgePercent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetNudgeValue
// (Final, Defined, Public)

void UUIScrollbar::GetNudgeValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetNudgeValue");

	UUIScrollbar_GetNudgeValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.PostInitialize
// (Defined, Event, Public)

void UUIScrollbar::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.PostInitialize");

	UUIScrollbar_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.Initialized
// (Defined, Event, Public)

void UUIScrollbar::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.Initialized");

	UUIScrollbar_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.DragScroll
// (Final, Native, Public)

void UUIScrollbar::DragScroll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.DragScroll");

	UUIScrollbar_DragScroll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.DragScrollEnd
// (Final, Native, Public)

void UUIScrollbar::DragScrollEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.DragScrollEnd");

	UUIScrollbar_DragScrollEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.DragScrollBegin
// (Final, Native, Public)

void UUIScrollbar::DragScrollBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.DragScrollBegin");

	UUIScrollbar_DragScrollBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.ScrollDecrement
// (Final, Native, Public)

void UUIScrollbar::ScrollDecrement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.ScrollDecrement");

	UUIScrollbar_ScrollDecrement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.ScrollIncrement
// (Final, Native, Public)

void UUIScrollbar::ScrollIncrement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.ScrollIncrement");

	UUIScrollbar_ScrollIncrement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.EnableCornerPadding
// (Final, Native, Public)

void UUIScrollbar::EnableCornerPadding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.EnableCornerPadding");

	UUIScrollbar_EnableCornerPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.SetNudgeSizePixels
// (Final, Native, Public)

void UUIScrollbar::SetNudgeSizePixels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.SetNudgeSizePixels");

	UUIScrollbar_SetNudgeSizePixels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.SetNudgeSizePercent
// (Final, Native, Public)

void UUIScrollbar::SetNudgeSizePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.SetNudgeSizePercent");

	UUIScrollbar_SetNudgeSizePercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.SetMarkerPosition
// (Final, Native, Public)

void UUIScrollbar::SetMarkerPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.SetMarkerPosition");

	UUIScrollbar_SetMarkerPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.SetMarkerSize
// (Final, Native, Public)

void UUIScrollbar::SetMarkerSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.SetMarkerSize");

	UUIScrollbar_SetMarkerSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetScrollZoneWidth
// (Final, Native, Public)

void UUIScrollbar::GetScrollZoneWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetScrollZoneWidth");

	UUIScrollbar_GetScrollZoneWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetScrollZoneExtent
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIScrollbar::GetScrollZoneExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetScrollZoneExtent");

	UUIScrollbar_GetScrollZoneExtent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.GetMarkerButtonPosition
// (Final, Native, Public)

void UUIScrollbar::GetMarkerButtonPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.GetMarkerButtonPosition");

	UUIScrollbar_GetMarkerButtonPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.OnClickedScrollZone
// (Public, Delegate)

void UUIScrollbar::OnClickedScrollZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.OnClickedScrollZone");

	UUIScrollbar_OnClickedScrollZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbar.OnScrollActivity
// (HasOptionalParms, Public, Delegate)

void UUIScrollbar::OnScrollActivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbar.OnScrollActivity");

	UUIScrollbar_OnScrollActivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollbarMarkerButton.OnButtonDragged
// (Public, Delegate)

void UUIScrollbarMarkerButton::OnButtonDragged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollbarMarkerButton.OnButtonDragged");

	UUIScrollbarMarkerButton_OnButtonDragged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.ListItemSelected
// (Defined, HasOptionalParms, Public)

void UUIComboBox::ListItemSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.ListItemSelected");

	UUIComboBox_ListItemSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SelectedItemChanged
// (Defined, Public)

void UUIComboBox::SelectedItemChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SelectedItemChanged");

	UUIComboBox_SelectedItemChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.EditboxTextChanged
// (Defined, Public)

void UUIComboBox::EditboxTextChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.EditboxTextChanged");

	UUIComboBox_EditboxTextChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.ShowListClickHandler
// (Defined, Public)

void UUIComboBox::ShowListClickHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.ShowListClickHandler");

	UUIComboBox_ShowListClickHandler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.ButtonPressed
// (Defined, Public)

void UUIComboBox::ButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.ButtonPressed");

	UUIComboBox_ButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.EditboxPressed
// (Defined, Public)

void UUIComboBox::EditboxPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.EditboxPressed");

	UUIComboBox_EditboxPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SetListDocking
// (Defined, Public)

void UUIComboBox::SetListDocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SetListDocking");

	UUIComboBox_SetListDocking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.IsListDockedToButton
// (Final, Defined, Public)

void UUIComboBox::IsListDockedToButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.IsListDockedToButton");

	UUIComboBox_IsListDockedToButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SetEditboxText
// (Defined, HasOptionalParms, Public)

void UUIComboBox::SetEditboxText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SetEditboxText");

	UUIComboBox_SetEditboxText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.HideList
// (Defined, Event, HasOptionalParms, Public)

void UUIComboBox::HideList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.HideList");

	UUIComboBox_HideList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.ShowList
// (Defined, Event, HasOptionalParms, Public)

void UUIComboBox::ShowList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.ShowList");

	UUIComboBox_ShowList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SetVisibility
// (Defined, Event, Public)

void UUIComboBox::SetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SetVisibility");

	UUIComboBox_SetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.PostInitialize
// (Defined, Event, Public)

void UUIComboBox::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.PostInitialize");

	UUIComboBox_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SaveSubscriberValue
// (Native, HasOptionalParms, Public, HasOutParms)

void UUIComboBox::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SaveSubscriberValue");

	UUIComboBox_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.ClearBoundDataStores
// (Native, Public)

void UUIComboBox::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.ClearBoundDataStores");

	UUIComboBox_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.GetBoundDataStores
// (Native, Public, HasOutParms)

void UUIComboBox::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.GetBoundDataStores");

	UUIComboBox_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIComboBox::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.NotifyDataStoreValueUpdated");

	UUIComboBox_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIComboBox::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.RefreshSubscriberValue");

	UUIComboBox_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIComboBox::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.GetDataStoreBinding");

	UUIComboBox_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIComboBox::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.SetDataStoreBinding");

	UUIComboBox_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.CreateCustomComboList
// (Public, Delegate)

void UUIComboBox::CreateCustomComboList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.CreateCustomComboList");

	UUIComboBox_CreateCustomComboList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.CreateCustomComboButton
// (Public, Delegate)

void UUIComboBox::CreateCustomComboButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.CreateCustomComboButton");

	UUIComboBox_CreateCustomComboButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIComboBox.CreateCustomComboEditbox
// (Public, Delegate)

void UUIComboBox::CreateCustomComboEditbox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIComboBox.CreateCustomComboEditbox");

	UUIComboBox_CreateCustomComboEditbox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.OnButtonVisibilityChanged
// (Defined, Public)

void UUICalloutButtonPanel::OnButtonVisibilityChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.OnButtonVisibilityChanged");

	UUICalloutButtonPanel_OnButtonVisibilityChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.InitializeInputProxy
// (Defined, Public)

void UUICalloutButtonPanel::InitializeInputProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.InitializeInputProxy");

	UUICalloutButtonPanel_InitializeInputProxy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.ConfigureChildButton
// (Defined, Public)

void UUICalloutButtonPanel::ConfigureChildButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.ConfigureChildButton");

	UUICalloutButtonPanel_ConfigureChildButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RemovedFromParent
// (Defined, Event, Public)

void UUICalloutButtonPanel::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RemovedFromParent");

	UUICalloutButtonPanel_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.PostInitialize
// (Defined, Event, Public)

void UUICalloutButtonPanel::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.PostInitialize");

	UUICalloutButtonPanel_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.CanButtonAcceptFocus
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButtonPanel::CanButtonAcceptFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.CanButtonAcceptFocus");

	UUICalloutButtonPanel_CanButtonAcceptFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.ContainsButton
// (Defined, Event, Public)

void UUICalloutButtonPanel::ContainsButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.ContainsButton");

	UUICalloutButtonPanel_ContainsButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.FindButtonIndex
// (Defined, Event, Public)

void UUICalloutButtonPanel::FindButtonIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.FindButtonIndex");

	UUICalloutButtonPanel_FindButtonIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.FindButton
// (Defined, Event, Public)

void UUICalloutButtonPanel::FindButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.FindButton");

	UUICalloutButtonPanel_FindButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.EnableButton
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButtonPanel::EnableButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.EnableButton");

	UUICalloutButtonPanel_EnableButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.ShowButton
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButtonPanel::ShowButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.ShowButton");

	UUICalloutButtonPanel_ShowButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.SetButtonCallback
// (Defined, Event, Public)

void UUICalloutButtonPanel::SetButtonCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.SetButtonCallback");

	UUICalloutButtonPanel_SetButtonCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.SetButtonInputAlias
// (Defined, Event, Public)

void UUICalloutButtonPanel::SetButtonInputAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.SetButtonInputAlias");

	UUICalloutButtonPanel_SetButtonInputAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.SetButtonCaption
// (Defined, Event, Public)

void UUICalloutButtonPanel::SetButtonCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.SetButtonCaption");

	UUICalloutButtonPanel_SetButtonCaption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RemoveAllButtons
// (Defined, Event, Public)

void UUICalloutButtonPanel::RemoveAllButtons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RemoveAllButtons");

	UUICalloutButtonPanel_RemoveAllButtons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RemoveButtonByAlias
// (Defined, Event, Public)

void UUICalloutButtonPanel::RemoveButtonByAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RemoveButtonByAlias");

	UUICalloutButtonPanel_RemoveButtonByAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RemoveButton
// (Defined, Event, Public)

void UUICalloutButtonPanel::RemoveButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RemoveButton");

	UUICalloutButtonPanel_RemoveButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.InsertButton
// (Defined, Event, Public)

void UUICalloutButtonPanel::InsertButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.InsertButton");

	UUICalloutButtonPanel_InsertButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RequestButtonDockingUpdate
// (Final, Native, HasOptionalParms, Public)

void UUICalloutButtonPanel::RequestButtonDockingUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RequestButtonDockingUpdate");

	UUICalloutButtonPanel_RequestButtonDockingUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.FindBestInsertionIndex
// (Native, HasOptionalParms, Public)

void UUICalloutButtonPanel::FindBestInsertionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.FindBestInsertionIndex");

	UUICalloutButtonPanel_FindBestInsertionIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.GetCalloutInputProxy
// (Final, Native, HasOptionalParms, Public)

void UUICalloutButtonPanel::GetCalloutInputProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.GetCalloutInputProxy");

	UUICalloutButtonPanel_GetCalloutInputProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.CreateCalloutButton
// (Native, HasOptionalParms, Public)

void UUICalloutButtonPanel::CreateCalloutButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.CreateCalloutButton");

	UUICalloutButtonPanel_CreateCalloutButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.GetAvailableCalloutButtonAliases
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUICalloutButtonPanel::GetAvailableCalloutButtonAliases()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.GetAvailableCalloutButtonAliases");

	UUICalloutButtonPanel_GetAvailableCalloutButtonAliases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.RemovedChild
// (Defined, Event, HasOptionalParms, Public)

void UUICalloutButtonPanel::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.RemovedChild");

	UUICalloutButtonPanel_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.AddedChild
// (Defined, Event, Public)

void UUICalloutButtonPanel::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.AddedChild");

	UUICalloutButtonPanel_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.SynchronizeInputAliases
// (Defined, Event, Public)

void UUICalloutButtonPanel::SynchronizeInputAliases()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.SynchronizeInputAliases");

	UUICalloutButtonPanel_SynchronizeInputAliases_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICalloutButtonPanel.PopulateCalloutButtonArray
// (Defined, Public)

void UUICalloutButtonPanel::PopulateCalloutButtonArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICalloutButtonPanel.PopulateCalloutButtonArray");

	UUICalloutButtonPanel_PopulateCalloutButtonArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIFrameBox.SetBackgroundImage
// (Final, Defined, Public)

void UUIFrameBox::SetBackgroundImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIFrameBox.SetBackgroundImage");

	UUIFrameBox_SetBackgroundImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIPanel.SetBackgroundImage
// (Final, Defined, Public)

void UUIPanel::SetBackgroundImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIPanel.SetBackgroundImage");

	UUIPanel_SetBackgroundImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.ScrollZoneClicked
// (Final, Defined, Event, Private)

void UUIScrollFrame::ScrollZoneClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.ScrollZoneClicked");

	UUIScrollFrame_ScrollZoneClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.OnChildRepositioned
// (Final, Defined, Public)

void UUIScrollFrame::OnChildRepositioned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.OnChildRepositioned");

	UUIScrollFrame_OnChildRepositioned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.RemovedChild
// (Defined, Event, HasOptionalParms, Public)

void UUIScrollFrame::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.RemovedChild");

	UUIScrollFrame_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.AddedChild
// (Defined, Event, Public)

void UUIScrollFrame::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.AddedChild");

	UUIScrollFrame_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetVisibleRegionPercentage
// (Final, Native, Public)

void UUIScrollFrame::GetVisibleRegionPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetVisibleRegionPercentage");

	UUIScrollFrame_GetVisibleRegionPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetClipRegion
// (Native, Public, HasOutParms)

void UUIScrollFrame::GetClipRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetClipRegion");

	UUIScrollFrame_GetClipRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetClientRegionSizeVector
// (Final, Native, Public)

void UUIScrollFrame::GetClientRegionSizeVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetClientRegionSizeVector");

	UUIScrollFrame_GetClientRegionSizeVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetClientRegionPositionVector
// (Final, Native, Public)

void UUIScrollFrame::GetClientRegionPositionVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetClientRegionPositionVector");

	UUIScrollFrame_GetClientRegionPositionVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetClientRegionSize
// (Final, Native, Public)

void UUIScrollFrame::GetClientRegionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetClientRegionSize");

	UUIScrollFrame_GetClientRegionSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.GetClientRegionPosition
// (Final, Native, Public)

void UUIScrollFrame::GetClientRegionPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.GetClientRegionPosition");

	UUIScrollFrame_GetClientRegionPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.SetClientRegionPositionVector
// (Final, Native, Public)

void UUIScrollFrame::SetClientRegionPositionVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.SetClientRegionPositionVector");

	UUIScrollFrame_SetClientRegionPositionVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.SetClientRegionPosition
// (Final, Native, Public)

void UUIScrollFrame::SetClientRegionPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.SetClientRegionPosition");

	UUIScrollFrame_SetClientRegionPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.ScrollRegion
// (Final, Native, HasOptionalParms, Public)

void UUIScrollFrame::ScrollRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.ScrollRegion");

	UUIScrollFrame_ScrollRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.ReapplyFormatting
// (Final, Native, HasOptionalParms, Public)

void UUIScrollFrame::ReapplyFormatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.ReapplyFormatting");

	UUIScrollFrame_ReapplyFormatting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScrollFrame.RefreshScrollbars
// (Final, Native, HasOptionalParms, Public)

void UUIScrollFrame::RefreshScrollbars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScrollFrame.RefreshScrollbars");

	UUIScrollFrame_RefreshScrollbars_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.IsActivePage
// (Defined, Public)

void UUITabPage::IsActivePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.IsActivePage");

	UUITabPage_IsActivePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.SetTabCaption
// (Defined, Public)

void UUITabPage::SetTabCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.SetTabCaption");

	UUITabPage_SetTabCaption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.IsFocusInitializationRequired
// (Defined, Public)

void UUITabPage::IsFocusInitializationRequired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.IsFocusInitializationRequired");

	UUITabPage_IsFocusInitializationRequired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.CanActivatePage
// (Defined, Public)

void UUITabPage::CanActivatePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.CanActivatePage");

	UUITabPage_CanActivatePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.AddedToTabControl
// (Public)

void UUITabPage::AddedToTabControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.AddedToTabControl");

	UUITabPage_AddedToTabControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.ClearBoundDataStores
// (Final, Native, Public)

void UUITabPage::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.ClearBoundDataStores");

	UUITabPage_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUITabPage::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.GetBoundDataStores");

	UUITabPage_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUITabPage::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.NotifyDataStoreValueUpdated");

	UUITabPage_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUITabPage::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.RefreshSubscriberValue");

	UUITabPage_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUITabPage::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.GetDataStoreBinding");

	UUITabPage_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUITabPage::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.SetDataStoreBinding");

	UUITabPage_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.GetTabButton
// (Defined, HasOptionalParms, Public)

void UUITabPage::GetTabButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.GetTabButton");

	UUITabPage_GetTabButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.GetOwnerTabControl
// (Final, Native, Public)

void UUITabPage::GetOwnerTabControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.GetOwnerTabControl");

	UUITabPage_GetOwnerTabControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.RemovedFromParent
// (Defined, Event, Public)

void UUITabPage::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.RemovedFromParent");

	UUITabPage_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.LinkToTabButton
// (Defined, Event, Public)

void UUITabPage::LinkToTabButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.LinkToTabButton");

	UUITabPage_LinkToTabButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.CreateTabButton
// (Defined, Event, Static, Protected)

void UUITabPage::STATIC_CreateTabButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.CreateTabButton");

	UUITabPage_CreateTabButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabPage.ActivatePage
// (Defined, Event, HasOptionalParms, Public)

void UUITabPage::ActivatePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabPage.ActivatePage");

	UUITabPage_ActivatePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.GetNumericValue
// (Final, Native, Public)

void UUINumericEditBox::GetNumericValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.GetNumericValue");

	UUINumericEditBox_GetNumericValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.SetNumericValue
// (Final, Native, HasOptionalParms, Public)

void UUINumericEditBox::SetNumericValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.SetNumericValue");

	UUINumericEditBox_SetNumericValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.PostInitialize
// (Defined, Event, Public)

void UUINumericEditBox::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.PostInitialize");

	UUINumericEditBox_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.Initialized
// (Defined, Event, Public)

void UUINumericEditBox::Initialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.Initialized");

	UUINumericEditBox_Initialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.DecrementValue
// (Final, Native, Public)

void UUINumericEditBox::DecrementValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.DecrementValue");

	UUINumericEditBox_DecrementValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericEditBox.IncrementValue
// (Final, Native, Public)

void UUINumericEditBox::IncrementValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericEditBox.IncrementValue");

	UUINumericEditBox_IncrementValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.SaveSubscriberValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIImage::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.SaveSubscriberValue");

	UUIImage_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.ClearBoundDataStores
// (Final, Native, Public)

void UUIImage::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.ClearBoundDataStores");

	UUIImage_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUIImage::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.GetBoundDataStores");

	UUIImage_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIImage::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.NotifyDataStoreValueUpdated");

	UUIImage_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIImage::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.RefreshSubscriberValue");

	UUIImage_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIImage::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.GetDataStoreBinding");

	UUIImage_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIImage::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.SetDataStoreBinding");

	UUIImage_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIImage.SetValue
// (Final, Defined, Public)

void UUIImage::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIImage.SetValue");

	UUIImage_SetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.GetMarkupString
// (Defined, Public)

void UUILabel::GetMarkupString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.GetMarkupString");

	UUILabel_GetMarkupString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.SetIntValue
// (Defined, Public)

void UUILabel::SetIntValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.SetIntValue");

	UUILabel_SetIntValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.IgnoreMarkup
// (Final, Defined, Public)

void UUILabel::IgnoreMarkup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.IgnoreMarkup");

	UUILabel_IgnoreMarkup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.GetValue
// (Defined, Public)

void UUILabel::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.GetValue");

	UUILabel_GetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.SetArrayValue
// (Final, Defined, Public)

void UUILabel::SetArrayValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.SetArrayValue");

	UUILabel_SetArrayValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.ClearBoundDataStores
// (Final, Native, Public)

void UUILabel::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.ClearBoundDataStores");

	UUILabel_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUILabel::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.GetBoundDataStores");

	UUILabel_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUILabel::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.NotifyDataStoreValueUpdated");

	UUILabel_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUILabel::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.RefreshSubscriberValue");

	UUILabel_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUILabel::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.GetDataStoreBinding");

	UUILabel_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUILabel::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.SetDataStoreBinding");

	UUILabel_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.SetTextAlignment
// (Final, Native, Public)

void UUILabel::SetTextAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.SetTextAlignment");

	UUILabel_SetTextAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUILabel::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.SetValue");

	UUILabel_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UILabel.LabelValueChanged
// (Public, Delegate)

void UUILabel::LabelValueChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UILabel.LabelValueChanged");

	UUILabel_LabelValueChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINavigationList.GetScenePathAtIndex
// (Defined, Public, HasDefaults)

void UUINavigationList::GetScenePathAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINavigationList.GetScenePathAtIndex");

	UUINavigationList_GetScenePathAtIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINavigationList.GetItemTagAtIndex
// (Defined, Public, HasDefaults)

void UUINavigationList::GetItemTagAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINavigationList.GetItemTagAtIndex");

	UUINavigationList_GetItemTagAtIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINavigationList.GetSelectedItemTag
// (Defined, Public)

void UUINavigationList::GetSelectedItemTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINavigationList.GetSelectedItemTag");

	UUINavigationList_GetSelectedItemTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINavigationList.GetSelectedScenePath
// (Defined, Public)

void UUINavigationList::GetSelectedScenePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINavigationList.GetSelectedScenePath");

	UUINavigationList_GetSelectedScenePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINavigationList.GetGameResourceDataStore
// (Final, Defined, Static, Public)

void UUINavigationList::STATIC_GetGameResourceDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINavigationList.GetGameResourceDataStore");

	UUINavigationList_GetGameResourceDataStore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericOptionList.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUINumericOptionList::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericOptionList.GetValue");

	UUINumericOptionList_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UINumericOptionList.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUINumericOptionList::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UINumericOptionList.SetValue");

	UUINumericOptionList_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.SetCurrentIndex
// (Native, Public)

void UUIOptionList::SetCurrentIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.SetCurrentIndex");

	UUIOptionList_SetCurrentIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.GetCurrentIndex
// (Native, Public)

void UUIOptionList::GetCurrentIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.GetCurrentIndex");

	UUIOptionList_GetCurrentIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.OnIsCurrValueValid
// (Public, Delegate)

void UUIOptionList::OnIsCurrValueValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.OnIsCurrValueValid");

	UUIOptionList_OnIsCurrValueValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.IsCurrValueValid
// (Native, Public)

void UUIOptionList::IsCurrValueValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.IsCurrValueValid");

	UUIOptionList_IsCurrValueValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.SetNextValue
// (Native, Public)

void UUIOptionList::SetNextValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.SetNextValue");

	UUIOptionList_SetNextValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.SetPrevValue
// (Native, Public)

void UUIOptionList::SetPrevValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.SetPrevValue");

	UUIOptionList_SetPrevValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIOptionList.GetListValue
// (Final, Native, Public, HasOutParms)

void UUIOptionList::GetListValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIOptionList.GetListValue");

	UUIOptionList_GetListValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIPrefabInstance.DetachFromSourcePrefab
// (Final, Native, Public)

void UUIPrefabInstance::DetachFromSourcePrefab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIPrefabInstance.DetachFromSourcePrefab");

	UUIPrefabInstance_DetachFromSourcePrefab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SetOverlayImage
// (Final, Defined, Public)

void UUIProgressBar::SetOverlayImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SetOverlayImage");

	UUIProgressBar_SetOverlayImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SetFillImage
// (Final, Defined, Public)

void UUIProgressBar::SetFillImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SetFillImage");

	UUIProgressBar_SetFillImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SetBackgroundImage
// (Final, Defined, Public)

void UUIProgressBar::SetBackgroundImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SetBackgroundImage");

	UUIProgressBar_SetBackgroundImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUIProgressBar::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.GetValue");

	UUIProgressBar_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUIProgressBar::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SetValue");

	UUIProgressBar_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SaveSubscriberValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIProgressBar::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SaveSubscriberValue");

	UUIProgressBar_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.ClearBoundDataStores
// (Final, Native, Public)

void UUIProgressBar::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.ClearBoundDataStores");

	UUIProgressBar_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUIProgressBar::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.GetBoundDataStores");

	UUIProgressBar_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUIProgressBar::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.NotifyDataStoreValueUpdated");

	UUIProgressBar_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUIProgressBar::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.RefreshSubscriberValue");

	UUIProgressBar_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIProgressBar::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.GetDataStoreBinding");

	UUIProgressBar_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIProgressBar.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUIProgressBar::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIProgressBar.SetDataStoreBinding");

	UUIProgressBar_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.GetFocusGainedName
// (Defined, Public)

void UUISlider::GetFocusGainedName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.GetFocusGainedName");

	UUISlider_GetFocusGainedName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.GetFocusLostName
// (Defined, Public)

void UUISlider::GetFocusLostName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.GetFocusLostName");

	UUISlider_GetFocusLostName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.OnStateChanged
// (Final, Defined, HasOptionalParms, Public)

void UUISlider::OnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.OnStateChanged");

	UUISlider_OnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SetMarkerImage
// (Final, Defined, Public)

void UUISlider::SetMarkerImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SetMarkerImage");

	UUISlider_SetMarkerImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SetBarImage
// (Final, Defined, Public)

void UUISlider::SetBarImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SetBarImage");

	UUISlider_SetBarImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SetBackgroundImage
// (Final, Defined, Public)

void UUISlider::SetBackgroundImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SetBackgroundImage");

	UUISlider_SetBackgroundImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.GetValue
// (Final, Native, HasOptionalParms, Public)

void UUISlider::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.GetValue");

	UUISlider_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SetValue
// (Final, Native, HasOptionalParms, Public)

void UUISlider::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SetValue");

	UUISlider_SetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SaveSubscriberValue
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISlider::SaveSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SaveSubscriberValue");

	UUISlider_SaveSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.ClearBoundDataStores
// (Final, Native, Public)

void UUISlider::ClearBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.ClearBoundDataStores");

	UUISlider_ClearBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.GetBoundDataStores
// (Final, Native, Public, HasOutParms)

void UUISlider::GetBoundDataStores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.GetBoundDataStores");

	UUISlider_GetBoundDataStores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.NotifyDataStoreValueUpdated
// (Final, Native, Public)

void UUISlider::NotifyDataStoreValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.NotifyDataStoreValueUpdated");

	UUISlider_NotifyDataStoreValueUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.RefreshSubscriberValue
// (Final, Native, HasOptionalParms, Public)

void UUISlider::RefreshSubscriberValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.RefreshSubscriberValue");

	UUISlider_RefreshSubscriberValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.GetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUISlider::GetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.GetDataStoreBinding");

	UUISlider_GetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISlider.SetDataStoreBinding
// (Final, Native, HasOptionalParms, Public)

void UUISlider::SetDataStoreBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISlider.SetDataStoreBinding");

	UUISlider_SetDataStoreBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.TabButtonClicked
// (Defined, Public)

void UUITabControl::TabButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.TabButtonClicked");

	UUITabControl_TabButtonClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ProcessInputKey
// (Defined, Public, HasOutParms)

void UUITabControl::ProcessInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ProcessInputKey");

	UUITabControl_ProcessInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.FindPageIndexByPageRef
// (Defined, Public)

void UUITabControl::FindPageIndexByPageRef()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.FindPageIndexByPageRef");

	UUITabControl_FindPageIndexByPageRef_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.FindPageIndexByButton
// (Defined, Public)

void UUITabControl::FindPageIndexByButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.FindPageIndexByButton");

	UUITabControl_FindPageIndexByButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.FindPageIndexByCaption
// (Defined, HasOptionalParms, Public)

void UUITabControl::FindPageIndexByCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.FindPageIndexByCaption");

	UUITabControl_FindPageIndexByCaption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ActivateBestTab
// (Defined, HasOptionalParms, Public)

void UUITabControl::ActivateBestTab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ActivateBestTab");

	UUITabControl_ActivateBestTab_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ActivatePageByCaption
// (Defined, HasOptionalParms, Public)

void UUITabControl::ActivatePageByCaption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ActivatePageByCaption");

	UUITabControl_ActivatePageByCaption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.AddedChild
// (Defined, Event, Public)

void UUITabControl::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.AddedChild");

	UUITabControl_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.PostInitialize
// (Defined, Event, Public)

void UUITabControl::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.PostInitialize");

	UUITabControl_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.EnableTabPage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::EnableTabPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.EnableTabPage");

	UUITabControl_EnableTabPage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ActivatePreviousPage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::ActivatePreviousPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ActivatePreviousPage");

	UUITabControl_ActivatePreviousPage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ActivateNextPage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::ActivateNextPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ActivateNextPage");

	UUITabControl_ActivateNextPage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ActivatePage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::ActivatePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ActivatePage");

	UUITabControl_ActivatePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.ReplacePage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::ReplacePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.ReplacePage");

	UUITabControl_ReplacePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.RemovePage
// (Defined, Event, Public)

void UUITabControl::RemovePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.RemovePage");

	UUITabControl_RemovePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.InsertPage
// (Defined, Event, HasOptionalParms, Public)

void UUITabControl::InsertPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.InsertPage");

	UUITabControl_InsertPage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.PrivateActivatePage
// (Defined, Event, Protected)

void UUITabControl::PrivateActivatePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.PrivateActivatePage");

	UUITabControl_PrivateActivatePage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.CreateTabPage
// (Native, HasOptionalParms, Public)

void UUITabControl::CreateTabPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.CreateTabPage");

	UUITabControl_CreateTabPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.FindTargetedTab
// (Final, Native, Public)

void UUITabControl::FindTargetedTab()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.FindTargetedTab");

	UUITabControl_FindTargetedTab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.GetPageAtIndex
// (Final, Native, Public)

void UUITabControl::GetPageAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.GetPageAtIndex");

	UUITabControl_GetPageAtIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.GetPageCount
// (Final, Native, Public)

void UUITabControl::GetPageCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.GetPageCount");

	UUITabControl_GetPageCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.RequestLayoutUpdate
// (Final, Native, Public)

void UUITabControl::RequestLayoutUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.RequestLayoutUpdate");

	UUITabControl_RequestLayoutUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.OnPageRemoved
// (Public, Delegate)

void UUITabControl::OnPageRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.OnPageRemoved");

	UUITabControl_OnPageRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.OnPageInserted
// (Public, Delegate)

void UUITabControl::OnPageInserted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.OnPageInserted");

	UUITabControl_OnPageInserted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITabControl.OnPageActivated
// (Public, Delegate)

void UUITabControl::OnPageActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITabControl.OnPageActivated");

	UUITabControl_OnPageActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.LocksInput
// (Native, HasOptionalParms, Public)

void UUIScene::LocksInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.LocksInput");

	UUIScene_LocksInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnSwallowedInput
// (Public, Delegate, HasOutParms)

void UUIScene::OnSwallowedInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnSwallowedInput");

	UUIScene_OnSwallowedInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.AllowInputAlias
// (Defined, Event, Public)

void UUIScene::AllowInputAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.AllowInputAlias");

	UUIScene_AllowInputAlias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.IsGamepadOwned
// (Defined, Event, Public)

void UUIScene::IsGamepadOwned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.IsGamepadOwned");

	UUIScene_IsGamepadOwned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.IsKeyboardOwned
// (Defined, Event, Public)

void UUIScene::IsKeyboardOwned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.IsKeyboardOwned");

	UUIScene_IsKeyboardOwned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnNotifyClicked
// (Public, Delegate)

void UUIScene::OnNotifyClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnNotifyClicked");

	UUIScene_OnNotifyClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.DebugShowAnimators
// (Public)

void UUIScene::DebugShowAnimators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.DebugShowAnimators");

	UUIScene_DebugShowAnimators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.LogCurrentState
// (Public)

void UUIScene::LogCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.LogCurrentState");

	UUIScene_LogCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.LogRenderBounds
// (Defined, Public)

void UUIScene::LogRenderBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.LogRenderBounds");

	UUIScene_LogRenderBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnRegainedFocusAnimationComplete
// (Defined, Public)

void UUIScene::OnRegainedFocusAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnRegainedFocusAnimationComplete");

	UUIScene_OnRegainedFocusAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnRegainingFocusAnimationComplete
// (Defined, Public)

void UUIScene::OnRegainingFocusAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnRegainingFocusAnimationComplete");

	UUIScene_OnRegainingFocusAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnLostFocusAnimationComplete
// (Defined, Public)

void UUIScene::OnLostFocusAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnLostFocusAnimationComplete");

	UUIScene_OnLostFocusAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnCloseAnimationComplete_IgnoreChildScenes
// (Defined, Public)

void UUIScene::OnCloseAnimationComplete_IgnoreChildScenes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnCloseAnimationComplete_IgnoreChildScenes");

	UUIScene_OnCloseAnimationComplete_IgnoreChildScenes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnCloseAnimationComplete
// (Defined, Public)

void UUIScene::OnCloseAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnCloseAnimationComplete");

	UUIScene_OnCloseAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnOpenAnimationComplete
// (Defined, Public)

void UUIScene::OnOpenAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnOpenAnimationComplete");

	UUIScene_OnOpenAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneRegainedFocusAnimation
// (Defined, Public)

void UUIScene::BeginSceneRegainedFocusAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneRegainedFocusAnimation");

	UUIScene_BeginSceneRegainedFocusAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneRegainingFocusAnimation
// (Defined, Public)

void UUIScene::BeginSceneRegainingFocusAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneRegainingFocusAnimation");

	UUIScene_BeginSceneRegainingFocusAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneLostFocusAnimation
// (Defined, Public)

void UUIScene::BeginSceneLostFocusAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneLostFocusAnimation");

	UUIScene_BeginSceneLostFocusAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneCloseAnimation
// (Defined, Public)

void UUIScene::BeginSceneCloseAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneCloseAnimation");

	UUIScene_BeginSceneCloseAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneOpenAnimation
// (Defined, Public)

void UUIScene::BeginSceneOpenAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneOpenAnimation");

	UUIScene_BeginSceneOpenAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.StopSceneAnimation
// (Defined, HasOptionalParms, Public)

void UUIScene::StopSceneAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.StopSceneAnimation");

	UUIScene_StopSceneAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.BeginSceneAnimation
// (Defined, HasOptionalParms, Public)

void UUIScene::BeginSceneAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.BeginSceneAnimation");

	UUIScene_BeginSceneAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.FindAnimatorIndex
// (Defined, Public)

void UUIScene::FindAnimatorIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.FindAnimatorIndex");

	UUIScene_FindAnimatorIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.CloseScene
// (Defined, Event, HasOptionalParms, Public)

void UUIScene::CloseScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.CloseScene");

	UUIScene_CloseScene_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OpenScene
// (Defined, Event, HasOptionalParms, Public)

void UUIScene::OpenScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OpenScene");

	UUIScene_OpenScene_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyPlayerRemoved
// (Public)

void UUIScene::NotifyPlayerRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyPlayerRemoved");

	UUIScene_NotifyPlayerRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyPlayerAdded
// (Defined, Public)

void UUIScene::NotifyPlayerAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyPlayerAdded");

	UUIScene_NotifyPlayerAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyStorageDeviceChanged
// (Defined, Public)

void UUIScene::NotifyStorageDeviceChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyStorageDeviceChanged");

	UUIScene_NotifyStorageDeviceChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyLinkStatusChanged
// (Defined, Public)

void UUIScene::NotifyLinkStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyLinkStatusChanged");

	UUIScene_NotifyLinkStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyOnlineServiceStatusChanged
// (Defined, Public)

void UUIScene::NotifyOnlineServiceStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyOnlineServiceStatusChanged");

	UUIScene_NotifyOnlineServiceStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyControllerStatusChanged
// (Defined, Public)

void UUIScene::NotifyControllerStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyControllerStatusChanged");

	UUIScene_NotifyControllerStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyLoginStatusChanged
// (Defined, Public)

void UUIScene::NotifyLoginStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyLoginStatusChanged");

	UUIScene_NotifyLoginStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyGameSessionEnded
// (Defined, Public)

void UUIScene::NotifyGameSessionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyGameSessionEnded");

	UUIScene_NotifyGameSessionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.NotifyPreClientTravel
// (Public)

void UUIScene::NotifyPreClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.NotifyPreClientTravel");

	UUIScene_NotifyPreClientTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SceneCreated
// (Public)

void UUIScene::SceneCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SceneCreated");

	UUIScene_SceneCreated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.UIAnimationEnded
// (Defined, Event, HasOptionalParms, Public)

void UUIScene::UIAnimationEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.UIAnimationEnded");

	UUIScene_UIAnimationEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.UIAnimationStarted
// (Defined, Event, HasOptionalParms, Public, HasDefaults)

void UUIScene::UIAnimationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.UIAnimationStarted");

	UUIScene_UIAnimationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SetVisibility
// (Defined, Event, Public)

void UUIScene::SetVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SetVisibility");

	UUIScene_SetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.RemovedChild
// (Defined, Event, HasOptionalParms, Public)

void UUIScene::RemovedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.RemovedChild");

	UUIScene_RemovedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.AddedChild
// (Defined, Event, Public)

void UUIScene::AddedChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.AddedChild");

	UUIScene_AddedChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.CalculateInputMask
// (Final, Defined, Event, Public)

void UUIScene::CalculateInputMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.CalculateInputMask");

	UUIScene_CalculateInputMask_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SceneDeactivated
// (Defined, Event, Public)

void UUIScene::SceneDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SceneDeactivated");

	UUIScene_SceneDeactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SceneActivated
// (Defined, Event, Public)

void UUIScene::SceneActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SceneActivated");

	UUIScene_SceneActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.MobileKeyboardReturned
// (Event, Public)

void UUIScene::MobileKeyboardReturned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.MobileKeyboardReturned");

	UUIScene_MobileKeyboardReturned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetFocusHint
// (Event, HasOptionalParms, Public)

void UUIScene::GetFocusHint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetFocusHint");

	UUIScene_GetFocusHint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.CanAcceptFocus
// (Native, HasOptionalParms, Public)

void UUIScene::CanAcceptFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.CanAcceptFocus");

	UUIScene_CanAcceptFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GenerateTransformMatrix
// (Final, Native, Public)

void UUIScene::GenerateTransformMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GenerateTransformMatrix");

	UUIScene_GenerateTransformMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.LogDockingStack
// (Final, Native, Public)

void UUIScene::LogDockingStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.LogDockingStack");

	UUIScene_LogDockingStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SetActiveContextMenu
// (Final, Native, Public)

void UUIScene::SetActiveContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SetActiveContextMenu");

	UUIScene_SetActiveContextMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetActiveContextMenu
// (Final, Native, Public)

void UUIScene::GetActiveContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetActiveContextMenu");

	UUIScene_GetActiveContextMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetDefaultContextMenu
// (Final, Native, Public)

void UUIScene::GetDefaultContextMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetDefaultContextMenu");

	UUIScene_GetDefaultContextMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.IsSceneActive
// (Final, Native, HasOptionalParms, Public)

void UUIScene::IsSceneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.IsSceneActive");

	UUIScene_IsSceneActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetWorldInfo
// (Native, Static, Public)

void UUIScene::STATIC_GetWorldInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetWorldInfo");

	UUIScene_GetWorldInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SetSceneRenderMode
// (Final, Native, Public)

void UUIScene::SetSceneRenderMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SetSceneRenderMode");

	UUIScene_SetSceneRenderMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetSceneRenderMode
// (Final, Native, Public)

void UUIScene::GetSceneRenderMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetSceneRenderMode");

	UUIScene_GetSceneRenderMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetSceneInputMode
// (Final, Native, HasOptionalParms, Public)

void UUIScene::GetSceneInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetSceneInputMode");

	UUIScene_GetSceneInputMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SetSceneInputMode
// (Final, Native, Public)

void UUIScene::SetSceneInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SetSceneInputMode");

	UUIScene_SetSceneInputMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetScenePostProcessGroup
// (Final, Native, Public)

void UUIScene::GetScenePostProcessGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetScenePostProcessGroup");

	UUIScene_GetScenePostProcessGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.ShouldRenderParentScenes
// (Final, Native, Public)

void UUIScene::ShouldRenderParentScenes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.ShouldRenderParentScenes");

	UUIScene_ShouldRenderParentScenes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetPreviousScene
// (Final, Native, HasOptionalParms, Public)

void UUIScene::GetPreviousScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetPreviousScene");

	UUIScene_GetPreviousScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetNextScene
// (Final, Native, HasOptionalParms, Public)

void UUIScene::GetNextScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetNextScene");

	UUIScene_GetNextScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.ResolveDataStore
// (Final, Native, HasOptionalParms, Public)

void UUIScene::ResolveDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.ResolveDataStore");

	UUIScene_ResolveDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.UnbindSubscribers
// (Final, Native, Public)

void UUIScene::UnbindSubscribers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.UnbindSubscribers");

	UUIScene_UnbindSubscribers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.SaveSceneDataValues
// (Final, Native, HasOptionalParms, Public)

void UUIScene::SaveSceneDataValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.SaveSceneDataValues");

	UUIScene_SaveSceneDataValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.LoadSceneDataValues
// (Final, Native, Public)

void UUIScene::LoadSceneDataValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.LoadSceneDataValues");

	UUIScene_LoadSceneDataValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetSceneDataStore
// (Final, Native, Public)

void UUIScene::GetSceneDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetSceneDataStore");

	UUIScene_GetSceneDataStore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.FindTickableObjectIndex
// (Final, Native, Public)

void UUIScene::FindTickableObjectIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.FindTickableObjectIndex");

	UUIScene_FindTickableObjectIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.UnregisterTickableObject
// (Final, Native, Public)

void UUIScene::UnregisterTickableObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.UnregisterTickableObject");

	UUIScene_UnregisterTickableObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.RegisterTickableObject
// (Final, Native, HasOptionalParms, Public)

void UUIScene::RegisterTickableObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.RegisterTickableObject");

	UUIScene_RegisterTickableObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.ResolveScenePositions
// (Final, Native, Public)

void UUIScene::ResolveScenePositions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.ResolveScenePositions");

	UUIScene_ResolveScenePositions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.RebuildDockingStack
// (Final, Native, Public)

void UUIScene::RebuildDockingStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.RebuildDockingStack");

	UUIScene_RebuildDockingStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.ForceImmediateSceneUpdate
// (Final, Native, Public)

void UUIScene::ForceImmediateSceneUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.ForceImmediateSceneUpdate");

	UUIScene_ForceImmediateSceneUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnQueryEndAnimation_EnableInput
// (Defined, Public, Delegate)

void UUIScene::OnQueryEndAnimation_EnableInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnQueryEndAnimation_EnableInput");

	UUIScene_OnQueryEndAnimation_EnableInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnQueryBeginAnimation_DisableInput
// (Defined, Public, Delegate)

void UUIScene::OnQueryBeginAnimation_DisableInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnQueryBeginAnimation_DisableInput");

	UUIScene_OnQueryBeginAnimation_DisableInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.ShouldModulateBackgroundAlpha
// (Public, Delegate, HasOutParms)

void UUIScene::ShouldModulateBackgroundAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.ShouldModulateBackgroundAlpha");

	UUIScene_ShouldModulateBackgroundAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnTopSceneChanged
// (Public, Delegate)

void UUIScene::OnTopSceneChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnTopSceneChanged");

	UUIScene_OnTopSceneChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnQueryCloseSceneAllowed
// (Public, Delegate)

void UUIScene::OnQueryCloseSceneAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnQueryCloseSceneAllowed");

	UUIScene_OnQueryCloseSceneAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnPostRender
// (Public, Delegate)

void UUIScene::OnPostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnPostRender");

	UUIScene_OnPostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnSceneDeactivated
// (Public, Delegate)

void UUIScene::OnSceneDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnSceneDeactivated");

	UUIScene_OnSceneDeactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnSceneActivated
// (Public, Delegate)

void UUIScene::OnSceneActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnSceneActivated");

	UUIScene_OnSceneActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.OnInterceptRawInputKey
// (Public, Delegate, HasOutParms)

void UUIScene::OnInterceptRawInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.OnInterceptRawInputKey");

	UUIScene_OnInterceptRawInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScene.GetSceneInputModeOverride
// (Public, Delegate)

void UUIScene::GetSceneInputModeOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScene.GetSceneInputModeOverride");

	UUIScene_GetSceneInputModeOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState_Focused.ActivateState
// (Defined, Event, Public)

void UUIState_Focused::ActivateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState_Focused.ActivateState");

	UUIState_Focused_ActivateState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIState_TargetedTab.IsWidgetClassSupported
// (Defined, Event, Public)

void UUIState_TargetedTab::IsWidgetClassSupported()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIState_TargetedTab.IsWidgetClassSupported");

	UUIState_TargetedTab_IsWidgetClassSupported_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle_Data.MatchesStyleData
// (Public, Delegate)

void UUIStyle_Data::MatchesStyleData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle_Data.MatchesStyleData");

	UUIStyle_Data_MatchesStyleData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle_Combo.GetComboImageStyle
// (Final, Native, Public)

void UUIStyle_Combo::GetComboImageStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle_Combo.GetComboImageStyle");

	UUIStyle_Combo_GetComboImageStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyle_Combo.GetComboTextStyle
// (Final, Native, Public)

void UUIStyle_Combo::GetComboTextStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyle_Combo.GetComboTextStyle");

	UUIStyle_Combo_GetComboTextStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITexture.GetSurface
// (Final, Defined, Public)

void UUITexture::GetSurface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITexture.GetSurface");

	UUITexture_GetSurface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITexture.HasValidStyleData
// (Final, Native, Public)

void UUITexture::HasValidStyleData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITexture.HasValidStyleData");

	UUITexture_HasValidStyleData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITexture.SetImageStyle
// (Final, Native, Public)

void UUITexture::SetImageStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITexture.SetImageStyle");

	UUITexture_SetImageStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITexture.GetOwnerWidget
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUITexture::GetOwnerWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITexture.GetOwnerWidget");

	UUITexture_GetOwnerWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITickableObjectProxy.ScriptTick
// (Event, Public)

void UUITickableObjectProxy::ScriptTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITickableObjectProxy.ScriptTick");

	UUITickableObjectProxy_ScriptTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UITickableObjectProxy.OnScriptTick
// (Public, Delegate)

void UUITickableObjectProxy::OnScriptTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UITickableObjectProxy.OnScriptTick");

	UUITickableObjectProxy_OnScriptTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStringRenderer.SetTextAlignment
// (Final, Native, Public)

void UUIStringRenderer::SetTextAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStringRenderer.SetTextAlignment");

	UUIStringRenderer_SetTextAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyleResolver.NotifyResolveStyle
// (Native, HasOptionalParms, Public)

void UUIStyleResolver::NotifyResolveStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyleResolver.NotifyResolveStyle");

	UUIStyleResolver_NotifyResolveStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyleResolver.SetStyleResolverTag
// (Native, Public)

void UUIStyleResolver::SetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyleResolver.SetStyleResolverTag");

	UUIStyleResolver_SetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStyleResolver.GetStyleResolverTag
// (Native, Public)

void UUIStyleResolver::GetStyleResolverTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStyleResolver.GetStyleResolverTag");

	UUIStyleResolver_GetStyleResolverTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISequence.RemoveSequenceObjects
// (Final, Native, Public, HasOutParms)

void UUISequence::RemoveSequenceObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISequence.RemoveSequenceObjects");

	UUISequence_RemoveSequenceObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISequence.RemoveSequenceObject
// (Final, Native, Public)

void UUISequence::RemoveSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISequence.RemoveSequenceObject");

	UUISequence_RemoveSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISequence.AddSequenceObject
// (Final, Native, HasOptionalParms, Public)

void UUISequence::AddSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISequence.AddSequenceObject");

	UUISequence_AddSequenceObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISequence.GetUIEvents
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUISequence::GetUIEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISequence.GetUIEvents");

	UUISequence_GetUIEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UISequence.GetOwner
// (Final, Native, Public)

void UUISequence::GetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UISequence.GetOwner");

	UUISequence_GetOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIStateSequence.GetOwnerState
// (Final, Native, Public)

void UUIStateSequence::GetOwnerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIStateSequence.GetOwnerState");

	UUIStateSequence_GetOwnerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIAction::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction.GetObjClassVersion");

	UUIAction_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void UUIAction::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction.IsValidUISequenceObject");

	UUIAction_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction.IsValidLevelSequenceObject
// (Defined, Event, Public)

void UUIAction::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction.IsValidLevelSequenceObject");

	UUIAction_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction.GetOwnerScene
// (Final, Native, Public)

void UUIAction::GetOwnerScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction.GetOwnerScene");

	UUIAction_GetOwnerScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction.GetOwner
// (Final, Native, Public)

void UUIAction::GetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction.GetOwner");

	UUIAction_GetOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction_Scene.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIAction_Scene::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction_Scene.GetObjClassVersion");

	UUIAction_Scene_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction_Scene.IsValidLevelSequenceObject
// (Defined, Event, Public)

void UUIAction_Scene::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction_Scene.IsValidLevelSequenceObject");

	UUIAction_Scene_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIAction_OpenScene.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIAction_OpenScene::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIAction_OpenScene.GetObjClassVersion");

	UUIAction_OpenScene_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICond_IsFocused.IsValidLevelSequenceObject
// (Defined, Event, Public)

void UUICond_IsFocused::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICond_IsFocused.IsValidLevelSequenceObject");

	UUICond_IsFocused_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIEvent::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.GetObjClassVersion");

	UUIEvent_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.ShouldAlwaysInstance
// (Defined, Event, Public)

void UUIEvent::ShouldAlwaysInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.ShouldAlwaysInstance");

	UUIEvent_ShouldAlwaysInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void UUIEvent::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.IsValidUISequenceObject");

	UUIEvent_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.IsValidLevelSequenceObject
// (Defined, Event, Public)

void UUIEvent::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.IsValidLevelSequenceObject");

	UUIEvent_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.ActivateUIEvent
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIEvent::ActivateUIEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.ActivateUIEvent");

	UUIEvent_ActivateUIEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.ConditionalActivateUIEvent
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIEvent::ConditionalActivateUIEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.ConditionalActivateUIEvent");

	UUIEvent_ConditionalActivateUIEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.CanBeActivated
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void UUIEvent::CanBeActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.CanBeActivated");

	UUIEvent_CanBeActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.GetOwnerScene
// (Final, Native, Public)

void UUIEvent::GetOwnerScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.GetOwnerScene");

	UUIEvent_GetOwnerScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.GetOwner
// (Final, Native, Public)

void UUIEvent::GetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.GetOwner");

	UUIEvent_GetOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent.AllowEventActivation
// (Public, Delegate, HasOutParms)

void UUIEvent::AllowEventActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent.AllowEventActivation");

	UUIEvent_AllowEventActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIEvent_CalloutButtonInputProxy::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.GetObjClassVersion");

	UUIEvent_CalloutButtonInputProxy_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.IsPastingIntoUISequenceAllowed
// (Defined, Event, Public)

void UUIEvent_CalloutButtonInputProxy::IsPastingIntoUISequenceAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.IsPastingIntoUISequenceAllowed");

	UUIEvent_CalloutButtonInputProxy_IsPastingIntoUISequenceAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void UUIEvent_CalloutButtonInputProxy::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.IsValidUISequenceObject");

	UUIEvent_CalloutButtonInputProxy_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.FindButtonAliasIndex
// (Final, Native, Public)

void UUIEvent_CalloutButtonInputProxy::FindButtonAliasIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.FindButtonAliasIndex");

	UUIEvent_CalloutButtonInputProxy_FindButtonAliasIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.ChangeButtonAlias
// (Final, Native, Public)

void UUIEvent_CalloutButtonInputProxy::ChangeButtonAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.ChangeButtonAlias");

	UUIEvent_CalloutButtonInputProxy_ChangeButtonAlias_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.UnregisterButtonAlias
// (Final, Native, Public)

void UUIEvent_CalloutButtonInputProxy::UnregisterButtonAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.UnregisterButtonAlias");

	UUIEvent_CalloutButtonInputProxy_UnregisterButtonAlias_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_CalloutButtonInputProxy.RegisterButtonAlias
// (Final, Native, Public)

void UUIEvent_CalloutButtonInputProxy::RegisterButtonAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_CalloutButtonInputProxy.RegisterButtonAlias");

	UUIEvent_CalloutButtonInputProxy_RegisterButtonAlias_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_MetaObject.IsPastingIntoUISequenceAllowed
// (Defined, Event, Public)

void UUIEvent_MetaObject::IsPastingIntoUISequenceAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_MetaObject.IsPastingIntoUISequenceAllowed");

	UUIEvent_MetaObject_IsPastingIntoUISequenceAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_MetaObject.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void UUIEvent_MetaObject::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_MetaObject.IsValidUISequenceObject");

	UUIEvent_MetaObject_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_ProcessInput.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void UUIEvent_ProcessInput::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_ProcessInput.IsValidUISequenceObject");

	UUIEvent_ProcessInput_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InteractiveFoliageActor.Touch
// (Simulated, Native, Event, Public)

void AInteractiveFoliageActor::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InteractiveFoliageActor.Touch");

	AInteractiveFoliageActor_Touch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.InteractiveFoliageActor.TakeDamage
// (Simulated, Native, Event, HasOptionalParms, Public)

void AInteractiveFoliageActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.InteractiveFoliageActor.TakeDamage");

	AInteractiveFoliageActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidInfluenceActor.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AFluidInfluenceActor::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidInfluenceActor.ReplicatedEvent");

	AFluidInfluenceActor_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidInfluenceActor.OnToggle
// (Defined, Simulated, Public)

void AFluidInfluenceActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidInfluenceActor.OnToggle");

	AFluidInfluenceActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidSurfaceActor.Touch
// (Defined, Simulated, Event, Public)

void AFluidSurfaceActor::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidSurfaceActor.Touch");

	AFluidSurfaceActor_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidSurfaceActor.TakeDamage
// (Defined, Simulated, Event, HasOptionalParms, Public)

void AFluidSurfaceActor::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidSurfaceActor.TakeDamage");

	AFluidSurfaceActor_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidSurfaceComponent.SetSimulationPosition
// (Final, Native, Public)

void UFluidSurfaceComponent::SetSimulationPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidSurfaceComponent.SetSimulationPosition");

	UFluidSurfaceComponent_SetSimulationPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidSurfaceComponent.SetDetailPosition
// (Final, Native, Public)

void UFluidSurfaceComponent::SetDetailPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidSurfaceComponent.SetDetailPosition");

	UFluidSurfaceComponent_SetDetailPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FluidSurfaceComponent.ApplyForce
// (Final, Native, HasOptionalParms, Public)

void UFluidSurfaceComponent::ApplyForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FluidSurfaceComponent.ApplyForce");

	UFluidSurfaceComponent_ApplyForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpeedTreeComponent.SetMaterial
// (Native, Public)

void USpeedTreeComponent::SetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpeedTreeComponent.SetMaterial");

	USpeedTreeComponent_SetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpeedTreeComponent.GetMaterial
// (Native, Public)

void USpeedTreeComponent::GetMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpeedTreeComponent.GetMaterial");

	USpeedTreeComponent_GetMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetActorParameter
// (Simulated, Public)

void ALensFlareSource::SetActorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetActorParameter");

	ALensFlareSource_SetActorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetExtColorParameter
// (Simulated, Public)

void ALensFlareSource::SetExtColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetExtColorParameter");

	ALensFlareSource_SetExtColorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetColorParameter
// (Simulated, Public)

void ALensFlareSource::SetColorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetColorParameter");

	ALensFlareSource_SetColorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetVectorParameter
// (Simulated, Public)

void ALensFlareSource::SetVectorParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetVectorParameter");

	ALensFlareSource_SetVectorParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetFloatParameter
// (Simulated, Public)

void ALensFlareSource::SetFloatParameter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetFloatParameter");

	ALensFlareSource_SetFloatParameter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.OnToggle
// (Defined, Simulated, Public)

void ALensFlareSource::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.OnToggle");

	ALensFlareSource_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareSource.SetTemplate
// (Final, Native, Public)

void ALensFlareSource::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareSource.SetTemplate");

	ALensFlareSource_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareComponent.SetIsActive
// (Native, Public)

void ULensFlareComponent::SetIsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareComponent.SetIsActive");

	ULensFlareComponent_SetIsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareComponent.SetSourceColor
// (Native, Public)

void ULensFlareComponent::SetSourceColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareComponent.SetSourceColor");

	ULensFlareComponent_SetSourceColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LensFlareComponent.SetTemplate
// (Final, Native, Public)

void ULensFlareComponent::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LensFlareComponent.SetTemplate");

	ULensFlareComponent_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureFlipBook.SetCurrentFrame
// (Native, Public)

void UTextureFlipBook::SetCurrentFrame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureFlipBook.SetCurrentFrame");

	UTextureFlipBook_SetCurrentFrame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureFlipBook.Stop
// (Native, Public)

void UTextureFlipBook::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureFlipBook.Stop");

	UTextureFlipBook_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureFlipBook.Pause
// (Native, Public)

void UTextureFlipBook::Pause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureFlipBook.Pause");

	UTextureFlipBook_Pause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureFlipBook.Play
// (Native, Public)

void UTextureFlipBook::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureFlipBook.Play");

	UTextureFlipBook_Play_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2DComposite.ResetSourceRegions
// (Final, Native, Public)

void UTexture2DComposite::ResetSourceRegions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2DComposite.ResetSourceRegions");

	UTexture2DComposite_ResetSourceRegions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2DComposite.UpdateCompositeTexture
// (Final, Native, Public)

void UTexture2DComposite::UpdateCompositeTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2DComposite.UpdateCompositeTexture");

	UTexture2DComposite_UpdateCompositeTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2DComposite.SourceTexturesFullyStreamedIn
// (Final, Native, Public)

void UTexture2DComposite::SourceTexturesFullyStreamedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2DComposite.SourceTexturesFullyStreamedIn");

	UTexture2DComposite_SourceTexturesFullyStreamedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2DDynamic.Create
// (Final, Native, Static, HasOptionalParms, Public)

void UTexture2DDynamic::STATIC_Create()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2DDynamic.Create");

	UTexture2DDynamic_Create_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Texture2DDynamic.Init
// (Final, Native, HasOptionalParms, Public)

void UTexture2DDynamic::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Texture2DDynamic.Init");

	UTexture2DDynamic_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureMovie.Stop
// (Native, Public)

void UTextureMovie::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureMovie.Stop");

	UTextureMovie_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureMovie.Pause
// (Native, Public)

void UTextureMovie::Pause()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureMovie.Pause");

	UTextureMovie_Pause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureMovie.Play
// (Native, Public)

void UTextureMovie::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureMovie.Play");

	UTextureMovie_Play_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TextureRenderTarget2D.Create
// (Final, Native, Static, HasOptionalParms, Public)

void UTextureRenderTarget2D::STATIC_Create()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TextureRenderTarget2D.Create");

	UTextureRenderTarget2D_Create_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScriptedTexture.Render
// (Public, Delegate)

void UScriptedTexture::Render()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScriptedTexture.Render");

	UScriptedTexture_Render_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AudioDevice.SetSoundMode
// (Final, Native, Public)

void UAudioDevice::SetSoundMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AudioDevice.SetSoundMode");

	UAudioDevice_SetSoundMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.ConsoleCommand
// (Native, HasOptionalParms, Public)

void ADebugCameraController::ConsoleCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.ConsoleCommand");

	ADebugCameraController_ConsoleCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.ShowDebugSelectedInfo
// (Defined, Exec, Public)

void ADebugCameraController::ShowDebugSelectedInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.ShowDebugSelectedInfo");

	ADebugCameraController_ShowDebugSelectedInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.NativeInputKey
// (Defined, HasOptionalParms, Public, HasDefaults)

void ADebugCameraController::NativeInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.NativeInputKey");

	ADebugCameraController_NativeInputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.DisableDebugCamera
// (Defined, Public)

void ADebugCameraController::DisableDebugCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.DisableDebugCamera");

	ADebugCameraController_DisableDebugCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.NormalSpeed
// (Defined, Exec, Public)

void ADebugCameraController::NormalSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.NormalSpeed");

	ADebugCameraController_NormalSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.MoreSpeed
// (Defined, Exec, Public)

void ADebugCameraController::MoreSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.MoreSpeed");

	ADebugCameraController_MoreSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.SetFreezeRendering
// (Defined, Exec, Public)

void ADebugCameraController::SetFreezeRendering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.SetFreezeRendering");

	ADebugCameraController_SetFreezeRendering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.OnDeactivate
// (Defined, Public)

void ADebugCameraController::OnDeactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.OnDeactivate");

	ADebugCameraController_OnDeactivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.OnActivate
// (Defined, Public)

void ADebugCameraController::OnActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.OnActivate");

	ADebugCameraController_OnActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ADebugCameraController::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.PostBeginPlay");

	ADebugCameraController_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.Unselect
// (Native, Public)

void ADebugCameraController::Unselect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.Unselect");

	ADebugCameraController_Unselect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.SecondarySelect
// (Native, Public)

void ADebugCameraController::SecondarySelect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.SecondarySelect");

	ADebugCameraController_SecondarySelect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraController.PrimarySelect
// (Native, Public)

void ADebugCameraController::PrimarySelect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraController.PrimarySelect");

	ADebugCameraController_PrimarySelect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Scout.PreBeginPlay
// (Defined, Simulated, Event, Public)

void AScout::PreBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Scout.PreBeginPlay");

	AScout_PreBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Light.OnToggle
// (Defined, Simulated, Public)

void ALight::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Light.OnToggle");

	ALight_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Light.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ALight::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Light.ReplicatedEvent");

	ALight_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightToggleable.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void APointLightToggleable::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightToggleable.ApplyCheckpointRecord");

	APointLightToggleable_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightToggleable.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void APointLightToggleable::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightToggleable.CreateCheckpointRecord");

	APointLightToggleable_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightToggleable.ShouldSaveForCheckpoint
// (Defined, Public)

void APointLightToggleable::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightToggleable.ShouldSaveForCheckpoint");

	APointLightToggleable_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpotLightToggleable.ApplyCheckpointRecord
// (Defined, Public, HasOutParms)

void ASpotLightToggleable::ApplyCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpotLightToggleable.ApplyCheckpointRecord");

	ASpotLightToggleable_ApplyCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpotLightToggleable.CreateCheckpointRecord
// (Defined, Public, HasOutParms)

void ASpotLightToggleable::CreateCheckpointRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpotLightToggleable.CreateCheckpointRecord");

	ASpotLightToggleable_CreateCheckpointRecord_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SpotLightToggleable.ShouldSaveForCheckpoint
// (Defined, Public)

void ASpotLightToggleable::ShouldSaveForCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SpotLightToggleable.ShouldSaveForCheckpoint");

	ASpotLightToggleable_ShouldSaveForCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DirectionalLightComponent.OnUpdatePropertyBrightness
// (Defined, Public)

void UDirectionalLightComponent::OnUpdatePropertyBrightness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DirectionalLightComponent.OnUpdatePropertyBrightness");

	UDirectionalLightComponent_OnUpdatePropertyBrightness_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DirectionalLightComponent.OnUpdatePropertyLightColor
// (Defined, Public)

void UDirectionalLightComponent::OnUpdatePropertyLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DirectionalLightComponent.OnUpdatePropertyLightColor");

	UDirectionalLightComponent_OnUpdatePropertyLightColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightComponent.OnUpdatePropertyBrightness
// (Defined, Public)

void UPointLightComponent::OnUpdatePropertyBrightness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightComponent.OnUpdatePropertyBrightness");

	UPointLightComponent_OnUpdatePropertyBrightness_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightComponent.OnUpdatePropertyLightColor
// (Defined, Public)

void UPointLightComponent::OnUpdatePropertyLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightComponent.OnUpdatePropertyLightColor");

	UPointLightComponent_OnUpdatePropertyLightColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PointLightComponent.SetTranslation
// (Final, Native, Public)

void UPointLightComponent::SetTranslation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PointLightComponent.SetTranslation");

	UPointLightComponent_SetTranslation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.BreakConstraint
// (Final, Defined, Simulated, HasOptionalParms, Public)

void USkeletalMeshComponent::BreakConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.BreakConstraint");

	USkeletalMeshComponent_BreakConstraint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SkelMeshCompOnParticleSystemFinished
// (Defined, Simulated, Public)

void USkeletalMeshComponent::SkelMeshCompOnParticleSystemFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SkelMeshCompOnParticleSystemFinished");

	USkeletalMeshComponent_SkelMeshCompOnParticleSystemFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.PlayParticleEffect
// (Defined, Event, Public, HasDefaults)

void USkeletalMeshComponent::PlayParticleEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.PlayParticleEffect");

	USkeletalMeshComponent_PlayParticleEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.StopAnim
// (Defined, Public)

void USkeletalMeshComponent::StopAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.StopAnim");

	USkeletalMeshComponent_StopAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.PlayAnim
// (Defined, HasOptionalParms, Public)

void USkeletalMeshComponent::PlayAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.PlayAnim");

	USkeletalMeshComponent_PlayAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.ShowMaterialSection
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::ShowMaterialSection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.ShowMaterialSection");

	USkeletalMeshComponent_ShowMaterialSection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateMeshForBrokenConstraints
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::UpdateMeshForBrokenConstraints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateMeshForBrokenConstraints");

	USkeletalMeshComponent_UpdateMeshForBrokenConstraints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UnHideBoneByName
// (Final, Native, Public)

void USkeletalMeshComponent::UnHideBoneByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UnHideBoneByName");

	USkeletalMeshComponent_UnHideBoneByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.HideBoneByName
// (Final, Native, Public)

void USkeletalMeshComponent::HideBoneByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.HideBoneByName");

	USkeletalMeshComponent_HideBoneByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.IsBoneHidden
// (Final, Native, Public)

void USkeletalMeshComponent::IsBoneHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.IsBoneHidden");

	USkeletalMeshComponent_IsBoneHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UnHideBone
// (Final, Native, Public)

void USkeletalMeshComponent::UnHideBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UnHideBone");

	USkeletalMeshComponent_UnHideBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.HideBone
// (Final, Native, Public)

void USkeletalMeshComponent::HideBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.HideBone");

	USkeletalMeshComponent_HideBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetFaceFXRegisterEx
// (Final, Native, Public)

void USkeletalMeshComponent::SetFaceFXRegisterEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetFaceFXRegisterEx");

	USkeletalMeshComponent_SetFaceFXRegisterEx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetFaceFXRegister
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::SetFaceFXRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetFaceFXRegister");

	USkeletalMeshComponent_SetFaceFXRegister_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetFaceFXRegister
// (Final, Native, Public)

void USkeletalMeshComponent::GetFaceFXRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetFaceFXRegister");

	USkeletalMeshComponent_GetFaceFXRegister_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.DeclareFaceFXRegister
// (Final, Native, Public)

void USkeletalMeshComponent::DeclareFaceFXRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.DeclareFaceFXRegister");

	USkeletalMeshComponent_DeclareFaceFXRegister_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.IsPlayingFaceFXAnim
// (Final, Native, Public)

void USkeletalMeshComponent::IsPlayingFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.IsPlayingFaceFXAnim");

	USkeletalMeshComponent_IsPlayingFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.StopFaceFXAnim
// (Final, Native, Public)

void USkeletalMeshComponent::StopFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.StopFaceFXAnim");

	USkeletalMeshComponent_StopFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.PlayFaceFXAnim
// (Final, Native, Public)

void USkeletalMeshComponent::PlayFaceFXAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.PlayFaceFXAnim");

	USkeletalMeshComponent_PlayFaceFXAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.ToggleInstanceVertexWeights
// (Final, Native, Public)

void USkeletalMeshComponent::ToggleInstanceVertexWeights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.ToggleInstanceVertexWeights");

	USkeletalMeshComponent_ToggleInstanceVertexWeights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateInstanceVertexWeightBones
// (Final, Native, Public)

void USkeletalMeshComponent::UpdateInstanceVertexWeightBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateInstanceVertexWeightBones");

	USkeletalMeshComponent_UpdateInstanceVertexWeightBones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindInstanceVertexweightBonePair
// (Final, Native, Public)

void USkeletalMeshComponent::FindInstanceVertexweightBonePair()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindInstanceVertexweightBonePair");

	USkeletalMeshComponent_FindInstanceVertexweightBonePair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.RemoveInstanceVertexWeightBoneParented
// (Final, Native, Public)

void USkeletalMeshComponent::RemoveInstanceVertexWeightBoneParented()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.RemoveInstanceVertexWeightBoneParented");

	USkeletalMeshComponent_RemoveInstanceVertexWeightBoneParented_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AddInstanceVertexWeightBoneParented
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::AddInstanceVertexWeightBoneParented()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AddInstanceVertexWeightBoneParented");

	USkeletalMeshComponent_AddInstanceVertexWeightBoneParented_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBonesWithinRadius
// (Final, Native, Public, HasOutParms)

void USkeletalMeshComponent::GetBonesWithinRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBonesWithinRadius");

	USkeletalMeshComponent_GetBonesWithinRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateAnimations
// (Final, Native, Public)

void USkeletalMeshComponent::UpdateAnimations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateAnimations");

	USkeletalMeshComponent_UpdateAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.ForceSkelUpdate
// (Final, Native, Public)

void USkeletalMeshComponent::ForceSkelUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.ForceSkelUpdate");

	USkeletalMeshComponent_ForceSkelUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateRBBonesFromSpaceBases
// (Final, Native, Public)

void USkeletalMeshComponent::UpdateRBBonesFromSpaceBases()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateRBBonesFromSpaceBases");

	USkeletalMeshComponent_UpdateRBBonesFromSpaceBases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetHasPhysicsAssetInstance
// (Final, Native, Public)

void USkeletalMeshComponent::SetHasPhysicsAssetInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetHasPhysicsAssetInstance");

	USkeletalMeshComponent_SetHasPhysicsAssetInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindBodyInstanceNamed
// (Final, Native, Public)

void USkeletalMeshComponent::FindBodyInstanceNamed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindBodyInstanceNamed");

	USkeletalMeshComponent_FindBodyInstanceNamed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
// (Final, Native, Public)

void USkeletalMeshComponent::FindConstraintBoneName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindConstraintBoneName");

	USkeletalMeshComponent_FindConstraintBoneName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindConstraintIndex
// (Final, Native, Public)

void USkeletalMeshComponent::FindConstraintIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindConstraintIndex");

	USkeletalMeshComponent_FindConstraintIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.InitMorphTargets
// (Final, Native, Public)

void USkeletalMeshComponent::InitMorphTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.InitMorphTargets");

	USkeletalMeshComponent_InitMorphTargets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.InitSkelControls
// (Final, Native, Public)

void USkeletalMeshComponent::InitSkelControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.InitSkelControls");

	USkeletalMeshComponent_InitSkelControls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateParentBoneMap
// (Final, Native, Public)

void USkeletalMeshComponent::UpdateParentBoneMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateParentBoneMap");

	USkeletalMeshComponent_UpdateParentBoneMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetParentAnimComponent
// (Final, Native, Public)

void USkeletalMeshComponent::SetParentAnimComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetParentAnimComponent");

	USkeletalMeshComponent_SetParentAnimComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetAnimTreeTemplate
// (Final, Native, Public)

void USkeletalMeshComponent::SetAnimTreeTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetAnimTreeTemplate");

	USkeletalMeshComponent_SetAnimTreeTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClosestCollidingBoneLocation
// (Final, Native, Public)

void USkeletalMeshComponent::GetClosestCollidingBoneLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClosestCollidingBoneLocation");

	USkeletalMeshComponent_GetClosestCollidingBoneLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindClosestBone
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USkeletalMeshComponent::FindClosestBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindClosestBone");

	USkeletalMeshComponent_FindClosestBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.TransformFromBoneSpace
// (Final, Native, Public, HasOutParms)

void USkeletalMeshComponent::TransformFromBoneSpace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.TransformFromBoneSpace");

	USkeletalMeshComponent_TransformFromBoneSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.TransformToBoneSpace
// (Final, Native, Public, HasOutParms)

void USkeletalMeshComponent::TransformToBoneSpace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.TransformToBoneSpace");

	USkeletalMeshComponent_TransformToBoneSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneAxis
// (Final, Native, Public)

void USkeletalMeshComponent::GetBoneAxis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneAxis");

	USkeletalMeshComponent_GetBoneAxis_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetRefPosePosition
// (Final, Native, Public)

void USkeletalMeshComponent::GetRefPosePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetRefPosePosition");

	USkeletalMeshComponent_GetRefPosePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.BoneIsChildOf
// (Final, Native, Public)

void USkeletalMeshComponent::BoneIsChildOf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.BoneIsChildOf");

	USkeletalMeshComponent_BoneIsChildOf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneNames
// (Final, Native, Public, HasOutParms)

void USkeletalMeshComponent::GetBoneNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneNames");

	USkeletalMeshComponent_GetBoneNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetParentBone
// (Final, Native, Public)

void USkeletalMeshComponent::GetParentBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetParentBone");

	USkeletalMeshComponent_GetParentBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneMatrix
// (Final, Native, Public)

void USkeletalMeshComponent::GetBoneMatrix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneMatrix");

	USkeletalMeshComponent_GetBoneMatrix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneName
// (Final, Native, Public)

void USkeletalMeshComponent::GetBoneName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneName");

	USkeletalMeshComponent_GetBoneName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.MatchRefBone
// (Final, Native, Public)

void USkeletalMeshComponent::MatchRefBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.MatchRefBone");

	USkeletalMeshComponent_MatchRefBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneLocation
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::GetBoneLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneLocation");

	USkeletalMeshComponent_GetBoneLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetBoneQuaternion
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::GetBoneQuaternion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetBoneQuaternion");

	USkeletalMeshComponent_GetBoneQuaternion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindMorphNode
// (Final, Native, Public)

void USkeletalMeshComponent::FindMorphNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindMorphNode");

	USkeletalMeshComponent_FindMorphNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindSkelControl
// (Final, Native, Public)

void USkeletalMeshComponent::FindSkelControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindSkelControl");

	USkeletalMeshComponent_FindSkelControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AllAnimNodes
// (Final, Iterator, Native, Public, HasOutParms)

void USkeletalMeshComponent::AllAnimNodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AllAnimNodes");

	USkeletalMeshComponent_AllAnimNodes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindAnimNode
// (Final, Native, Public)

void USkeletalMeshComponent::FindAnimNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindAnimNode");

	USkeletalMeshComponent_FindAnimNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindMorphTarget
// (Final, Native, Public)

void USkeletalMeshComponent::FindMorphTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindMorphTarget");

	USkeletalMeshComponent_FindMorphTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetAnimLength
// (Final, Defined, Public)

void USkeletalMeshComponent::GetAnimLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetAnimLength");

	USkeletalMeshComponent_GetAnimLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetAnimRateByDuration
// (Final, Defined, Public)

void USkeletalMeshComponent::GetAnimRateByDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetAnimRateByDuration");

	USkeletalMeshComponent_GetAnimRateByDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.RestoreSavedAnimSets
// (Final, Native, Public)

void USkeletalMeshComponent::RestoreSavedAnimSets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.RestoreSavedAnimSets");

	USkeletalMeshComponent_RestoreSavedAnimSets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SaveAnimSets
// (Final, Native, Public)

void USkeletalMeshComponent::SaveAnimSets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SaveAnimSets");

	USkeletalMeshComponent_SaveAnimSets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindAnimSequence
// (Final, Native, Public)

void USkeletalMeshComponent::FindAnimSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindAnimSequence");

	USkeletalMeshComponent_FindAnimSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.WakeSoftBody
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::WakeSoftBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.WakeSoftBody");

	USkeletalMeshComponent_WakeSoftBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetSoftBodyFrozen
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetSoftBodyFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetSoftBodyFrozen");

	USkeletalMeshComponent_SetSoftBodyFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateSoftBodyParams
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::UpdateSoftBodyParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateSoftBodyParams");

	USkeletalMeshComponent_UpdateSoftBodyParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothValidBounds
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothValidBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothValidBounds");

	USkeletalMeshComponent_SetClothValidBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.EnableClothValidBounds
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::EnableClothValidBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.EnableClothValidBounds");

	USkeletalMeshComponent_EnableClothValidBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AttachClothToCollidingShapes
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::AttachClothToCollidingShapes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AttachClothToCollidingShapes");

	USkeletalMeshComponent_AttachClothToCollidingShapes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothVelocity
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothVelocity");

	USkeletalMeshComponent_SetClothVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothPosition
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothPosition");

	USkeletalMeshComponent_SetClothPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothSleep
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothSleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothSleep");

	USkeletalMeshComponent_SetClothSleep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothThickness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothThickness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothThickness");

	USkeletalMeshComponent_SetClothThickness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothTearFactor
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothTearFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothTearFactor");

	USkeletalMeshComponent_SetClothTearFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothStretchingStiffness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothStretchingStiffness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothStretchingStiffness");

	USkeletalMeshComponent_SetClothStretchingStiffness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothSolverIterations
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothSolverIterations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothSolverIterations");

	USkeletalMeshComponent_SetClothSolverIterations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothSleepLinearVelocity
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothSleepLinearVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothSleepLinearVelocity");

	USkeletalMeshComponent_SetClothSleepLinearVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothPressure
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothPressure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothPressure");

	USkeletalMeshComponent_SetClothPressure_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothFriction
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothFriction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothFriction");

	USkeletalMeshComponent_SetClothFriction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothFlags
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothFlags");

	USkeletalMeshComponent_SetClothFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothDampingCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothDampingCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothDampingCoefficient");

	USkeletalMeshComponent_SetClothDampingCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothCollisionResponseCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothCollisionResponseCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothCollisionResponseCoefficient");

	USkeletalMeshComponent_SetClothCollisionResponseCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothBendingStiffness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothBendingStiffness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothBendingStiffness");

	USkeletalMeshComponent_SetClothBendingStiffness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothAttachmentTearFactor
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothAttachmentTearFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothAttachmentTearFactor");

	USkeletalMeshComponent_SetClothAttachmentTearFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothAttachmentResponseCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothAttachmentResponseCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothAttachmentResponseCoefficient");

	USkeletalMeshComponent_SetClothAttachmentResponseCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothThickness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothThickness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothThickness");

	USkeletalMeshComponent_GetClothThickness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothTearFactor
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothTearFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothTearFactor");

	USkeletalMeshComponent_GetClothTearFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothStretchingStiffness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothStretchingStiffness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothStretchingStiffness");

	USkeletalMeshComponent_GetClothStretchingStiffness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothSolverIterations
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothSolverIterations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothSolverIterations");

	USkeletalMeshComponent_GetClothSolverIterations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothSleepLinearVelocity
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothSleepLinearVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothSleepLinearVelocity");

	USkeletalMeshComponent_GetClothSleepLinearVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothPressure
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothPressure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothPressure");

	USkeletalMeshComponent_GetClothPressure_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothFriction
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothFriction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothFriction");

	USkeletalMeshComponent_GetClothFriction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothFlags
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothFlags");

	USkeletalMeshComponent_GetClothFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothDampingCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothDampingCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothDampingCoefficient");

	USkeletalMeshComponent_GetClothDampingCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothCollisionResponseCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothCollisionResponseCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothCollisionResponseCoefficient");

	USkeletalMeshComponent_GetClothCollisionResponseCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothBendingStiffness
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothBendingStiffness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothBendingStiffness");

	USkeletalMeshComponent_GetClothBendingStiffness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothAttachmentTearFactor
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothAttachmentTearFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothAttachmentTearFactor");

	USkeletalMeshComponent_GetClothAttachmentTearFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetClothAttachmentResponseCoefficient
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::GetClothAttachmentResponseCoefficient()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetClothAttachmentResponseCoefficient");

	USkeletalMeshComponent_GetClothAttachmentResponseCoefficient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.ResetClothVertsToRefPose
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::ResetClothVertsToRefPose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.ResetClothVertsToRefPose");

	USkeletalMeshComponent_ResetClothVertsToRefPose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetAttachClothVertsToBaseBody
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetAttachClothVertsToBaseBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetAttachClothVertsToBaseBody");

	USkeletalMeshComponent_SetAttachClothVertsToBaseBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothExternalForce
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothExternalForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothExternalForce");

	USkeletalMeshComponent_SetClothExternalForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.UpdateClothParams
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::UpdateClothParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.UpdateClothParams");

	USkeletalMeshComponent_UpdateClothParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetClothFrozen
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetClothFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetClothFrozen");

	USkeletalMeshComponent_SetClothFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetEnableClothSimulation
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetEnableClothSimulation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetEnableClothSimulation");

	USkeletalMeshComponent_SetEnableClothSimulation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetForceRefPose
// (Final, Simulated, Native, Public)

void USkeletalMeshComponent::SetForceRefPose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetForceRefPose");

	USkeletalMeshComponent_SetForceRefPose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetPhysicsAsset
// (Final, Simulated, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::SetPhysicsAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetPhysicsAsset");

	USkeletalMeshComponent_SetPhysicsAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.SetSkeletalMesh
// (Final, Simulated, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::SetSkeletalMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.SetSkeletalMesh");

	USkeletalMeshComponent_SetSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AttachedComponents
// (Final, Iterator, Native, Public, HasOutParms)

void USkeletalMeshComponent::AttachedComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AttachedComponents");

	USkeletalMeshComponent_AttachedComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.IsComponentAttached
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::IsComponentAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.IsComponentAttached");

	USkeletalMeshComponent_IsComponentAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.FindComponentAttachedToBone
// (Final, Native, Public)

void USkeletalMeshComponent::FindComponentAttachedToBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.FindComponentAttachedToBone");

	USkeletalMeshComponent_FindComponentAttachedToBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetSocketBoneName
// (Final, Native, Public)

void USkeletalMeshComponent::GetSocketBoneName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetSocketBoneName");

	USkeletalMeshComponent_GetSocketBoneName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetSocketByName
// (Final, Native, Public)

void USkeletalMeshComponent::GetSocketByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetSocketByName");

	USkeletalMeshComponent_GetSocketByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.GetSocketWorldLocationAndRotation
// (Final, Native, HasOptionalParms, Public, HasOutParms)

void USkeletalMeshComponent::GetSocketWorldLocationAndRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.GetSocketWorldLocationAndRotation");

	USkeletalMeshComponent_GetSocketWorldLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AttachComponentToSocket
// (Final, Native, Public)

void USkeletalMeshComponent::AttachComponentToSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AttachComponentToSocket");

	USkeletalMeshComponent_AttachComponentToSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.DetachComponent
// (Final, Native, Public)

void USkeletalMeshComponent::DetachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.DetachComponent");

	USkeletalMeshComponent_DetachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SkeletalMeshComponent.AttachComponent
// (Final, Native, HasOptionalParms, Public)

void USkeletalMeshComponent::AttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SkeletalMeshComponent.AttachComponent");

	USkeletalMeshComponent_AttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.OnToggle
// (Defined, Public)

void ASplineActor::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.OnToggle");

	ASplineActor_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.GetAllConnectedSplineActors
// (Native, Public, HasOutParms)

void ASplineActor::GetAllConnectedSplineActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.GetAllConnectedSplineActors");

	ASplineActor_GetAllConnectedSplineActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.FindSplinePathTo
// (Native, Public, HasOutParms)

void ASplineActor::FindSplinePathTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.FindSplinePathTo");

	ASplineActor_FindSplinePathTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.GetBestConnectionInDirection
// (Native, HasOptionalParms, Public)

void ASplineActor::GetBestConnectionInDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.GetBestConnectionInDirection");

	ASplineActor_GetBestConnectionInDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.GetRandomConnection
// (Native, HasOptionalParms, Public)

void ASplineActor::GetRandomConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.GetRandomConnection");

	ASplineActor_GetRandomConnection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.BreakAllConnectionsFrom
// (Native, Public)

void ASplineActor::BreakAllConnectionsFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.BreakAllConnectionsFrom");

	ASplineActor_BreakAllConnectionsFrom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.BreakAllConnections
// (Native, Public)

void ASplineActor::BreakAllConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.BreakAllConnections");

	ASplineActor_BreakAllConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.BreakConnectionTo
// (Native, Public)

void ASplineActor::BreakConnectionTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.BreakConnectionTo");

	ASplineActor_BreakConnectionTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.FindTargetForComponent
// (Native, Public)

void ASplineActor::FindTargetForComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.FindTargetForComponent");

	ASplineActor_FindTargetForComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.FindSplineComponentTo
// (Native, Public)

void ASplineActor::FindSplineComponentTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.FindSplineComponentTo");

	ASplineActor_FindSplineComponentTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.IsConnectedTo
// (Native, Public)

void ASplineActor::IsConnectedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.IsConnectedTo");

	ASplineActor_IsConnectedTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.AddConnectionTo
// (Native, Public)

void ASplineActor::AddConnectionTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.AddConnectionTo");

	ASplineActor_AddConnectionTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.UpdateConnectedSplineComponents
// (Native, Public)

void ASplineActor::UpdateConnectedSplineComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.UpdateConnectedSplineComponents");

	ASplineActor_UpdateConnectedSplineComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.UpdateSplineComponents
// (Native, Public)

void ASplineActor::UpdateSplineComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.UpdateSplineComponents");

	ASplineActor_UpdateSplineComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineActor.GetWorldSpaceTangent
// (Native, Public)

void ASplineActor::GetWorldSpaceTangent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineActor.GetWorldSpaceTangent");

	ASplineActor_GetWorldSpaceTangent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineLoftActor.ClearLoftMesh
// (Native, Public)

void ASplineLoftActor::ClearLoftMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineLoftActor.ClearLoftMesh");

	ASplineLoftActor_ClearLoftMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
// (Native, Public)

void USplineComponent::GetTangentAtDistanceAlongSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline");

	USplineComponent_GetTangentAtDistanceAlongSpline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
// (Native, Public)

void USplineComponent::GetLocationAtDistanceAlongSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline");

	USplineComponent_GetLocationAtDistanceAlongSpline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineComponent.GetSplineLength
// (Native, Public)

void USplineComponent::GetSplineLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineComponent.GetSplineLength");

	USplineComponent_GetSplineLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineComponent.UpdateSplineReparamTable
// (Native, Public)

void USplineComponent::UpdateSplineReparamTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineComponent.UpdateSplineReparamTable");

	USplineComponent_UpdateSplineReparamTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SplineComponent.UpdateSplineCurviness
// (Native, Public)

void USplineComponent::UpdateSplineCurviness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SplineComponent.UpdateSplineCurviness");

	USplineComponent_UpdateSplineCurviness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.FindEdgeForTopLevelScope
// (Native, Public)

void AProcBuilding::FindEdgeForTopLevelScope()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.FindEdgeForTopLevelScope");

	AProcBuilding_FindEdgeForTopLevelScope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.BreakFractureComponent
// (Native, Public)

void AProcBuilding::BreakFractureComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.BreakFractureComponent");

	AProcBuilding_BreakFractureComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.GetAllGroupedProcBuildings
// (Native, Public, HasOutParms)

void AProcBuilding::GetAllGroupedProcBuildings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.GetAllGroupedProcBuildings");

	AProcBuilding_GetAllGroupedProcBuildings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.GetBaseMostBuilding
// (Native, Public)

void AProcBuilding::GetBaseMostBuilding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.GetBaseMostBuilding");

	AProcBuilding_GetBaseMostBuilding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.FindComponentsForTopLevelScope
// (Native, Public)

void AProcBuilding::FindComponentsForTopLevelScope()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.FindComponentsForTopLevelScope");

	AProcBuilding_FindComponentsForTopLevelScope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ProcBuilding.ClearBuildingMeshes
// (Native, Public)

void AProcBuilding::ClearBuildingMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ProcBuilding.ClearBuildingMeshes");

	AProcBuilding_ClearBuildingMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PBRuleNodeMesh.PickRandomBuildingMesh
// (Native, Public)

void UPBRuleNodeMesh::PickRandomBuildingMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PBRuleNodeMesh.PickRandomBuildingMesh");

	UPBRuleNodeMesh_PickRandomBuildingMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.ShouldShowGore
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::ShouldShowGore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.ShouldShowGore");

	AGameReplicationInfo_ShouldShowGore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.IsCoopMultiplayerGame
// (Defined, Simulated, Public)

void AGameReplicationInfo::IsCoopMultiplayerGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.IsCoopMultiplayerGame");

	AGameReplicationInfo_IsCoopMultiplayerGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.IsMultiplayerGame
// (Defined, Simulated, Public)

void AGameReplicationInfo::IsMultiplayerGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.IsMultiplayerGame");

	AGameReplicationInfo_IsMultiplayerGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.EndGame
// (Defined, Simulated, Public)

void AGameReplicationInfo::EndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.EndGame");

	AGameReplicationInfo_EndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.StartMatch
// (Defined, Simulated, Public)

void AGameReplicationInfo::StartMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.StartMatch");

	AGameReplicationInfo_StartMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.CleanupGameDataStore
// (Defined, Simulated, Public)

void AGameReplicationInfo::CleanupGameDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.CleanupGameDataStore");

	AGameReplicationInfo_CleanupGameDataStore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.InitializeGameDataStore
// (Defined, Simulated, Public)

void AGameReplicationInfo::InitializeGameDataStore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.InitializeGameDataStore");

	AGameReplicationInfo_InitializeGameDataStore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.ReplicatedDataBinding
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::ReplicatedDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.ReplicatedDataBinding");

	AGameReplicationInfo_ReplicatedDataBinding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.SortPRIArray
// (Defined, Simulated, Public)

void AGameReplicationInfo::SortPRIArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.SortPRIArray");

	AGameReplicationInfo_SortPRIArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.InOrder
// (Defined, Simulated, Public)

void AGameReplicationInfo::InOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.InOrder");

	AGameReplicationInfo_InOrder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetPRIArray
// (Defined, Simulated, Public, HasOutParms)

void AGameReplicationInfo::GetPRIArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetPRIArray");

	AGameReplicationInfo_GetPRIArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.SetTeam
// (Defined, Simulated, Public)

void AGameReplicationInfo::SetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.SetTeam");

	AGameReplicationInfo_SetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.RemovePRI
// (Defined, Simulated, Public)

void AGameReplicationInfo::RemovePRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.RemovePRI");

	AGameReplicationInfo_RemovePRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.AddPRI
// (Defined, Simulated, Public)

void AGameReplicationInfo::AddPRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.AddPRI");

	AGameReplicationInfo_AddPRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.FindPlayerByID
// (Defined, Simulated, Public)

void AGameReplicationInfo::FindPlayerByID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.FindPlayerByID");

	AGameReplicationInfo_FindPlayerByID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.OnSameTeam
// (Simulated, Native, Public)

void AGameReplicationInfo::OnSameTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.OnSameTeam");

	AGameReplicationInfo_OnSameTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.Timer
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.Timer");

	AGameReplicationInfo_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.Destroyed
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.Destroyed");

	AGameReplicationInfo_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.Reset
// (Defined, Public)

void AGameReplicationInfo::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.Reset");

	AGameReplicationInfo_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.ReceivedGameClass
// (Simulated, Public)

void AGameReplicationInfo::ReceivedGameClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.ReceivedGameClass");

	AGameReplicationInfo_ReceivedGameClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.ReplicatedEvent");

	AGameReplicationInfo_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AGameReplicationInfo::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.PostBeginPlay");

	AGameReplicationInfo_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetMaxPlayers
// (Simulated, Event, Public)

void AGameReplicationInfo::GetMaxPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetMaxPlayers");

	AGameReplicationInfo_GetMaxPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.IsAtLobbyLevel
// (Simulated, Event, Public)

void AGameReplicationInfo::IsAtLobbyLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.IsAtLobbyLevel");

	AGameReplicationInfo_IsAtLobbyLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetFinalWaveNumber
// (Simulated, Event, Public)

void AGameReplicationInfo::GetFinalWaveNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetFinalWaveNumber");

	AGameReplicationInfo_GetFinalWaveNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetWaveNumber
// (Simulated, Event, Public)

void AGameReplicationInfo::GetWaveNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetWaveNumber");

	AGameReplicationInfo_GetWaveNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.IsInHardCoreMode
// (Simulated, Event, Public)

void AGameReplicationInfo::IsInHardCoreMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.IsInHardCoreMode");

	AGameReplicationInfo_IsInHardCoreMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetGameDifficultyAsInt
// (Simulated, Event, HasOptionalParms, Public)

void AGameReplicationInfo::GetGameDifficultyAsInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetGameDifficultyAsInt");

	AGameReplicationInfo_GetGameDifficultyAsInt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameReplicationInfo.GetLevelFriendlyNameWithoutFormatting
// (Simulated, Event, Public)

void AGameReplicationInfo::GetLevelFriendlyNameWithoutFormatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameReplicationInfo.GetLevelFriendlyNameWithoutFormatting");

	AGameReplicationInfo_GetLevelFriendlyNameWithoutFormatting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.UnregisterPlayerFromSession
// (Defined, Simulated, Public, HasDefaults)

void APlayerReplicationInfo::UnregisterPlayerFromSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.UnregisterPlayerFromSession");

	APlayerReplicationInfo_UnregisterPlayerFromSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.RegisterPlayerWithSession
// (Defined, Simulated, Public)

void APlayerReplicationInfo::RegisterPlayerWithSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.RegisterPlayerWithSession");

	APlayerReplicationInfo_RegisterPlayerWithSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.IsInvalidName
// (Defined, Simulated, Public)

void APlayerReplicationInfo::IsInvalidName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.IsInvalidName");

	APlayerReplicationInfo_IsInvalidName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.GetTeamNum
// (Simulated, Native, Public)

void APlayerReplicationInfo::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.GetTeamNum");

	APlayerReplicationInfo_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SetUniqueId
// (Defined, Simulated, Public)

void APlayerReplicationInfo::SetUniqueId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SetUniqueId");

	APlayerReplicationInfo_SetUniqueId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.ServerSetSplitscreenIndex
// (Defined, Net, NetReliable, Public, NetServer)

void APlayerReplicationInfo::ServerSetSplitscreenIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.ServerSetSplitscreenIndex");

	APlayerReplicationInfo_ServerSetSplitscreenIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SetSplitscreenIndex
// (Defined, Simulated, Public)

void APlayerReplicationInfo::SetSplitscreenIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SetSplitscreenIndex");

	APlayerReplicationInfo_SetSplitscreenIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.IsLocalPlayerPRI
// (Defined, Simulated, Public)

void APlayerReplicationInfo::IsLocalPlayerPRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.IsLocalPlayerPRI");

	APlayerReplicationInfo_IsLocalPlayerPRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.BindPlayerOwnerDataProvider
// (Defined, Simulated, Public)

void APlayerReplicationInfo::BindPlayerOwnerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.BindPlayerOwnerDataProvider");

	APlayerReplicationInfo_BindPlayerOwnerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.NotifyLocalPlayerTeamReceived
// (Defined, Simulated, Public)

void APlayerReplicationInfo::NotifyLocalPlayerTeamReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.NotifyLocalPlayerTeamReceived");

	APlayerReplicationInfo_NotifyLocalPlayerTeamReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.UpdateTeamDataProvider
// (Defined, Simulated, Public)

void APlayerReplicationInfo::UpdateTeamDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.UpdateTeamDataProvider");

	APlayerReplicationInfo_UpdateTeamDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.UpdatePlayerDataProvider
// (Defined, Simulated, HasOptionalParms, Public)

void APlayerReplicationInfo::UpdatePlayerDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.UpdatePlayerDataProvider");

	APlayerReplicationInfo_UpdatePlayerDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.GetCurrentGameDS
// (Defined, Simulated, Public)

void APlayerReplicationInfo::GetCurrentGameDS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.GetCurrentGameDS");

	APlayerReplicationInfo_GetCurrentGameDS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SeamlessTravelTo
// (Defined, Public)

void APlayerReplicationInfo::SeamlessTravelTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SeamlessTravelTo");

	APlayerReplicationInfo_SeamlessTravelTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.IncrementDeaths
// (Defined, HasOptionalParms, Public)

void APlayerReplicationInfo::IncrementDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.IncrementDeaths");

	APlayerReplicationInfo_IncrementDeaths_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.CopyProperties
// (Defined, Public)

void APlayerReplicationInfo::CopyProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.CopyProperties");

	APlayerReplicationInfo_CopyProperties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.OverrideWith
// (Defined, Public)

void APlayerReplicationInfo::OverrideWith()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.OverrideWith");

	APlayerReplicationInfo_OverrideWith_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.Duplicate
// (Defined, Public)

void APlayerReplicationInfo::Duplicate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.Duplicate");

	APlayerReplicationInfo_Duplicate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SetWaitingPlayer
// (Defined, Public)

void APlayerReplicationInfo::SetWaitingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SetWaitingPlayer");

	APlayerReplicationInfo_SetWaitingPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SetPlayerName
// (Defined, Event, Public)

void APlayerReplicationInfo::SetPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SetPlayerName");

	APlayerReplicationInfo_SetPlayerName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.Timer
// (Defined, Event, Public)

void APlayerReplicationInfo::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.Timer");

	APlayerReplicationInfo_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void APlayerReplicationInfo::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.DisplayDebug");

	APlayerReplicationInfo_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.UpdatePlayerLocation
// (Defined, Public)

void APlayerReplicationInfo::UpdatePlayerLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.UpdatePlayerLocation");

	APlayerReplicationInfo_UpdatePlayerLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.GetLocationName
// (Defined, Simulated, Public)

void APlayerReplicationInfo::GetLocationName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.GetLocationName");

	APlayerReplicationInfo_GetLocationName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.GetHumanReadableName
// (Defined, Simulated, Public)

void APlayerReplicationInfo::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.GetHumanReadableName");

	APlayerReplicationInfo_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.Reset
// (Defined, Public)

void APlayerReplicationInfo::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.Reset");

	APlayerReplicationInfo_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.Destroyed
// (Defined, Simulated, Event, Public)

void APlayerReplicationInfo::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.Destroyed");

	APlayerReplicationInfo_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.ShouldBroadCastWelcomeMessage
// (Defined, Simulated, HasOptionalParms, Public)

void APlayerReplicationInfo::ShouldBroadCastWelcomeMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.ShouldBroadCastWelcomeMessage");

	APlayerReplicationInfo_ShouldBroadCastWelcomeMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.UpdatePing
// (Final, Native, Public)

void APlayerReplicationInfo::UpdatePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.UpdatePing");

	APlayerReplicationInfo_UpdatePing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.ReplicatedDataBinding
// (Defined, Simulated, Event, Public)

void APlayerReplicationInfo::ReplicatedDataBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.ReplicatedDataBinding");

	APlayerReplicationInfo_ReplicatedDataBinding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void APlayerReplicationInfo::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.ReplicatedEvent");

	APlayerReplicationInfo_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.SetPlayerTeam
// (Defined, Public)

void APlayerReplicationInfo::SetPlayerTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.SetPlayerTeam");

	APlayerReplicationInfo_SetPlayerTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.ClientInitialize
// (Defined, Simulated, Public)

void APlayerReplicationInfo::ClientInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.ClientInitialize");

	APlayerReplicationInfo_ClientInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.PostBeginPlay
// (Defined, Simulated, Event, Public)

void APlayerReplicationInfo::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.PostBeginPlay");

	APlayerReplicationInfo_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PlayerReplicationInfo.GetPlayerAlias
// (Native, Public)

void APlayerReplicationInfo::GetPlayerAlias()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PlayerReplicationInfo.GetPlayerAlias");

	APlayerReplicationInfo_GetPlayerAlias_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.GetTeamNum
// (Simulated, Native, Public)

void ATeamInfo::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.GetTeamNum");

	ATeamInfo_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.GetTextColor
// (Defined, Public)

void ATeamInfo::GetTextColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.GetTextColor");

	ATeamInfo_GetTextColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.GetHUDColor
// (Defined, Simulated, Public)

void ATeamInfo::GetHUDColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.GetHUDColor");

	ATeamInfo_GetHUDColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.GetHumanReadableName
// (Defined, Simulated, Public)

void ATeamInfo::GetHumanReadableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.GetHumanReadableName");

	ATeamInfo_GetHumanReadableName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.RemoveFromTeam
// (Defined, Public)

void ATeamInfo::RemoveFromTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.RemoveFromTeam");

	ATeamInfo_RemoveFromTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.AddToTeam
// (Defined, Public)

void ATeamInfo::AddToTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.AddToTeam");

	ATeamInfo_AddToTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.Destroyed
// (Defined, Simulated, Event, Public)

void ATeamInfo::Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.Destroyed");

	ATeamInfo_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.UnbindTeamDataProvider
// (Defined, Simulated, Public)

void ATeamInfo::UnbindTeamDataProvider()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.UnbindTeamDataProvider");

	ATeamInfo_UnbindTeamDataProvider_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.GetCurrentGameDS
// (Defined, Simulated, Public)

void ATeamInfo::GetCurrentGameDS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.GetCurrentGameDS");

	ATeamInfo_GetCurrentGameDS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TeamInfo.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void ATeamInfo::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TeamInfo.ReplicatedEvent");

	ATeamInfo_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraActor.DisplayDebug
// (Defined, Simulated, Public, HasOutParms)

void ACameraActor::DisplayDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraActor.DisplayDebug");

	ACameraActor_DisplayDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraActor.GetCameraView
// (Defined, Simulated, Public, HasOutParms)

void ACameraActor::GetCameraView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraActor.GetCameraView");

	ACameraActor_GetCameraView_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.SetPlaySpace
// (Final, Native, HasOptionalParms, Public)

void UCameraAnimInst::SetPlaySpace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.SetPlaySpace");

	UCameraAnimInst_SetPlaySpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.ApplyTransientScaling
// (Final, Native, Public)

void UCameraAnimInst::ApplyTransientScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.ApplyTransientScaling");

	UCameraAnimInst_ApplyTransientScaling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.Stop
// (Final, Native, HasOptionalParms, Public)

void UCameraAnimInst::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.Stop");

	UCameraAnimInst_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.AdvanceAnim
// (Final, Native, Public)

void UCameraAnimInst::AdvanceAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.AdvanceAnim");

	UCameraAnimInst_AdvanceAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.Update
// (Final, Native, HasOptionalParms, Public)

void UCameraAnimInst::Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.Update");

	UCameraAnimInst_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraAnimInst.Play
// (Final, Native, HasOptionalParms, Public)

void UCameraAnimInst::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraAnimInst.Play");

	UCameraAnimInst_Play_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.UpdateAlpha
// (Native, Public)

void UCameraModifier::UpdateAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.UpdateAlpha");

	UCameraModifier_UpdateAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.ProcessViewRotation
// (Simulated, Public, HasOutParms)

void UCameraModifier::ProcessViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.ProcessViewRotation");

	UCameraModifier_ProcessViewRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.ToggleModifier
// (Defined, Public)

void UCameraModifier::ToggleModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.ToggleModifier");

	UCameraModifier_ToggleModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.EnableModifier
// (Defined, Public)

void UCameraModifier::EnableModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.EnableModifier");

	UCameraModifier_EnableModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.DisableModifier
// (Defined, Event, HasOptionalParms, Public)

void UCameraModifier::DisableModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.DisableModifier");

	UCameraModifier_DisableModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.RemoveCameraModifier
// (Defined, Public)

void UCameraModifier::RemoveCameraModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.RemoveCameraModifier");

	UCameraModifier_RemoveCameraModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.AddCameraModifier
// (Defined, Public)

void UCameraModifier::AddCameraModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.AddCameraModifier");

	UCameraModifier_AddCameraModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.IsDisabled
// (Native, Public)

void UCameraModifier::IsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.IsDisabled");

	UCameraModifier_IsDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.ModifyCamera
// (Native, Public, HasOutParms)

void UCameraModifier::ModifyCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.ModifyCamera");

	UCameraModifier_ModifyCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier.Init
// (Public)

void UCameraModifier::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier.Init");

	UCameraModifier_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraShake.GetLocOscillationMagnitude
// (Defined, Simulated, Public, HasDefaults)

void UCameraShake::GetLocOscillationMagnitude()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraShake.GetLocOscillationMagnitude");

	UCameraShake_GetLocOscillationMagnitude_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraShake.GetRotOscillationMagnitude
// (Defined, Simulated, Public, HasDefaults)

void UCameraShake::GetRotOscillationMagnitude()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraShake.GetRotOscillationMagnitude");

	UCameraShake_GetRotOscillationMagnitude_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.ModifyCamera
// (Native, Public, HasOutParms)

void UCameraModifier_CameraShake::ModifyCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.ModifyCamera");

	UCameraModifier_CameraShake_ModifyCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.UpdateCameraShake
// (Native, Public, HasOutParms)

void UCameraModifier_CameraShake::UpdateCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.UpdateCameraShake");

	UCameraModifier_CameraShake_UpdateCameraShake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.RemoveAllCameraShakes
// (Defined, Public)

void UCameraModifier_CameraShake::RemoveAllCameraShakes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.RemoveAllCameraShakes");

	UCameraModifier_CameraShake_RemoveAllCameraShakes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.RemoveCameraShake
// (Defined, Public)

void UCameraModifier_CameraShake::RemoveCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.RemoveCameraShake");

	UCameraModifier_CameraShake_RemoveCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.AddCameraShake
// (Defined, HasOptionalParms, Public)

void UCameraModifier_CameraShake::AddCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.AddCameraShake");

	UCameraModifier_CameraShake_AddCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.InitializeShake
// (Defined, HasOptionalParms, Protected, HasDefaults)

void UCameraModifier_CameraShake::InitializeShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.InitializeShake");

	UCameraModifier_CameraShake_InitializeShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.ReinitShake
// (Defined, Protected)

void UCameraModifier_CameraShake::ReinitShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.ReinitShake");

	UCameraModifier_CameraShake_ReinitShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CameraModifier_CameraShake.InitializeOffset
// (Defined, Static, Protected, HasOutParms)

void UCameraModifier_CameraShake::STATIC_InitializeOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CameraModifier_CameraShake.InitializeOffset");

	UCameraModifier_CameraShake_InitializeOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.PartiallyDuplicates
// (Defined, Static, Public)

void ULocalMessage::STATIC_PartiallyDuplicates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.PartiallyDuplicates");

	ULocalMessage_PartiallyDuplicates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.IsKeyObjectiveMessage
// (Defined, Static, Public)

void ULocalMessage::STATIC_IsKeyObjectiveMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.IsKeyObjectiveMessage");

	ULocalMessage_IsKeyObjectiveMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.IsConsoleMessage
// (Defined, Static, Public)

void ULocalMessage::STATIC_IsConsoleMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.IsConsoleMessage");

	ULocalMessage_IsConsoleMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetLifeTime
// (Defined, Static, Public)

void ULocalMessage::STATIC_GetLifeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetLifeTime");

	ULocalMessage_GetLifeTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetFontSize
// (Defined, Static, Public)

void ULocalMessage::STATIC_GetFontSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetFontSize");

	ULocalMessage_GetFontSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetPos
// (Defined, Static, Public)

void ULocalMessage::STATIC_GetPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetPos");

	ULocalMessage_GetPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetColor
// (Defined, Static, HasOptionalParms, Public)

void ULocalMessage::STATIC_GetColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetColor");

	ULocalMessage_GetColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetConsoleColor
// (Defined, Static, Public)

void ULocalMessage::STATIC_GetConsoleColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetConsoleColor");

	ULocalMessage_GetConsoleColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.GetString
// (Defined, Static, HasOptionalParms, Public)

void ULocalMessage::STATIC_GetString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.GetString");

	ULocalMessage_GetString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.LocalMessage.ClientReceive
// (Defined, Static, HasOptionalParms, Public)

void ULocalMessage::STATIC_ClientReceive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.LocalMessage.ClientReceive");

	ULocalMessage_ClientReceive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetVelocity.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetVelocity::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetVelocity.GetObjClassVersion");

	USeqAct_SetVelocity_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleHidden.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleHidden::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleHidden.IsValidUISequenceObject");

	USeqAct_ToggleHidden_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_AttachToActor.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_AttachToActor::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_AttachToActor.GetObjClassVersion");

	USeqAct_AttachToActor_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.ShowCommunitySessionsUI
// (Public)

void UOnlinePartyChatInterface::ShowCommunitySessionsUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.ShowCommunitySessionsUI");

	UOnlinePartyChatInterface_ShowCommunitySessionsUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.ShowVoiceChannelUI
// (Public)

void UOnlinePartyChatInterface::ShowVoiceChannelUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.ShowVoiceChannelUI");

	UOnlinePartyChatInterface_ShowVoiceChannelUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.ShowPartyUI
// (Public)

void UOnlinePartyChatInterface::ShowPartyUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.ShowPartyUI");

	UOnlinePartyChatInterface_ShowPartyUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.GetPartyBandwidth
// (Public)

void UOnlinePartyChatInterface::GetPartyBandwidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.GetPartyBandwidth");

	UOnlinePartyChatInterface_GetPartyBandwidth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.SetPartyMemberCustomData
// (Public)

void UOnlinePartyChatInterface::SetPartyMemberCustomData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.SetPartyMemberCustomData");

	UOnlinePartyChatInterface_SetPartyMemberCustomData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.GetPartyMemberInformation
// (Public, HasOutParms)

void UOnlinePartyChatInterface::GetPartyMemberInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.GetPartyMemberInformation");

	UOnlinePartyChatInterface_GetPartyMemberInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.ClearSendPartyGameInvitesCompleteDelegate
// (Public)

void UOnlinePartyChatInterface::ClearSendPartyGameInvitesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.ClearSendPartyGameInvitesCompleteDelegate");

	UOnlinePartyChatInterface_ClearSendPartyGameInvitesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.AddSendPartyGameInvitesCompleteDelegate
// (Public)

void UOnlinePartyChatInterface::AddSendPartyGameInvitesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.AddSendPartyGameInvitesCompleteDelegate");

	UOnlinePartyChatInterface_AddSendPartyGameInvitesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.OnSendPartyGameInvitesComplete
// (Public, Delegate)

void UOnlinePartyChatInterface::OnSendPartyGameInvitesComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.OnSendPartyGameInvitesComplete");

	UOnlinePartyChatInterface_OnSendPartyGameInvitesComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePartyChatInterface.SendPartyGameInvites
// (Public)

void UOnlinePartyChatInterface::SendPartyGameInvites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePartyChatInterface.SendPartyGameInvites");

	UOnlinePartyChatInterface_SendPartyGameInvites_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineNewsInterface.GetNews
// (Public)

void UOnlineNewsInterface::GetNews()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineNewsInterface.GetNews");

	UOnlineNewsInterface_GetNews_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineNewsInterface.ClearReadNewsCompletedDelegate
// (Public)

void UOnlineNewsInterface::ClearReadNewsCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineNewsInterface.ClearReadNewsCompletedDelegate");

	UOnlineNewsInterface_ClearReadNewsCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineNewsInterface.AddReadNewsCompletedDelegate
// (Public)

void UOnlineNewsInterface::AddReadNewsCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineNewsInterface.AddReadNewsCompletedDelegate");

	UOnlineNewsInterface_AddReadNewsCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineNewsInterface.OnReadNewsCompleted
// (Public, Delegate)

void UOnlineNewsInterface::OnReadNewsCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineNewsInterface.OnReadNewsCompleted");

	UOnlineNewsInterface_OnReadNewsCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineNewsInterface.ReadNews
// (Public)

void UOnlineNewsInterface::ReadNews()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineNewsInterface.ReadNews");

	UOnlineNewsInterface_ReadNews_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.RegisterStatGuid
// (Public, HasOutParms)

void UOnlineStatsInterface::RegisterStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.RegisterStatGuid");

	UOnlineStatsInterface_RegisterStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.GetClientStatGuid
// (Public)

void UOnlineStatsInterface::GetClientStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.GetClientStatGuid");

	UOnlineStatsInterface_GetClientStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ClearRegisterHostStatGuidCompleteDelegateDelegate
// (Public)

void UOnlineStatsInterface::ClearRegisterHostStatGuidCompleteDelegateDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ClearRegisterHostStatGuidCompleteDelegateDelegate");

	UOnlineStatsInterface_ClearRegisterHostStatGuidCompleteDelegateDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.AddRegisterHostStatGuidCompleteDelegate
// (Public)

void UOnlineStatsInterface::AddRegisterHostStatGuidCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.AddRegisterHostStatGuidCompleteDelegate");

	UOnlineStatsInterface_AddRegisterHostStatGuidCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.OnRegisterHostStatGuidComplete
// (Public, Delegate)

void UOnlineStatsInterface::OnRegisterHostStatGuidComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.OnRegisterHostStatGuidComplete");

	UOnlineStatsInterface_OnRegisterHostStatGuidComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.RegisterHostStatGuid
// (Public, HasOutParms)

void UOnlineStatsInterface::RegisterHostStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.RegisterHostStatGuid");

	UOnlineStatsInterface_RegisterHostStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.GetHostStatGuid
// (Public)

void UOnlineStatsInterface::GetHostStatGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.GetHostStatGuid");

	UOnlineStatsInterface_GetHostStatGuid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.WriteOnlinePlayerScores
// (Public, HasOutParms)

void UOnlineStatsInterface::WriteOnlinePlayerScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.WriteOnlinePlayerScores");

	UOnlineStatsInterface_WriteOnlinePlayerScores_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ClearAllFlushOnlineStatsCompleteDelegates
// (Public)

void UOnlineStatsInterface::ClearAllFlushOnlineStatsCompleteDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ClearAllFlushOnlineStatsCompleteDelegates");

	UOnlineStatsInterface_ClearAllFlushOnlineStatsCompleteDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ClearFlushOnlineStatsCompleteDelegate
// (Public)

void UOnlineStatsInterface::ClearFlushOnlineStatsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ClearFlushOnlineStatsCompleteDelegate");

	UOnlineStatsInterface_ClearFlushOnlineStatsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.AddFlushOnlineStatsCompleteDelegate
// (Public)

void UOnlineStatsInterface::AddFlushOnlineStatsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.AddFlushOnlineStatsCompleteDelegate");

	UOnlineStatsInterface_AddFlushOnlineStatsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.OnFlushOnlineStatsComplete
// (Public, Delegate)

void UOnlineStatsInterface::OnFlushOnlineStatsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.OnFlushOnlineStatsComplete");

	UOnlineStatsInterface_OnFlushOnlineStatsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.FlushOnlineStats
// (Public)

void UOnlineStatsInterface::FlushOnlineStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.FlushOnlineStats");

	UOnlineStatsInterface_FlushOnlineStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.WriteOnlineStats
// (Public)

void UOnlineStatsInterface::WriteOnlineStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.WriteOnlineStats");

	UOnlineStatsInterface_WriteOnlineStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.FreeStats
// (Public)

void UOnlineStatsInterface::FreeStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.FreeStats");

	UOnlineStatsInterface_FreeStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ClearReadOnlineStatsCompleteDelegate
// (Public)

void UOnlineStatsInterface::ClearReadOnlineStatsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ClearReadOnlineStatsCompleteDelegate");

	UOnlineStatsInterface_ClearReadOnlineStatsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.AddReadOnlineStatsCompleteDelegate
// (Public)

void UOnlineStatsInterface::AddReadOnlineStatsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.AddReadOnlineStatsCompleteDelegate");

	UOnlineStatsInterface_AddReadOnlineStatsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.OnReadOnlineStatsComplete
// (Public, Delegate)

void UOnlineStatsInterface::OnReadOnlineStatsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.OnReadOnlineStatsComplete");

	UOnlineStatsInterface_OnReadOnlineStatsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ReadOnlineStatsByRankAroundPlayer
// (HasOptionalParms, Public)

void UOnlineStatsInterface::ReadOnlineStatsByRankAroundPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ReadOnlineStatsByRankAroundPlayer");

	UOnlineStatsInterface_ReadOnlineStatsByRankAroundPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ReadOnlineStatsByRank
// (HasOptionalParms, Public)

void UOnlineStatsInterface::ReadOnlineStatsByRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ReadOnlineStatsByRank");

	UOnlineStatsInterface_ReadOnlineStatsByRank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ReadOnlineStatsForFriends
// (Public)

void UOnlineStatsInterface::ReadOnlineStatsForFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ReadOnlineStatsForFriends");

	UOnlineStatsInterface_ReadOnlineStatsForFriends_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineStatsInterface.ReadOnlineStats
// (Public, HasOutParms)

void UOnlineStatsInterface::ReadOnlineStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineStatsInterface.ReadOnlineStats");

	UOnlineStatsInterface_ReadOnlineStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.ClearDeviceFoundDelegate
// (Public)

void UOnlineVoiceInterface::ClearDeviceFoundDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.ClearDeviceFoundDelegate");

	UOnlineVoiceInterface_ClearDeviceFoundDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.AddDeviceFoundDelegate
// (Public)

void UOnlineVoiceInterface::AddDeviceFoundDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.AddDeviceFoundDelegate");

	UOnlineVoiceInterface_AddDeviceFoundDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.OnDeviceFound
// (Public, Delegate)

void UOnlineVoiceInterface::OnDeviceFound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.OnDeviceFound");

	UOnlineVoiceInterface_OnDeviceFound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.HasBeenRegistered
// (Public)

void UOnlineVoiceInterface::HasBeenRegistered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.HasBeenRegistered");

	UOnlineVoiceInterface_HasBeenRegistered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.SetCaptureVolume
// (Public)

void UOnlineVoiceInterface::SetCaptureVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.SetCaptureVolume");

	UOnlineVoiceInterface_SetCaptureVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.SetPlaybackVolume
// (Public)

void UOnlineVoiceInterface::SetPlaybackVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.SetPlaybackVolume");

	UOnlineVoiceInterface_SetPlaybackVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.UnmuteAll
// (Public)

void UOnlineVoiceInterface::UnmuteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.UnmuteAll");

	UOnlineVoiceInterface_UnmuteAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.MuteAll
// (Public)

void UOnlineVoiceInterface::MuteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.MuteAll");

	UOnlineVoiceInterface_MuteAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.SetSpeechRecognitionObject
// (Public)

void UOnlineVoiceInterface::SetSpeechRecognitionObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.SetSpeechRecognitionObject");

	UOnlineVoiceInterface_SetSpeechRecognitionObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.SelectVocabulary
// (Public)

void UOnlineVoiceInterface::SelectVocabulary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.SelectVocabulary");

	UOnlineVoiceInterface_SelectVocabulary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.ClearRecognitionCompleteDelegate
// (Public)

void UOnlineVoiceInterface::ClearRecognitionCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.ClearRecognitionCompleteDelegate");

	UOnlineVoiceInterface_ClearRecognitionCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.AddRecognitionCompleteDelegate
// (Public)

void UOnlineVoiceInterface::AddRecognitionCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.AddRecognitionCompleteDelegate");

	UOnlineVoiceInterface_AddRecognitionCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.OnRecognitionComplete
// (Public, Delegate)

void UOnlineVoiceInterface::OnRecognitionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.OnRecognitionComplete");

	UOnlineVoiceInterface_OnRecognitionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.GetRecognitionResults
// (Public, HasOutParms)

void UOnlineVoiceInterface::GetRecognitionResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.GetRecognitionResults");

	UOnlineVoiceInterface_GetRecognitionResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.StopSpeechRecognition
// (Public)

void UOnlineVoiceInterface::StopSpeechRecognition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.StopSpeechRecognition");

	UOnlineVoiceInterface_StopSpeechRecognition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.StartSpeechRecognition
// (Public)

void UOnlineVoiceInterface::StartSpeechRecognition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.StartSpeechRecognition");

	UOnlineVoiceInterface_StartSpeechRecognition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.StopNetworkedVoice
// (Public)

void UOnlineVoiceInterface::StopNetworkedVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.StopNetworkedVoice");

	UOnlineVoiceInterface_StopNetworkedVoice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.StartNetworkedVoice
// (Public)

void UOnlineVoiceInterface::StartNetworkedVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.StartNetworkedVoice");

	UOnlineVoiceInterface_StartNetworkedVoice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.ClearPlayerTalkingDelegates
// (Public)

void UOnlineVoiceInterface::ClearPlayerTalkingDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.ClearPlayerTalkingDelegates");

	UOnlineVoiceInterface_ClearPlayerTalkingDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.ClearPlayerStoppedTalkingDelegate
// (Public)

void UOnlineVoiceInterface::ClearPlayerStoppedTalkingDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.ClearPlayerStoppedTalkingDelegate");

	UOnlineVoiceInterface_ClearPlayerStoppedTalkingDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.AddPlayerStoppedTalkingDelegate
// (Public)

void UOnlineVoiceInterface::AddPlayerStoppedTalkingDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.AddPlayerStoppedTalkingDelegate");

	UOnlineVoiceInterface_AddPlayerStoppedTalkingDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.ClearPlayerStartedTalkingDelegate
// (Public)

void UOnlineVoiceInterface::ClearPlayerStartedTalkingDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.ClearPlayerStartedTalkingDelegate");

	UOnlineVoiceInterface_ClearPlayerStartedTalkingDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.AddPlayerStartedTalkingDelegate
// (Public)

void UOnlineVoiceInterface::AddPlayerStartedTalkingDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.AddPlayerStartedTalkingDelegate");

	UOnlineVoiceInterface_AddPlayerStartedTalkingDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.OnPlayerStopTalking
// (Public, Delegate)

void UOnlineVoiceInterface::OnPlayerStopTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.OnPlayerStopTalking");

	UOnlineVoiceInterface_OnPlayerStopTalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.OnPlayerBeginTalking
// (Public, Delegate)

void UOnlineVoiceInterface::OnPlayerBeginTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.OnPlayerBeginTalking");

	UOnlineVoiceInterface_OnPlayerBeginTalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.UnmuteRemoteTalker
// (Public)

void UOnlineVoiceInterface::UnmuteRemoteTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.UnmuteRemoteTalker");

	UOnlineVoiceInterface_UnmuteRemoteTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.MuteRemoteTalker
// (Public)

void UOnlineVoiceInterface::MuteRemoteTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.MuteRemoteTalker");

	UOnlineVoiceInterface_MuteRemoteTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.SetRemoteTalkerPriority
// (Public)

void UOnlineVoiceInterface::SetRemoteTalkerPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.SetRemoteTalkerPriority");

	UOnlineVoiceInterface_SetRemoteTalkerPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.IsHeadsetPresent
// (Public)

void UOnlineVoiceInterface::IsHeadsetPresent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.IsHeadsetPresent");

	UOnlineVoiceInterface_IsHeadsetPresent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.IsRemotePlayerTalking
// (Public)

void UOnlineVoiceInterface::IsRemotePlayerTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.IsRemotePlayerTalking");

	UOnlineVoiceInterface_IsRemotePlayerTalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.IsLocalPlayerTalking
// (Public)

void UOnlineVoiceInterface::IsLocalPlayerTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.IsLocalPlayerTalking");

	UOnlineVoiceInterface_IsLocalPlayerTalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.UnregisterRemoteTalker
// (Public)

void UOnlineVoiceInterface::UnregisterRemoteTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.UnregisterRemoteTalker");

	UOnlineVoiceInterface_UnregisterRemoteTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.RegisterRemoteTalker
// (Public)

void UOnlineVoiceInterface::RegisterRemoteTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.RegisterRemoteTalker");

	UOnlineVoiceInterface_RegisterRemoteTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.UnregisterLocalTalker
// (Public)

void UOnlineVoiceInterface::UnregisterLocalTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.UnregisterLocalTalker");

	UOnlineVoiceInterface_UnregisterLocalTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineVoiceInterface.RegisterLocalTalker
// (Public)

void UOnlineVoiceInterface::RegisterLocalTalker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineVoiceInterface.RegisterLocalTalker");

	UOnlineVoiceInterface_RegisterLocalTalker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.ClearQuerySubscribedDownloadsComplete
// (Public)

void UOnlineContentInterface::ClearQuerySubscribedDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.ClearQuerySubscribedDownloadsComplete");

	UOnlineContentInterface_ClearQuerySubscribedDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.AddQuerySubscribedDownloadsComplete
// (Public)

void UOnlineContentInterface::AddQuerySubscribedDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.AddQuerySubscribedDownloadsComplete");

	UOnlineContentInterface_AddQuerySubscribedDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.OnQuerySubscribedDownloadsComplete
// (Public, Delegate)

void UOnlineContentInterface::OnQuerySubscribedDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.OnQuerySubscribedDownloadsComplete");

	UOnlineContentInterface_OnQuerySubscribedDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.SubscribedDownloadsInformation
// (Public)

void UOnlineContentInterface::SubscribedDownloadsInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.SubscribedDownloadsInformation");

	UOnlineContentInterface_SubscribedDownloadsInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.QuerySubscribedDownloads
// (Public)

void UOnlineContentInterface::QuerySubscribedDownloads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.QuerySubscribedDownloads");

	UOnlineContentInterface_QuerySubscribedDownloads_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.GetAvailableDownloadCounts
// (Public, HasOutParms)

void UOnlineContentInterface::GetAvailableDownloadCounts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.GetAvailableDownloadCounts");

	UOnlineContentInterface_GetAvailableDownloadCounts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.ClearQueryAvailableDownloadsComplete
// (Public)

void UOnlineContentInterface::ClearQueryAvailableDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.ClearQueryAvailableDownloadsComplete");

	UOnlineContentInterface_ClearQueryAvailableDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.AddQueryAvailableDownloadsComplete
// (Public)

void UOnlineContentInterface::AddQueryAvailableDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.AddQueryAvailableDownloadsComplete");

	UOnlineContentInterface_AddQueryAvailableDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.OnQueryAvailableDownloadsComplete
// (Public, Delegate)

void UOnlineContentInterface::OnQueryAvailableDownloadsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.OnQueryAvailableDownloadsComplete");

	UOnlineContentInterface_OnQueryAvailableDownloadsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.QueryAvailableDownloads
// (HasOptionalParms, Public)

void UOnlineContentInterface::QueryAvailableDownloads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.QueryAvailableDownloads");

	UOnlineContentInterface_QueryAvailableDownloads_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.GetContentList
// (Public, HasOutParms)

void UOnlineContentInterface::GetContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.GetContentList");

	UOnlineContentInterface_GetContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.ReadContentList
// (Public)

void UOnlineContentInterface::ReadContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.ReadContentList");

	UOnlineContentInterface_ReadContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.ClearReadContentComplete
// (Public)

void UOnlineContentInterface::ClearReadContentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.ClearReadContentComplete");

	UOnlineContentInterface_ClearReadContentComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.AddReadContentComplete
// (Public)

void UOnlineContentInterface::AddReadContentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.AddReadContentComplete");

	UOnlineContentInterface_AddReadContentComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.OnReadContentComplete
// (Public, Delegate)

void UOnlineContentInterface::OnReadContentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.OnReadContentComplete");

	UOnlineContentInterface_OnReadContentComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.ClearContentChangeDelegate
// (HasOptionalParms, Public)

void UOnlineContentInterface::ClearContentChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.ClearContentChangeDelegate");

	UOnlineContentInterface_ClearContentChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.AddContentChangeDelegate
// (HasOptionalParms, Public)

void UOnlineContentInterface::AddContentChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.AddContentChangeDelegate");

	UOnlineContentInterface_AddContentChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineContentInterface.OnContentChange
// (Public, Delegate)

void UOnlineContentInterface::OnContentChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineContentInterface.OnContentChange");

	UOnlineContentInterface_OnContentChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.CancelPendingAsyncTasks
// (Public)

void UOnlineGameInterface::CancelPendingAsyncTasks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.CancelPendingAsyncTasks");

	UOnlineGameInterface_CancelPendingAsyncTasks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.RecalculateSkillRating
// (Public, HasOutParms)

void UOnlineGameInterface::RecalculateSkillRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.RecalculateSkillRating");

	UOnlineGameInterface_RecalculateSkillRating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AcceptGameInvite
// (HasOptionalParms, Public)

void UOnlineGameInterface::AcceptGameInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AcceptGameInvite");

	UOnlineGameInterface_AcceptGameInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearGameInviteAcceptedDelegate
// (Public)

void UOnlineGameInterface::ClearGameInviteAcceptedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearGameInviteAcceptedDelegate");

	UOnlineGameInterface_ClearGameInviteAcceptedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddGameInviteAcceptedDelegate
// (Public)

void UOnlineGameInterface::AddGameInviteAcceptedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddGameInviteAcceptedDelegate");

	UOnlineGameInterface_AddGameInviteAcceptedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnGameInviteAccepted
// (Public, Delegate, HasOutParms)

void UOnlineGameInterface::OnGameInviteAccepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnGameInviteAccepted");

	UOnlineGameInterface_OnGameInviteAccepted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.GetArbitratedPlayers
// (Public)

void UOnlineGameInterface::GetArbitratedPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.GetArbitratedPlayers");

	UOnlineGameInterface_GetArbitratedPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearArbitrationRegistrationCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearArbitrationRegistrationCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearArbitrationRegistrationCompleteDelegate");

	UOnlineGameInterface_ClearArbitrationRegistrationCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddArbitrationRegistrationCompleteDelegate
// (Public)

void UOnlineGameInterface::AddArbitrationRegistrationCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddArbitrationRegistrationCompleteDelegate");

	UOnlineGameInterface_AddArbitrationRegistrationCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnArbitrationRegistrationComplete
// (Public, Delegate)

void UOnlineGameInterface::OnArbitrationRegistrationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnArbitrationRegistrationComplete");

	UOnlineGameInterface_OnArbitrationRegistrationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.RegisterForArbitration
// (Public)

void UOnlineGameInterface::RegisterForArbitration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.RegisterForArbitration");

	UOnlineGameInterface_RegisterForArbitration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearEndOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearEndOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearEndOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearEndOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddEndOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddEndOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddEndOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddEndOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnEndOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnEndOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnEndOnlineGameComplete");

	UOnlineGameInterface_OnEndOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.EndOnlineGame
// (Public)

void UOnlineGameInterface::EndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.EndOnlineGame");

	UOnlineGameInterface_EndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearStartOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearStartOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearStartOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearStartOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddStartOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddStartOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddStartOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddStartOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnStartOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnStartOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnStartOnlineGameComplete");

	UOnlineGameInterface_OnStartOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.StartOnlineGame
// (Public)

void UOnlineGameInterface::StartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.StartOnlineGame");

	UOnlineGameInterface_StartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearUnregisterPlayerCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearUnregisterPlayerCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearUnregisterPlayerCompleteDelegate");

	UOnlineGameInterface_ClearUnregisterPlayerCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddUnregisterPlayerCompleteDelegate
// (Public)

void UOnlineGameInterface::AddUnregisterPlayerCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddUnregisterPlayerCompleteDelegate");

	UOnlineGameInterface_AddUnregisterPlayerCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnUnregisterPlayerComplete
// (Public, Delegate)

void UOnlineGameInterface::OnUnregisterPlayerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnUnregisterPlayerComplete");

	UOnlineGameInterface_OnUnregisterPlayerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.UnregisterPlayer
// (Public)

void UOnlineGameInterface::UnregisterPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.UnregisterPlayer");

	UOnlineGameInterface_UnregisterPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearRegisterPlayerCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearRegisterPlayerCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearRegisterPlayerCompleteDelegate");

	UOnlineGameInterface_ClearRegisterPlayerCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddRegisterPlayerCompleteDelegate
// (Public)

void UOnlineGameInterface::AddRegisterPlayerCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddRegisterPlayerCompleteDelegate");

	UOnlineGameInterface_AddRegisterPlayerCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnRegisterPlayerComplete
// (Public, Delegate)

void UOnlineGameInterface::OnRegisterPlayerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnRegisterPlayerComplete");

	UOnlineGameInterface_OnRegisterPlayerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.RegisterPlayer
// (Public)

void UOnlineGameInterface::RegisterPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.RegisterPlayer");

	UOnlineGameInterface_RegisterPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.GetResolvedConnectString
// (Public, HasOutParms)

void UOnlineGameInterface::GetResolvedConnectString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.GetResolvedConnectString");

	UOnlineGameInterface_GetResolvedConnectString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearJoinOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearJoinOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearJoinOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearJoinOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddJoinOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddJoinOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddJoinOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddJoinOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnJoinOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnJoinOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnJoinOnlineGameComplete");

	UOnlineGameInterface_OnJoinOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.JoinOnlineGame
// (HasOptionalParms, Public, HasOutParms)

void UOnlineGameInterface::JoinOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.JoinOnlineGame");

	UOnlineGameInterface_JoinOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.QueryNonAdvertisedData
// (Public)

void UOnlineGameInterface::QueryNonAdvertisedData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.QueryNonAdvertisedData");

	UOnlineGameInterface_QueryNonAdvertisedData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.FreeSearchResults
// (HasOptionalParms, Public)

void UOnlineGameInterface::FreeSearchResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.FreeSearchResults");

	UOnlineGameInterface_FreeSearchResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.GetGameSearch
// (Public)

void UOnlineGameInterface::GetGameSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.GetGameSearch");

	UOnlineGameInterface_GetGameSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.BindPlatformSpecificSessionToSearch
// (Public)

void UOnlineGameInterface::BindPlatformSpecificSessionToSearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.BindPlatformSpecificSessionToSearch");

	UOnlineGameInterface_BindPlatformSpecificSessionToSearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfoBySessionName
// (Public, HasOutParms)

void UOnlineGameInterface::ReadPlatformSpecificSessionInfoBySessionName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfoBySessionName");

	UOnlineGameInterface_ReadPlatformSpecificSessionInfoBySessionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfo
// (Public, HasOutParms)

void UOnlineGameInterface::ReadPlatformSpecificSessionInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfo");

	UOnlineGameInterface_ReadPlatformSpecificSessionInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearCancelFindOnlineGamesCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearCancelFindOnlineGamesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearCancelFindOnlineGamesCompleteDelegate");

	UOnlineGameInterface_ClearCancelFindOnlineGamesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddCancelFindOnlineGamesCompleteDelegate
// (Public)

void UOnlineGameInterface::AddCancelFindOnlineGamesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddCancelFindOnlineGamesCompleteDelegate");

	UOnlineGameInterface_AddCancelFindOnlineGamesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnCancelFindOnlineGamesComplete
// (Public, Delegate)

void UOnlineGameInterface::OnCancelFindOnlineGamesComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnCancelFindOnlineGamesComplete");

	UOnlineGameInterface_OnCancelFindOnlineGamesComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.CancelFindOnlineGames
// (Public)

void UOnlineGameInterface::CancelFindOnlineGames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.CancelFindOnlineGames");

	UOnlineGameInterface_CancelFindOnlineGames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearFindOnlineGamesCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearFindOnlineGamesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearFindOnlineGamesCompleteDelegate");

	UOnlineGameInterface_ClearFindOnlineGamesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddFindOnlineGamesCompleteDelegate
// (Public)

void UOnlineGameInterface::AddFindOnlineGamesCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddFindOnlineGamesCompleteDelegate");

	UOnlineGameInterface_AddFindOnlineGamesCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnFindOnlineGamesComplete
// (Public, Delegate)

void UOnlineGameInterface::OnFindOnlineGamesComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnFindOnlineGamesComplete");

	UOnlineGameInterface_OnFindOnlineGamesComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.FindOnlineGames
// (Public)

void UOnlineGameInterface::FindOnlineGames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.FindOnlineGames");

	UOnlineGameInterface_FindOnlineGames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearDestroyOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearDestroyOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearDestroyOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearDestroyOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddDestroyOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddDestroyOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddDestroyOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddDestroyOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnDestroyOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnDestroyOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnDestroyOnlineGameComplete");

	UOnlineGameInterface_OnDestroyOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.DestroyOnlineGame
// (HasOptionalParms, Public)

void UOnlineGameInterface::DestroyOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.DestroyOnlineGame");

	UOnlineGameInterface_DestroyOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.GetGameSettings
// (Public)

void UOnlineGameInterface::GetGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.GetGameSettings");

	UOnlineGameInterface_GetGameSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearUpdateOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearUpdateOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearUpdateOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearUpdateOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddUpdateOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddUpdateOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddUpdateOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddUpdateOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnUpdateOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnUpdateOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnUpdateOnlineGameComplete");

	UOnlineGameInterface_OnUpdateOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.UpdateOnlineGame
// (HasOptionalParms, Public)

void UOnlineGameInterface::UpdateOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.UpdateOnlineGame");

	UOnlineGameInterface_UpdateOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.ClearCreateOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::ClearCreateOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.ClearCreateOnlineGameCompleteDelegate");

	UOnlineGameInterface_ClearCreateOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.AddCreateOnlineGameCompleteDelegate
// (Public)

void UOnlineGameInterface::AddCreateOnlineGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.AddCreateOnlineGameCompleteDelegate");

	UOnlineGameInterface_AddCreateOnlineGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.OnCreateOnlineGameComplete
// (Public, Delegate)

void UOnlineGameInterface::OnCreateOnlineGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.OnCreateOnlineGameComplete");

	UOnlineGameInterface_OnCreateOnlineGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.CreateOnlineGameFailureID
// (Public)

void UOnlineGameInterface::CreateOnlineGameFailureID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.CreateOnlineGameFailureID");

	UOnlineGameInterface_CreateOnlineGameFailureID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineGameInterface.CreateOnlineGame
// (HasOptionalParms, Public)

void UOnlineGameInterface::CreateOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineGameInterface.CreateOnlineGame");

	UOnlineGameInterface_CreateOnlineGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.VerifyStrings
// (Public)

void UOnlineSystemInterface::VerifyStrings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.VerifyStrings");

	UOnlineSystemInterface_VerifyStrings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearStringVerificationDelegate
// (Public)

void UOnlineSystemInterface::ClearStringVerificationDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearStringVerificationDelegate");

	UOnlineSystemInterface_ClearStringVerificationDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddStringVerificationDelegate
// (Public)

void UOnlineSystemInterface::AddStringVerificationDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddStringVerificationDelegate");

	UOnlineSystemInterface_AddStringVerificationDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnStringVerificationComplete
// (Public, Delegate)

void UOnlineSystemInterface::OnStringVerificationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnStringVerificationComplete");

	UOnlineSystemInterface_OnStringVerificationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.GetTitleFileState
// (Public)

void UOnlineSystemInterface::GetTitleFileState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.GetTitleFileState");

	UOnlineSystemInterface_GetTitleFileState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.GetTitleFileContents
// (Public, HasOutParms)

void UOnlineSystemInterface::GetTitleFileContents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.GetTitleFileContents");

	UOnlineSystemInterface_GetTitleFileContents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearReadTitleFileCompleteDelegate
// (Public)

void UOnlineSystemInterface::ClearReadTitleFileCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearReadTitleFileCompleteDelegate");

	UOnlineSystemInterface_ClearReadTitleFileCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddReadTitleFileCompleteDelegate
// (Public)

void UOnlineSystemInterface::AddReadTitleFileCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddReadTitleFileCompleteDelegate");

	UOnlineSystemInterface_AddReadTitleFileCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ReadTitleFile
// (Public)

void UOnlineSystemInterface::ReadTitleFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ReadTitleFile");

	UOnlineSystemInterface_ReadTitleFile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnReadTitleFileComplete
// (Public, Delegate)

void UOnlineSystemInterface::OnReadTitleFileComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnReadTitleFileComplete");

	UOnlineSystemInterface_OnReadTitleFileComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearDLCStorageDeviceRemovedDelegate
// (Public)

void UOnlineSystemInterface::ClearDLCStorageDeviceRemovedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearDLCStorageDeviceRemovedDelegate");

	UOnlineSystemInterface_ClearDLCStorageDeviceRemovedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddDLCStorageDeviceRemovedDelegate
// (Public)

void UOnlineSystemInterface::AddDLCStorageDeviceRemovedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddDLCStorageDeviceRemovedDelegate");

	UOnlineSystemInterface_AddDLCStorageDeviceRemovedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnDLCStorageDeviceRemoved
// (Public, Delegate)

void UOnlineSystemInterface::OnDLCStorageDeviceRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnDLCStorageDeviceRemoved");

	UOnlineSystemInterface_OnDLCStorageDeviceRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearStorageDeviceChangeDelegate
// (Public)

void UOnlineSystemInterface::ClearStorageDeviceChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearStorageDeviceChangeDelegate");

	UOnlineSystemInterface_ClearStorageDeviceChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddStorageDeviceChangeDelegate
// (Public)

void UOnlineSystemInterface::AddStorageDeviceChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddStorageDeviceChangeDelegate");

	UOnlineSystemInterface_AddStorageDeviceChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnStorageDeviceChange
// (Public, Delegate)

void UOnlineSystemInterface::OnStorageDeviceChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnStorageDeviceChange");

	UOnlineSystemInterface_OnStorageDeviceChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.GetNATType
// (Public)

void UOnlineSystemInterface::GetNATType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.GetNATType");

	UOnlineSystemInterface_GetNATType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearConnectionStatusChangeDelegate
// (Public)

void UOnlineSystemInterface::ClearConnectionStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearConnectionStatusChangeDelegate");

	UOnlineSystemInterface_ClearConnectionStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddConnectionStatusChangeDelegate
// (Public)

void UOnlineSystemInterface::AddConnectionStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddConnectionStatusChangeDelegate");

	UOnlineSystemInterface_AddConnectionStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnConnectionStatusChange
// (Public, Delegate)

void UOnlineSystemInterface::OnConnectionStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnConnectionStatusChange");

	UOnlineSystemInterface_OnConnectionStatusChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.IsControllerConnected
// (Public)

void UOnlineSystemInterface::IsControllerConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.IsControllerConnected");

	UOnlineSystemInterface_IsControllerConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearControllerChangeDelegate
// (Public)

void UOnlineSystemInterface::ClearControllerChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearControllerChangeDelegate");

	UOnlineSystemInterface_ClearControllerChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddControllerChangeDelegate
// (Public)

void UOnlineSystemInterface::AddControllerChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddControllerChangeDelegate");

	UOnlineSystemInterface_AddControllerChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnControllerChange
// (Public, Delegate)

void UOnlineSystemInterface::OnControllerChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnControllerChange");

	UOnlineSystemInterface_OnControllerChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.SetNetworkNotificationPosition
// (Public)

void UOnlineSystemInterface::SetNetworkNotificationPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.SetNetworkNotificationPosition");

	UOnlineSystemInterface_SetNetworkNotificationPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.GetNetworkNotificationPosition
// (Public)

void UOnlineSystemInterface::GetNetworkNotificationPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.GetNetworkNotificationPosition");

	UOnlineSystemInterface_GetNetworkNotificationPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearExternalUIChangeDelegate
// (Public)

void UOnlineSystemInterface::ClearExternalUIChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearExternalUIChangeDelegate");

	UOnlineSystemInterface_ClearExternalUIChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddExternalUIChangeDelegate
// (Public)

void UOnlineSystemInterface::AddExternalUIChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddExternalUIChangeDelegate");

	UOnlineSystemInterface_AddExternalUIChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnExternalUIChange
// (Public, Delegate)

void UOnlineSystemInterface::OnExternalUIChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnExternalUIChange");

	UOnlineSystemInterface_OnExternalUIChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.ClearLinkStatusChangeDelegate
// (Public)

void UOnlineSystemInterface::ClearLinkStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.ClearLinkStatusChangeDelegate");

	UOnlineSystemInterface_ClearLinkStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.AddLinkStatusChangeDelegate
// (Public)

void UOnlineSystemInterface::AddLinkStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.AddLinkStatusChangeDelegate");

	UOnlineSystemInterface_AddLinkStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.OnLinkStatusChange
// (Public, Delegate)

void UOnlineSystemInterface::OnLinkStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.OnLinkStatusChange");

	UOnlineSystemInterface_OnLinkStatusChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineSystemInterface.HasLinkConnection
// (Public)

void UOnlineSystemInterface::HasLinkConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineSystemInterface.HasLinkConnection");

	UOnlineSystemInterface_HasLinkConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowCustomPlayersUI
// (Public, HasOutParms)

void UOnlinePlayerInterfaceEx::ShowCustomPlayersUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowCustomPlayersUI");

	UOnlinePlayerInterfaceEx_ShowCustomPlayersUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowPlayersUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowPlayersUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowPlayersUI");

	UOnlinePlayerInterfaceEx_ShowPlayersUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowFriendsInviteUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowFriendsInviteUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowFriendsInviteUI");

	UOnlinePlayerInterfaceEx_ShowFriendsInviteUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ClearProfileDataChangedDelegate
// (Public)

void UOnlinePlayerInterfaceEx::ClearProfileDataChangedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ClearProfileDataChangedDelegate");

	UOnlinePlayerInterfaceEx_ClearProfileDataChangedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.AddProfileDataChangedDelegate
// (Public)

void UOnlinePlayerInterfaceEx::AddProfileDataChangedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.AddProfileDataChangedDelegate");

	UOnlinePlayerInterfaceEx_AddProfileDataChangedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.OnProfileDataChanged
// (Public, Delegate)

void UOnlinePlayerInterfaceEx::OnProfileDataChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.OnProfileDataChanged");

	UOnlinePlayerInterfaceEx_OnProfileDataChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.UnlockGamerPicture
// (Public)

void UOnlinePlayerInterfaceEx::UnlockGamerPicture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.UnlockGamerPicture");

	UOnlinePlayerInterfaceEx_UnlockGamerPicture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.IsDeviceValid
// (HasOptionalParms, Public)

void UOnlinePlayerInterfaceEx::IsDeviceValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.IsDeviceValid");

	UOnlinePlayerInterfaceEx_IsDeviceValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.GetDeviceSelectionResults
// (Public, HasOutParms)

void UOnlinePlayerInterfaceEx::GetDeviceSelectionResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.GetDeviceSelectionResults");

	UOnlinePlayerInterfaceEx_GetDeviceSelectionResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ClearDeviceSelectionDoneDelegate
// (Public)

void UOnlinePlayerInterfaceEx::ClearDeviceSelectionDoneDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ClearDeviceSelectionDoneDelegate");

	UOnlinePlayerInterfaceEx_ClearDeviceSelectionDoneDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.AddDeviceSelectionDoneDelegate
// (Public)

void UOnlinePlayerInterfaceEx::AddDeviceSelectionDoneDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.AddDeviceSelectionDoneDelegate");

	UOnlinePlayerInterfaceEx_AddDeviceSelectionDoneDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.OnDeviceSelectionComplete
// (Public, Delegate)

void UOnlinePlayerInterfaceEx::OnDeviceSelectionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.OnDeviceSelectionComplete");

	UOnlinePlayerInterfaceEx_OnDeviceSelectionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowDeviceSelectionUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterfaceEx::ShowDeviceSelectionUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowDeviceSelectionUI");

	UOnlinePlayerInterfaceEx_ShowDeviceSelectionUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowMembershipMarketplaceUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowMembershipMarketplaceUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowMembershipMarketplaceUI");

	UOnlinePlayerInterfaceEx_ShowMembershipMarketplaceUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowContentMarketplaceUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterfaceEx::ShowContentMarketplaceUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowContentMarketplaceUI");

	UOnlinePlayerInterfaceEx_ShowContentMarketplaceUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowAchievementsUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowAchievementsUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowAchievementsUI");

	UOnlinePlayerInterfaceEx_ShowAchievementsUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowMessagesUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowMessagesUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowMessagesUI");

	UOnlinePlayerInterfaceEx_ShowMessagesUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterfaceEx.ShowFeedbackUI
// (Public)

void UOnlinePlayerInterfaceEx::ShowFeedbackUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterfaceEx.ShowFeedbackUI");

	UOnlinePlayerInterfaceEx_ShowFeedbackUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CancelLogin
// (Public)

void UOnlinePlayerInterface::CancelLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CancelLogin");

	UOnlinePlayerInterface_CancelLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ManageInvites
// (Public)

void UOnlinePlayerInterface::ManageInvites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ManageInvites");

	UOnlinePlayerInterface_ManageInvites_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.FindUniqueNetIdForPlayer
// (Public)

void UOnlinePlayerInterface::FindUniqueNetIdForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.FindUniqueNetIdForPlayer");

	UOnlinePlayerInterface_FindUniqueNetIdForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearFindUniqueNetIdForPlayerDelegate
// (Public)

void UOnlinePlayerInterface::ClearFindUniqueNetIdForPlayerDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearFindUniqueNetIdForPlayerDelegate");

	UOnlinePlayerInterface_ClearFindUniqueNetIdForPlayerDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFindUniqueNetIdForPlayerDelegate
// (Public)

void UOnlinePlayerInterface::AddFindUniqueNetIdForPlayerDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFindUniqueNetIdForPlayerDelegate");

	UOnlinePlayerInterface_AddFindUniqueNetIdForPlayerDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnFindUniqueNetIdForPlayerComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnFindUniqueNetIdForPlayerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnFindUniqueNetIdForPlayerComplete");

	UOnlinePlayerInterface_OnFindUniqueNetIdForPlayerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ShowInviteUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ShowInviteUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ShowInviteUI");

	UOnlinePlayerInterface_ShowInviteUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddToPlayersMetList
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::AddToPlayersMetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddToPlayersMetList");

	UOnlinePlayerInterface_AddToPlayersMetList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ShowGamerCardUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ShowGamerCardUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ShowGamerCardUI");

	UOnlinePlayerInterface_ShowGamerCardUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetAchievements
// (HasOptionalParms, Public, HasOutParms)

void UOnlinePlayerInterface::GetAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetAchievements");

	UOnlinePlayerInterface_GetAchievements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReadAchievementsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReadAchievementsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReadAchievementsCompleteDelegate");

	UOnlinePlayerInterface_ClearReadAchievementsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReadAchievementsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddReadAchievementsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReadAchievementsCompleteDelegate");

	UOnlinePlayerInterface_AddReadAchievementsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReadAchievementsComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnReadAchievementsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReadAchievementsComplete");

	UOnlinePlayerInterface_OnReadAchievementsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ReadAchievements
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ReadAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ReadAchievements");

	UOnlinePlayerInterface_ReadAchievements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearUnlockAchievementCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearUnlockAchievementCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearUnlockAchievementCompleteDelegate");

	UOnlinePlayerInterface_ClearUnlockAchievementCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddUnlockAchievementCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddUnlockAchievementCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddUnlockAchievementCompleteDelegate");

	UOnlinePlayerInterface_AddUnlockAchievementCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnUnlockAchievementComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnUnlockAchievementComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnUnlockAchievementComplete");

	UOnlinePlayerInterface_OnUnlockAchievementComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.UnlockAchievement
// (Public)

void UOnlinePlayerInterface::UnlockAchievement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.UnlockAchievement");

	UOnlinePlayerInterface_UnlockAchievement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.DeleteMessage
// (Public)

void UOnlinePlayerInterface::DeleteMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.DeleteMessage");

	UOnlinePlayerInterface_DeleteMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearFriendMessageReceivedDelegate
// (Public)

void UOnlinePlayerInterface::ClearFriendMessageReceivedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearFriendMessageReceivedDelegate");

	UOnlinePlayerInterface_ClearFriendMessageReceivedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFriendMessageReceivedDelegate
// (Public)

void UOnlinePlayerInterface::AddFriendMessageReceivedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFriendMessageReceivedDelegate");

	UOnlinePlayerInterface_AddFriendMessageReceivedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnFriendMessageReceived
// (Public, Delegate)

void UOnlinePlayerInterface::OnFriendMessageReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnFriendMessageReceived");

	UOnlinePlayerInterface_OnFriendMessageReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetFriendMessages
// (Public, HasOutParms)

void UOnlinePlayerInterface::GetFriendMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetFriendMessages");

	UOnlinePlayerInterface_GetFriendMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearJoinFriendGameCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearJoinFriendGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearJoinFriendGameCompleteDelegate");

	UOnlinePlayerInterface_ClearJoinFriendGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddJoinFriendGameCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddJoinFriendGameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddJoinFriendGameCompleteDelegate");

	UOnlinePlayerInterface_AddJoinFriendGameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnJoinFriendGameComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnJoinFriendGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnJoinFriendGameComplete");

	UOnlinePlayerInterface_OnJoinFriendGameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.JoinFriendGame
// (Public)

void UOnlinePlayerInterface::JoinFriendGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.JoinFriendGame");

	UOnlinePlayerInterface_JoinFriendGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReceivedGameInviteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReceivedGameInviteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReceivedGameInviteDelegate");

	UOnlinePlayerInterface_ClearReceivedGameInviteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReceivedGameInviteDelegate
// (Public)

void UOnlinePlayerInterface::AddReceivedGameInviteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReceivedGameInviteDelegate");

	UOnlinePlayerInterface_AddReceivedGameInviteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReceivedGameInvite
// (Public, Delegate)

void UOnlinePlayerInterface::OnReceivedGameInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReceivedGameInvite");

	UOnlinePlayerInterface_OnReceivedGameInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.SendGameInviteToFriends
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::SendGameInviteToFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.SendGameInviteToFriends");

	UOnlinePlayerInterface_SendGameInviteToFriends_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.SendGameInviteToFriend
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::SendGameInviteToFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.SendGameInviteToFriend");

	UOnlinePlayerInterface_SendGameInviteToFriend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.SendMessageToFriend
// (Public)

void UOnlinePlayerInterface::SendMessageToFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.SendMessageToFriend");

	UOnlinePlayerInterface_SendMessageToFriend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearFriendInviteReceivedDelegate
// (Public)

void UOnlinePlayerInterface::ClearFriendInviteReceivedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearFriendInviteReceivedDelegate");

	UOnlinePlayerInterface_ClearFriendInviteReceivedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFriendInviteReceivedDelegate
// (Public)

void UOnlinePlayerInterface::AddFriendInviteReceivedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFriendInviteReceivedDelegate");

	UOnlinePlayerInterface_AddFriendInviteReceivedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnFriendInviteReceived
// (Public, Delegate)

void UOnlinePlayerInterface::OnFriendInviteReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnFriendInviteReceived");

	UOnlinePlayerInterface_OnFriendInviteReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.RemoveFriend
// (Public)

void UOnlinePlayerInterface::RemoveFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.RemoveFriend");

	UOnlinePlayerInterface_RemoveFriend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.DenyFriendInvite
// (Public)

void UOnlinePlayerInterface::DenyFriendInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.DenyFriendInvite");

	UOnlinePlayerInterface_DenyFriendInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AcceptFriendInvite
// (Public)

void UOnlinePlayerInterface::AcceptFriendInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AcceptFriendInvite");

	UOnlinePlayerInterface_AcceptFriendInvite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearAddFriendByNameCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearAddFriendByNameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearAddFriendByNameCompleteDelegate");

	UOnlinePlayerInterface_ClearAddFriendByNameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddAddFriendByNameCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddAddFriendByNameCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddAddFriendByNameCompleteDelegate");

	UOnlinePlayerInterface_AddAddFriendByNameCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnAddFriendByNameComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnAddFriendByNameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnAddFriendByNameComplete");

	UOnlinePlayerInterface_OnAddFriendByNameComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFriendByName
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::AddFriendByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFriendByName");

	UOnlinePlayerInterface_AddFriendByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFriend
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::AddFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFriend");

	UOnlinePlayerInterface_AddFriend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetKeyboardInputResults
// (Public, HasOutParms)

void UOnlinePlayerInterface::GetKeyboardInputResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetKeyboardInputResults");

	UOnlinePlayerInterface_GetKeyboardInputResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearKeyboardInputDoneDelegate
// (Public)

void UOnlinePlayerInterface::ClearKeyboardInputDoneDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearKeyboardInputDoneDelegate");

	UOnlinePlayerInterface_ClearKeyboardInputDoneDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddKeyboardInputDoneDelegate
// (Public)

void UOnlinePlayerInterface::AddKeyboardInputDoneDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddKeyboardInputDoneDelegate");

	UOnlinePlayerInterface_AddKeyboardInputDoneDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnKeyboardInputComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnKeyboardInputComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnKeyboardInputComplete");

	UOnlinePlayerInterface_OnKeyboardInputComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ShowKeyboardUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ShowKeyboardUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ShowKeyboardUI");

	UOnlinePlayerInterface_ShowKeyboardUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.SetOnlineStatus
// (Public, HasOutParms)

void UOnlinePlayerInterface::SetOnlineStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.SetOnlineStatus");

	UOnlinePlayerInterface_SetOnlineStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetFriendsList
// (HasOptionalParms, Public, HasOutParms)

void UOnlinePlayerInterface::GetFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetFriendsList");

	UOnlinePlayerInterface_GetFriendsList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReadFriendsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReadFriendsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReadFriendsCompleteDelegate");

	UOnlinePlayerInterface_ClearReadFriendsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReadFriendsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddReadFriendsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReadFriendsCompleteDelegate");

	UOnlinePlayerInterface_AddReadFriendsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReadFriendsComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnReadFriendsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReadFriendsComplete");

	UOnlinePlayerInterface_OnReadFriendsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ReadFriendsList
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ReadFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ReadFriendsList");

	UOnlinePlayerInterface_ReadFriendsList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearWritePlayerStorageCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearWritePlayerStorageCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearWritePlayerStorageCompleteDelegate");

	UOnlinePlayerInterface_ClearWritePlayerStorageCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddWritePlayerStorageCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddWritePlayerStorageCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddWritePlayerStorageCompleteDelegate");

	UOnlinePlayerInterface_AddWritePlayerStorageCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnWritePlayerStorageComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnWritePlayerStorageComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnWritePlayerStorageComplete");

	UOnlinePlayerInterface_OnWritePlayerStorageComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.WritePlayerStorage
// (Public)

void UOnlinePlayerInterface::WritePlayerStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.WritePlayerStorage");

	UOnlinePlayerInterface_WritePlayerStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetPlayerStorage
// (Public)

void UOnlinePlayerInterface::GetPlayerStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetPlayerStorage");

	UOnlinePlayerInterface_GetPlayerStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageForNetIdCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReadPlayerStorageForNetIdCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageForNetIdCompleteDelegate");

	UOnlinePlayerInterface_ClearReadPlayerStorageForNetIdCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReadPlayerStorageForNetIdCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddReadPlayerStorageForNetIdCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReadPlayerStorageForNetIdCompleteDelegate");

	UOnlinePlayerInterface_AddReadPlayerStorageForNetIdCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReadPlayerStorageForNetIdComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnReadPlayerStorageForNetIdComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReadPlayerStorageForNetIdComplete");

	UOnlinePlayerInterface_OnReadPlayerStorageForNetIdComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ReadPlayerStorageForNetId
// (Public)

void UOnlinePlayerInterface::ReadPlayerStorageForNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ReadPlayerStorageForNetId");

	UOnlinePlayerInterface_ReadPlayerStorageForNetId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReadPlayerStorageCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageCompleteDelegate");

	UOnlinePlayerInterface_ClearReadPlayerStorageCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReadPlayerStorageCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddReadPlayerStorageCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReadPlayerStorageCompleteDelegate");

	UOnlinePlayerInterface_AddReadPlayerStorageCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReadPlayerStorageComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnReadPlayerStorageComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReadPlayerStorageComplete");

	UOnlinePlayerInterface_OnReadPlayerStorageComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ReadPlayerStorage
// (Public)

void UOnlinePlayerInterface::ReadPlayerStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ReadPlayerStorage");

	UOnlinePlayerInterface_ReadPlayerStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearWriteProfileSettingsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearWriteProfileSettingsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearWriteProfileSettingsCompleteDelegate");

	UOnlinePlayerInterface_ClearWriteProfileSettingsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddWriteProfileSettingsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddWriteProfileSettingsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddWriteProfileSettingsCompleteDelegate");

	UOnlinePlayerInterface_AddWriteProfileSettingsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnWriteProfileSettingsComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnWriteProfileSettingsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnWriteProfileSettingsComplete");

	UOnlinePlayerInterface_OnWriteProfileSettingsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.WriteProfileSettings
// (Public)

void UOnlinePlayerInterface::WriteProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.WriteProfileSettings");

	UOnlinePlayerInterface_WriteProfileSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetProfileSettings
// (Public)

void UOnlinePlayerInterface::GetProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetProfileSettings");

	UOnlinePlayerInterface_GetProfileSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearReadProfileSettingsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::ClearReadProfileSettingsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearReadProfileSettingsCompleteDelegate");

	UOnlinePlayerInterface_ClearReadProfileSettingsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddReadProfileSettingsCompleteDelegate
// (Public)

void UOnlinePlayerInterface::AddReadProfileSettingsCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddReadProfileSettingsCompleteDelegate");

	UOnlinePlayerInterface_AddReadProfileSettingsCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnReadProfileSettingsComplete
// (Public, Delegate)

void UOnlinePlayerInterface::OnReadProfileSettingsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnReadProfileSettingsComplete");

	UOnlinePlayerInterface_OnReadProfileSettingsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ReadProfileSettings
// (Public)

void UOnlinePlayerInterface::ReadProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ReadProfileSettings");

	UOnlinePlayerInterface_ReadProfileSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearFriendsChangeDelegate
// (Public)

void UOnlinePlayerInterface::ClearFriendsChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearFriendsChangeDelegate");

	UOnlinePlayerInterface_ClearFriendsChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddFriendsChangeDelegate
// (Public)

void UOnlinePlayerInterface::AddFriendsChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddFriendsChangeDelegate");

	UOnlinePlayerInterface_AddFriendsChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearMutingChangeDelegate
// (Public)

void UOnlinePlayerInterface::ClearMutingChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearMutingChangeDelegate");

	UOnlinePlayerInterface_ClearMutingChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddMutingChangeDelegate
// (Public)

void UOnlinePlayerInterface::AddMutingChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddMutingChangeDelegate");

	UOnlinePlayerInterface_AddMutingChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearLoginCancelledDelegate
// (Public)

void UOnlinePlayerInterface::ClearLoginCancelledDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearLoginCancelledDelegate");

	UOnlinePlayerInterface_ClearLoginCancelledDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddLoginCancelledDelegate
// (Public)

void UOnlinePlayerInterface::AddLoginCancelledDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddLoginCancelledDelegate");

	UOnlinePlayerInterface_AddLoginCancelledDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearLoginStatusChangeDelegate
// (Public)

void UOnlinePlayerInterface::ClearLoginStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearLoginStatusChangeDelegate");

	UOnlinePlayerInterface_ClearLoginStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddLoginStatusChangeDelegate
// (Public)

void UOnlinePlayerInterface::AddLoginStatusChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddLoginStatusChangeDelegate");

	UOnlinePlayerInterface_AddLoginStatusChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnLoginStatusChange
// (Public, Delegate)

void UOnlinePlayerInterface::OnLoginStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnLoginStatusChange");

	UOnlinePlayerInterface_OnLoginStatusChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearLoginChangeDelegate
// (Public)

void UOnlinePlayerInterface::ClearLoginChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearLoginChangeDelegate");

	UOnlinePlayerInterface_ClearLoginChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddLoginChangeDelegate
// (Public)

void UOnlinePlayerInterface::AddLoginChangeDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddLoginChangeDelegate");

	UOnlinePlayerInterface_AddLoginChangeDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ShowFriendsUI
// (Public)

void UOnlinePlayerInterface::ShowFriendsUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ShowFriendsUI");

	UOnlinePlayerInterface_ShowFriendsUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.IsMuted
// (Public)

void UOnlinePlayerInterface::IsMuted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.IsMuted");

	UOnlinePlayerInterface_IsMuted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AreAnyFriends
// (Public, HasOutParms)

void UOnlinePlayerInterface::AreAnyFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AreAnyFriends");

	UOnlinePlayerInterface_AreAnyFriends_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.IsFriend
// (Public)

void UOnlinePlayerInterface::IsFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.IsFriend");

	UOnlinePlayerInterface_IsFriend_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanShowPresenceInformation
// (Public)

void UOnlinePlayerInterface::CanShowPresenceInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanShowPresenceInformation");

	UOnlinePlayerInterface_CanShowPresenceInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanViewPlayerProfiles
// (Public)

void UOnlinePlayerInterface::CanViewPlayerProfiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanViewPlayerProfiles");

	UOnlinePlayerInterface_CanViewPlayerProfiles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanPurchaseContent
// (Public)

void UOnlinePlayerInterface::CanPurchaseContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanPurchaseContent");

	UOnlinePlayerInterface_CanPurchaseContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanDownloadUserContent
// (Public)

void UOnlinePlayerInterface::CanDownloadUserContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanDownloadUserContent");

	UOnlinePlayerInterface_CanDownloadUserContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanCommunicate
// (Public)

void UOnlinePlayerInterface::CanCommunicate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanCommunicate");

	UOnlinePlayerInterface_CanCommunicate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.CanPlayOnline
// (Public)

void UOnlinePlayerInterface::CanPlayOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.CanPlayOnline");

	UOnlinePlayerInterface_CanPlayOnline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.IsLocalLogin
// (Public)

void UOnlinePlayerInterface::IsLocalLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.IsLocalLogin");

	UOnlinePlayerInterface_IsLocalLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.IsGuestLogin
// (Public)

void UOnlinePlayerInterface::IsGuestLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.IsGuestLogin");

	UOnlinePlayerInterface_IsGuestLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetPlayerNickname
// (Public)

void UOnlinePlayerInterface::GetPlayerNickname()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetPlayerNickname");

	UOnlinePlayerInterface_GetPlayerNickname_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetUniquePlayerId
// (Public, HasOutParms)

void UOnlinePlayerInterface::GetUniquePlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetUniquePlayerId");

	UOnlinePlayerInterface_GetUniquePlayerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.GetLoginStatus
// (Public)

void UOnlinePlayerInterface::GetLoginStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.GetLoginStatus");

	UOnlinePlayerInterface_GetLoginStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearLogoutCompletedDelegate
// (Public)

void UOnlinePlayerInterface::ClearLogoutCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearLogoutCompletedDelegate");

	UOnlinePlayerInterface_ClearLogoutCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddLogoutCompletedDelegate
// (Public)

void UOnlinePlayerInterface::AddLogoutCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddLogoutCompletedDelegate");

	UOnlinePlayerInterface_AddLogoutCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnLogoutCompleted
// (Public, Delegate)

void UOnlinePlayerInterface::OnLogoutCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnLogoutCompleted");

	UOnlinePlayerInterface_OnLogoutCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.Logout
// (Public)

void UOnlinePlayerInterface::Logout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.Logout");

	UOnlinePlayerInterface_Logout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ClearLoginFailedDelegate
// (Public)

void UOnlinePlayerInterface::ClearLoginFailedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ClearLoginFailedDelegate");

	UOnlinePlayerInterface_ClearLoginFailedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AddLoginFailedDelegate
// (Public)

void UOnlinePlayerInterface::AddLoginFailedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AddLoginFailedDelegate");

	UOnlinePlayerInterface_AddLoginFailedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnLoginFailed
// (Public, Delegate)

void UOnlinePlayerInterface::OnLoginFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnLoginFailed");

	UOnlinePlayerInterface_OnLoginFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.AutoLogin
// (Public)

void UOnlinePlayerInterface::AutoLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.AutoLogin");

	UOnlinePlayerInterface_AutoLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.Login
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::Login()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.Login");

	UOnlinePlayerInterface_Login_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.ShowLoginUI
// (HasOptionalParms, Public)

void UOnlinePlayerInterface::ShowLoginUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.ShowLoginUI");

	UOnlinePlayerInterface_ShowLoginUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnFriendsChange
// (Public, Delegate)

void UOnlinePlayerInterface::OnFriendsChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnFriendsChange");

	UOnlinePlayerInterface_OnFriendsChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnMutingChange
// (Public, Delegate)

void UOnlinePlayerInterface::OnMutingChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnMutingChange");

	UOnlinePlayerInterface_OnMutingChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnLoginCancelled
// (Public, Delegate)

void UOnlinePlayerInterface::OnLoginCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnLoginCancelled");

	UOnlinePlayerInterface_OnLoginCancelled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlinePlayerInterface.OnLoginChange
// (Public, Delegate)

void UOnlinePlayerInterface::OnLoginChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlinePlayerInterface.OnLoginChange");

	UOnlinePlayerInterface_OnLoginChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.GetLocalAccountNames
// (Public, HasOutParms)

void UOnlineAccountInterface::GetLocalAccountNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.GetLocalAccountNames");

	UOnlineAccountInterface_GetLocalAccountNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.DeleteLocalAccount
// (HasOptionalParms, Public)

void UOnlineAccountInterface::DeleteLocalAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.DeleteLocalAccount");

	UOnlineAccountInterface_DeleteLocalAccount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.RenameLocalAccount
// (HasOptionalParms, Public)

void UOnlineAccountInterface::RenameLocalAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.RenameLocalAccount");

	UOnlineAccountInterface_RenameLocalAccount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.CreateLocalAccount
// (HasOptionalParms, Public)

void UOnlineAccountInterface::CreateLocalAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.CreateLocalAccount");

	UOnlineAccountInterface_CreateLocalAccount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.ClearCreateOnlineAccountCompletedDelegate
// (Public)

void UOnlineAccountInterface::ClearCreateOnlineAccountCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.ClearCreateOnlineAccountCompletedDelegate");

	UOnlineAccountInterface_ClearCreateOnlineAccountCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.AddCreateOnlineAccountCompletedDelegate
// (Public)

void UOnlineAccountInterface::AddCreateOnlineAccountCompletedDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.AddCreateOnlineAccountCompletedDelegate");

	UOnlineAccountInterface_AddCreateOnlineAccountCompletedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.OnCreateOnlineAccountCompleted
// (Public, Delegate)

void UOnlineAccountInterface::OnCreateOnlineAccountCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.OnCreateOnlineAccountCompleted");

	UOnlineAccountInterface_OnCreateOnlineAccountCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineAccountInterface.CreateOnlineAccount
// (HasOptionalParms, Public)

void UOnlineAccountInterface::CreateOnlineAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineAccountInterface.CreateOnlineAccount");

	UOnlineAccountInterface_CreateOnlineAccount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.WipeKickedPlayers
// (Defined, Public)

void AAccessControl::WipeKickedPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.WipeKickedPlayers");

	AAccessControl_WipeKickedPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.IsIDBanned
// (Defined, Public, HasOutParms)

void AAccessControl::IsIDBanned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.IsIDBanned");

	AAccessControl_IsIDBanned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.CheckIPPolicy
// (Defined, Public)

void AAccessControl::CheckIPPolicy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.CheckIPPolicy");

	AAccessControl_CheckIPPolicy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.PreLogin
// (Defined, Event, Public, HasOutParms)

void AAccessControl::PreLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.PreLogin");

	AAccessControl_PreLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.ValidLogin
// (Defined, Public)

void AAccessControl::ValidLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.ValidLogin");

	AAccessControl_ValidLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.ParseAdminOptions
// (Defined, Public)

void AAccessControl::ParseAdminOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.ParseAdminOptions");

	AAccessControl_ParseAdminOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.AdminExited
// (Defined, Public)

void AAccessControl::AdminExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.AdminExited");

	AAccessControl_AdminExited_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.AdminEntered
// (Defined, Public)

void AAccessControl::AdminEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.AdminEntered");

	AAccessControl_AdminEntered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.AdminLogout
// (Defined, Public)

void AAccessControl::AdminLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.AdminLogout");

	AAccessControl_AdminLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.AdminLogin
// (Defined, Public)

void AAccessControl::AdminLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.AdminLogin");

	AAccessControl_AdminLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.KickPlayer
// (Defined, Public)

void AAccessControl::KickPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.KickPlayer");

	AAccessControl_KickPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.ForceKickPlayer
// (Defined, Public)

void AAccessControl::ForceKickPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.ForceKickPlayer");

	AAccessControl_ForceKickPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.KickBan
// (Defined, Public)

void AAccessControl::KickBan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.KickBan");

	AAccessControl_KickBan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.Kick
// (Defined, Public)

void AAccessControl::Kick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.Kick");

	AAccessControl_Kick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.GetControllerFromString
// (Defined, Public)

void AAccessControl::GetControllerFromString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.GetControllerFromString");

	AAccessControl_GetControllerFromString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.RequiresPassword
// (Defined, Public)

void AAccessControl::RequiresPassword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.RequiresPassword");

	AAccessControl_RequiresPassword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.SetGamePassword
// (Defined, Public)

void AAccessControl::SetGamePassword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.SetGamePassword");

	AAccessControl_SetGamePassword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.SetAdminPassword
// (Defined, Public)

void AAccessControl::SetAdminPassword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.SetAdminPassword");

	AAccessControl_SetAdminPassword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AccessControl.IsAdmin
// (Defined, Public)

void AAccessControl::IsAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AccessControl.IsAdmin");

	AAccessControl_IsAdmin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.ServerSwitch
// (Defined, Net, NetReliable, Public, NetServer)

void AAdmin::ServerSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.ServerSwitch");

	AAdmin_ServerSwitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.Switch
// (Defined, Exec, Public)

void AAdmin::Switch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.Switch");

	AAdmin_Switch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.ServerRestartMap
// (Defined, Net, NetReliable, Public, NetServer)

void AAdmin::ServerRestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.ServerRestartMap");

	AAdmin_ServerRestartMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.RestartMap
// (Defined, Exec, Public)

void AAdmin::RestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.RestartMap");

	AAdmin_RestartMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.PlayerList
// (Defined, Exec, Public)

void AAdmin::PlayerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.PlayerList");

	AAdmin_PlayerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.ServerKick
// (Defined, Net, NetReliable, Public, NetServer)

void AAdmin::ServerKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.ServerKick");

	AAdmin_ServerKick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.Kick
// (Defined, Exec, Public)

void AAdmin::Kick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.Kick");

	AAdmin_Kick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.ServerKickBan
// (Defined, Net, NetReliable, Public, NetServer)

void AAdmin::ServerKickBan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.ServerKickBan");

	AAdmin_ServerKickBan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.KickBan
// (Defined, Exec, Public)

void AAdmin::KickBan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.KickBan");

	AAdmin_KickBan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.ServerAdmin
// (Defined, Net, NetReliable, Public, NetServer)

void AAdmin::ServerAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.ServerAdmin");

	AAdmin_ServerAdmin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.Admin
// (Defined, Exec, Public)

void AAdmin::Admin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.Admin");

	AAdmin_Admin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Admin.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AAdmin::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Admin.PostBeginPlay");

	AAdmin_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterSpawnable.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AEmitterSpawnable::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterSpawnable.ReplicatedEvent");

	AEmitterSpawnable_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.EmitterSpawnable.SetTemplate
// (Defined, Simulated, Event, HasOptionalParms, Public)

void AEmitterSpawnable::SetTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.EmitterSpawnable.SetTemplate");

	AEmitterSpawnable_SetTemplate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleGodMode.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleGodMode::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleGodMode.IsValidUISequenceObject");

	USeqAct_ToggleGodMode_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleAffectedByHitEffects.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleAffectedByHitEffects::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleAffectedByHitEffects.IsValidUISequenceObject");

	USeqAct_ToggleAffectedByHitEffects_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ControlMovieTexture.Activated
// (Defined, Event, Public)

void USeqAct_ControlMovieTexture::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ControlMovieTexture.Activated");

	USeqAct_ControlMovieTexture_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveLinkDisabledState
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveLinkDisabledState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveLinkDisabledState");

	ACoverReplicator_ClientReceiveLinkDisabledState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendLinkDisabledState
// (Defined, Net, NetReliable, Public, NetServer)

void ACoverReplicator::ServerSendLinkDisabledState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendLinkDisabledState");

	ACoverReplicator_ServerSendLinkDisabledState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.NotifyLinkDisabledStateChange
// (Defined, Public)

void ACoverReplicator::NotifyLinkDisabledStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.NotifyLinkDisabledStateChange");

	ACoverReplicator_NotifyLinkDisabledStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveManualCoverTypeSlots
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveManualCoverTypeSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveManualCoverTypeSlots");

	ACoverReplicator_ClientReceiveManualCoverTypeSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendManualCoverTypeSlots
// (Defined, Net, NetReliable, Public, NetServer, HasDefaults)

void ACoverReplicator::ServerSendManualCoverTypeSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendManualCoverTypeSlots");

	ACoverReplicator_ServerSendManualCoverTypeSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.NotifySetManualCoverTypeForSlots
// (Defined, Public, HasOutParms)

void ACoverReplicator::NotifySetManualCoverTypeForSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.NotifySetManualCoverTypeForSlots");

	ACoverReplicator_NotifySetManualCoverTypeForSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveAdjustedSlots
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveAdjustedSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveAdjustedSlots");

	ACoverReplicator_ClientReceiveAdjustedSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendAdjustedSlots
// (Defined, Net, NetReliable, Public, NetServer)

void ACoverReplicator::ServerSendAdjustedSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendAdjustedSlots");

	ACoverReplicator_ServerSendAdjustedSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.NotifyAutoAdjustSlots
// (Defined, Public, HasOutParms)

void ACoverReplicator::NotifyAutoAdjustSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.NotifyAutoAdjustSlots");

	ACoverReplicator_NotifyAutoAdjustSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveDisabledSlots
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveDisabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveDisabledSlots");

	ACoverReplicator_ClientReceiveDisabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendDisabledSlots
// (Defined, Net, NetReliable, Public, NetServer)

void ACoverReplicator::ServerSendDisabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendDisabledSlots");

	ACoverReplicator_ServerSendDisabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.NotifyDisabledSlots
// (Defined, Public, HasOutParms)

void ACoverReplicator::NotifyDisabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.NotifyDisabledSlots");

	ACoverReplicator_NotifyDisabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveEnabledSlots
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveEnabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveEnabledSlots");

	ACoverReplicator_ClientReceiveEnabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendEnabledSlots
// (Defined, Net, NetReliable, Public, NetServer)

void ACoverReplicator::ServerSendEnabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendEnabledSlots");

	ACoverReplicator_ServerSendEnabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.NotifyEnabledSlots
// (Defined, Public, HasOutParms)

void ACoverReplicator::NotifyEnabledSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.NotifyEnabledSlots");

	ACoverReplicator_NotifyEnabledSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientReceiveInitialCoverReplicationInfo
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientReceiveInitialCoverReplicationInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientReceiveInitialCoverReplicationInfo");

	ACoverReplicator_ClientReceiveInitialCoverReplicationInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ServerSendInitialCoverReplicationInfo
// (Defined, Net, NetReliable, Public, NetServer, HasDefaults)

void ACoverReplicator::ServerSendInitialCoverReplicationInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ServerSendInitialCoverReplicationInfo");

	ACoverReplicator_ServerSendInitialCoverReplicationInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ClientSetOwner
// (Defined, Net, NetReliable, Simulated, Public, NetClient)

void ACoverReplicator::ClientSetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ClientSetOwner");

	ACoverReplicator_ClientSetOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.ReplicateInitialCoverInfo
// (Defined, Public)

void ACoverReplicator::ReplicateInitialCoverInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.ReplicateInitialCoverInfo");

	ACoverReplicator_ReplicateInitialCoverInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.CoverReplicator.PurgeOldEntries
// (Defined, Public)

void ACoverReplicator::PurgeOldEntries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.CoverReplicator.PurgeOldEntries");

	ACoverReplicator_PurgeOldEntries_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.GameMessage.GetString
// (Defined, Static, HasOptionalParms, Public)

void UGameMessage::STATIC_GetString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.GameMessage.GetString");

	UGameMessage_GetString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScoreBoard.ChangeState
// (Public)

void AScoreBoard::ChangeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScoreBoard.ChangeState");

	AScoreBoard_ChangeState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScoreBoard.UpdateScoreBoard
// (Public)

void AScoreBoard::UpdateScoreBoard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScoreBoard.UpdateScoreBoard");

	AScoreBoard_UpdateScoreBoard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScoreBoard.UpdateGRI
// (Defined, Public)

void AScoreBoard::UpdateGRI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScoreBoard.UpdateGRI");

	AScoreBoard_UpdateGRI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScoreBoard.DrawHUD
// (Defined, Public)

void AScoreBoard::DrawHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScoreBoard.DrawHUD");

	AScoreBoard_DrawHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleInput.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleInput::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleInput.IsValidUISequenceObject");

	USeqAct_ToggleInput_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleHUD.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ToggleHUD::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleHUD.GetObjClassVersion");

	USeqAct_ToggleHUD_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleHUD.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleHUD::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleHUD.IsValidUISequenceObject");

	USeqAct_ToggleHUD_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleCinematicMode.IsValidUISequenceObject
// (Defined, Event, HasOptionalParms, Public)

void USeqAct_ToggleCinematicMode::IsValidUISequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleCinematicMode.IsValidUISequenceObject");

	USeqAct_ToggleCinematicMode_IsValidUISequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ToggleCinematicMode.Activated
// (Defined, Event, Public)

void USeqAct_ToggleCinematicMode::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ToggleCinematicMode.Activated");

	USeqAct_ToggleCinematicMode_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ConsoleCommand.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_ConsoleCommand::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ConsoleCommand.GetObjClassVersion");

	USeqAct_ConsoleCommand_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_ConsoleCommand.VersionUpdated
// (Defined, Public)

void USeqAct_ConsoleCommand::VersionUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_ConsoleCommand.VersionUpdated");

	USeqAct_ConsoleCommand_VersionUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetSoundMode.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_SetSoundMode::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetSoundMode.GetObjClassVersion");

	USeqAct_SetSoundMode_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetSoundMode.Activated
// (Defined, Event, Public)

void USeqAct_SetSoundMode::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetSoundMode.Activated");

	USeqAct_SetSoundMode_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.AnimNotify_PlayFaceFXAnim.Notify
// (Defined, Event, Public)

void UAnimNotify_PlayFaceFXAnim::Notify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.AnimNotify_PlayFaceFXAnim.Notify");

	UAnimNotify_PlayFaceFXAnim_Notify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.AllowBroadcastLocalizedTeam
// (Defined, Event, HasOptionalParms, Public)

void ABroadcastHandler::AllowBroadcastLocalizedTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.AllowBroadcastLocalizedTeam");

	ABroadcastHandler_AllowBroadcastLocalizedTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.AllowBroadcastLocalized
// (Defined, Event, HasOptionalParms, Public)

void ABroadcastHandler::AllowBroadcastLocalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.AllowBroadcastLocalized");

	ABroadcastHandler_AllowBroadcastLocalized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.BroadcastTeam
// (Defined, HasOptionalParms, Public)

void ABroadcastHandler::BroadcastTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.BroadcastTeam");

	ABroadcastHandler_BroadcastTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.Broadcast
// (Defined, HasOptionalParms, Public)

void ABroadcastHandler::Broadcast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.Broadcast");

	ABroadcastHandler_Broadcast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.BroadcastLocalized
// (Defined, HasOptionalParms, Public)

void ABroadcastHandler::BroadcastLocalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.BroadcastLocalized");

	ABroadcastHandler_BroadcastLocalized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.BroadcastText
// (Defined, HasOptionalParms, Public)

void ABroadcastHandler::BroadcastText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.BroadcastText");

	ABroadcastHandler_BroadcastText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.AllowsBroadcast
// (Defined, Public)

void ABroadcastHandler::AllowsBroadcast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.AllowsBroadcast");

	ABroadcastHandler_AllowsBroadcast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.BroadcastHandler.UpdateSentText
// (Defined, Public)

void ABroadcastHandler::UpdateSentText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.BroadcastHandler.UpdateSentText");

	ABroadcastHandler_UpdateSentText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ColorScaleVolume.UnTouch
// (Defined, Event, Public, HasDefaults)

void AColorScaleVolume::UnTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ColorScaleVolume.UnTouch");

	AColorScaleVolume_UnTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ColorScaleVolume.Touch
// (Defined, Event, Public)

void AColorScaleVolume::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ColorScaleVolume.Touch");

	AColorScaleVolume_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraHUD.PostRender
// (Defined, Event, Public, HasDefaults)

void ADebugCameraHUD::PostRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraHUD.PostRender");

	ADebugCameraHUD_PostRender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraHUD.DisplayMaterials
// (Defined, Public, HasOutParms)

void ADebugCameraHUD::DisplayMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraHUD.DisplayMaterials");

	ADebugCameraHUD_DisplayMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraHUD.PostBeginPlay
// (Defined, Simulated, Event, Public)

void ADebugCameraHUD::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraHUD.PostBeginPlay");

	ADebugCameraHUD_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.DebugCameraInput.InputKey
// (Defined, HasOptionalParms, Public)

void UDebugCameraInput::InputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.DebugCameraInput.InputKey");

	UDebugCameraInput_InputKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.VolumeTimer.Timer
// (Defined, Event, Public)

void AVolumeTimer::Timer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.VolumeTimer.Timer");

	AVolumeTimer_Timer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.VolumeTimer.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AVolumeTimer::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.VolumeTimer.PostBeginPlay");

	AVolumeTimer_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FailedConnect.GetString
// (Defined, Static, HasOptionalParms, Public)

void UFailedConnect::STATIC_GetString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FailedConnect.GetString");

	UFailedConnect_GetString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.FailedConnect.GetFailSwitch
// (Defined, Static, Public)

void UFailedConnect::STATIC_GetFailSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.FailedConnect.GetFailSwitch");

	UFailedConnect_GetFailSwitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.HandleSceneActivated
// (Defined, Public)

void UUIMessageBoxBase::HandleSceneActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.HandleSceneActivated");

	UUIMessageBoxBase_HandleSceneActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.OptionChosen
// (Defined, Public)

void UUIMessageBoxBase::OptionChosen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.OptionChosen");

	UUIMessageBoxBase_OptionChosen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetupDockingRelationships
// (Public)

void UUIMessageBoxBase::SetupDockingRelationships()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetupDockingRelationships");

	UUIMessageBoxBase_SetupDockingRelationships_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.LayoutControls
// (Defined, Public)

void UUIMessageBoxBase::LayoutControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.LayoutControls");

	UUIMessageBoxBase_LayoutControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.GetButtonBar
// (Defined, Public)

void UUIMessageBoxBase::GetButtonBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.GetButtonBar");

	UUIMessageBoxBase_GetButtonBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.GetMessageLabel
// (Defined, Public)

void UUIMessageBoxBase::GetMessageLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.GetMessageLabel");

	UUIMessageBoxBase_GetMessageLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.GetTitleLabel
// (Defined, Public)

void UUIMessageBoxBase::GetTitleLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.GetTitleLabel");

	UUIMessageBoxBase_GetTitleLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.FindButtonIndex
// (Defined, Public)

void UUIMessageBoxBase::FindButtonIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.FindButtonIndex");

	UUIMessageBoxBase_FindButtonIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.HasButton
// (Defined, Public)

void UUIMessageBoxBase::HasButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.HasButton");

	UUIMessageBoxBase_HasButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.RemoveButton
// (Defined, Public)

void UUIMessageBoxBase::RemoveButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.RemoveButton");

	UUIMessageBoxBase_RemoveButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.AddButton
// (Defined, Public)

void UUIMessageBoxBase::AddButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.AddButton");

	UUIMessageBoxBase_AddButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetButtonCallback
// (Defined, Protected)

void UUIMessageBoxBase::SetButtonCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetButtonCallback");

	UUIMessageBoxBase_SetButtonCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetQuestion
// (Defined, Public)

void UUIMessageBoxBase::SetQuestion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetQuestion");

	UUIMessageBoxBase_SetQuestion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetMessage
// (Defined, Public)

void UUIMessageBoxBase::SetMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetMessage");

	UUIMessageBoxBase_SetMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetTitle
// (Defined, Public)

void UUIMessageBoxBase::SetTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetTitle");

	UUIMessageBoxBase_SetTitle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.SetupMessageBox
// (Defined, HasOptionalParms, Public)

void UUIMessageBoxBase::SetupMessageBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.SetupMessageBox");

	UUIMessageBoxBase_SetupMessageBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBoxBase.OnOptionSelected
// (Defined, Public, Delegate)

void UUIMessageBoxBase::OnOptionSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBoxBase.OnOptionSelected");

	UUIMessageBoxBase_OnOptionSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIMessageBox.SetupDockingRelationships
// (Defined, Public)

void UUIMessageBox::SetupDockingRelationships()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIMessageBox.SetupDockingRelationships");

	UUIMessageBox_SetupDockingRelationships_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HeightFog.OnToggle
// (Defined, Simulated, Public)

void AHeightFog::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HeightFog.OnToggle");

	AHeightFog_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HeightFog.ReplicatedEvent
// (Defined, Simulated, Event, Public)

void AHeightFog::ReplicatedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HeightFog.ReplicatedEvent");

	AHeightFog_ReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.HeightFog.PostBeginPlay
// (Defined, Simulated, Event, Public)

void AHeightFog::PostBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.HeightFog.PostBeginPlay");

	AHeightFog_PostBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.RateContent
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::RateContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.RateContent");

	UOnlineCommunityContentInterface_RateContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ClearGetContentPayloadCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::ClearGetContentPayloadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ClearGetContentPayloadCompleteDelegate");

	UOnlineCommunityContentInterface_ClearGetContentPayloadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.AddGetContentPayloadCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::AddGetContentPayloadCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.AddGetContentPayloadCompleteDelegate");

	UOnlineCommunityContentInterface_AddGetContentPayloadCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.OnGetContentPayloadComplete
// (Public, Delegate, HasOutParms)

void UOnlineCommunityContentInterface::OnGetContentPayloadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.OnGetContentPayloadComplete");

	UOnlineCommunityContentInterface_OnGetContentPayloadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.GetContentPayload
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::GetContentPayload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.GetContentPayload");

	UOnlineCommunityContentInterface_GetContentPayload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ClearDownloadContentCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::ClearDownloadContentCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ClearDownloadContentCompleteDelegate");

	UOnlineCommunityContentInterface_ClearDownloadContentCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.AddDownloadContentCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::AddDownloadContentCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.AddDownloadContentCompleteDelegate");

	UOnlineCommunityContentInterface_AddDownloadContentCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.OnDownloadContentComplete
// (Public, Delegate)

void UOnlineCommunityContentInterface::OnDownloadContentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.OnDownloadContentComplete");

	UOnlineCommunityContentInterface_OnDownloadContentComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.DownloadContent
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::DownloadContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.DownloadContent");

	UOnlineCommunityContentInterface_DownloadContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ClearUploadContentCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::ClearUploadContentCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ClearUploadContentCompleteDelegate");

	UOnlineCommunityContentInterface_ClearUploadContentCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.AddUploadContentCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::AddUploadContentCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.AddUploadContentCompleteDelegate");

	UOnlineCommunityContentInterface_AddUploadContentCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.OnUploadContentComplete
// (Public, Delegate)

void UOnlineCommunityContentInterface::OnUploadContentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.OnUploadContentComplete");

	UOnlineCommunityContentInterface_OnUploadContentComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.UploadContent
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::UploadContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.UploadContent");

	UOnlineCommunityContentInterface_UploadContent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.GetFriendsContentList
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::GetFriendsContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.GetFriendsContentList");

	UOnlineCommunityContentInterface_GetFriendsContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ClearReadFriendsContentListCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::ClearReadFriendsContentListCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ClearReadFriendsContentListCompleteDelegate");

	UOnlineCommunityContentInterface_ClearReadFriendsContentListCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.AddReadFriendsContentListCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::AddReadFriendsContentListCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.AddReadFriendsContentListCompleteDelegate");

	UOnlineCommunityContentInterface_AddReadFriendsContentListCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.OnReadFriendsContentListComplete
// (Public, Delegate)

void UOnlineCommunityContentInterface::OnReadFriendsContentListComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.OnReadFriendsContentListComplete");

	UOnlineCommunityContentInterface_OnReadFriendsContentListComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ReadFriendsContentList
// (HasOptionalParms, Public, HasOutParms)

void UOnlineCommunityContentInterface::ReadFriendsContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ReadFriendsContentList");

	UOnlineCommunityContentInterface_ReadFriendsContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.GetContentList
// (Public, HasOutParms)

void UOnlineCommunityContentInterface::GetContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.GetContentList");

	UOnlineCommunityContentInterface_GetContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ClearReadContentListCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::ClearReadContentListCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ClearReadContentListCompleteDelegate");

	UOnlineCommunityContentInterface_ClearReadContentListCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.AddReadContentListCompleteDelegate
// (Public)

void UOnlineCommunityContentInterface::AddReadContentListCompleteDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.AddReadContentListCompleteDelegate");

	UOnlineCommunityContentInterface_AddReadContentListCompleteDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.OnReadContentListComplete
// (Public, Delegate)

void UOnlineCommunityContentInterface::OnReadContentListComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.OnReadContentListComplete");

	UOnlineCommunityContentInterface_OnReadContentListComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.ReadContentList
// (HasOptionalParms, Public)

void UOnlineCommunityContentInterface::ReadContentList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.ReadContentList");

	UOnlineCommunityContentInterface_ReadContentList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.Exit
// (Public)

void UOnlineCommunityContentInterface::Exit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.Exit");

	UOnlineCommunityContentInterface_Exit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineCommunityContentInterface.Init
// (Public)

void UOnlineCommunityContentInterface::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineCommunityContentInterface.Init");

	UOnlineCommunityContentInterface_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineEventsInterface.UploadHardwareData
// (Public)

void UOnlineEventsInterface::UploadHardwareData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineEventsInterface.UploadHardwareData");

	UOnlineEventsInterface_UploadHardwareData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineEventsInterface.UploadGameplayEventsData
// (Public)

void UOnlineEventsInterface::UploadGameplayEventsData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineEventsInterface.UploadGameplayEventsData");

	UOnlineEventsInterface_UploadGameplayEventsData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineEventsInterface.UploadProfileData
// (Public)

void UOnlineEventsInterface::UploadProfileData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineEventsInterface.UploadProfileData");

	UOnlineEventsInterface_UploadProfileData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.GetCurrentPlayersListCount
// (Defined, Public)

void UOnlineRecentPlayersList::GetCurrentPlayersListCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.GetCurrentPlayersListCount");

	UOnlineRecentPlayersList_GetCurrentPlayersListCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.SetCurrentPlayersList
// (Defined, Public)

void UOnlineRecentPlayersList::SetCurrentPlayersList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.SetCurrentPlayersList");

	UOnlineRecentPlayersList_SetCurrentPlayersList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ShowCurrentPlayersList
// (Defined, Public)

void UOnlineRecentPlayersList::ShowCurrentPlayersList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ShowCurrentPlayersList");

	UOnlineRecentPlayersList_ShowCurrentPlayersList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ShowLastPartyPlayerList
// (Defined, Public)

void UOnlineRecentPlayersList::ShowLastPartyPlayerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ShowLastPartyPlayerList");

	UOnlineRecentPlayersList_ShowLastPartyPlayerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ShowRecentPartiesPlayerList
// (Defined, Public)

void UOnlineRecentPlayersList::ShowRecentPartiesPlayerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ShowRecentPartiesPlayerList");

	UOnlineRecentPlayersList_ShowRecentPartiesPlayerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ShowRecentPlayerList
// (Defined, Public)

void UOnlineRecentPlayersList::ShowRecentPlayerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ShowRecentPlayerList");

	UOnlineRecentPlayersList_ShowRecentPlayerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.SetLastParty
// (Defined, Public, HasOutParms)

void UOnlineRecentPlayersList::SetLastParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.SetLastParty");

	UOnlineRecentPlayersList_SetLastParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.GetTeamForCurrentPlayer
// (Defined, Public)

void UOnlineRecentPlayersList::GetTeamForCurrentPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.GetTeamForCurrentPlayer");

	UOnlineRecentPlayersList_GetTeamForCurrentPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.GetSkillForCurrentPlayer
// (Defined, Public)

void UOnlineRecentPlayersList::GetSkillForCurrentPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.GetSkillForCurrentPlayer");

	UOnlineRecentPlayersList_GetSkillForCurrentPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.GetPlayersFromCurrentPlayers
// (Defined, Public, HasOutParms)

void UOnlineRecentPlayersList::GetPlayersFromCurrentPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.GetPlayersFromCurrentPlayers");

	UOnlineRecentPlayersList_GetPlayersFromCurrentPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.GetPlayersFromRecentParties
// (Defined, Public, HasOutParms)

void UOnlineRecentPlayersList::GetPlayersFromRecentParties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.GetPlayersFromRecentParties");

	UOnlineRecentPlayersList_GetPlayersFromRecentParties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ClearRecentParties
// (Defined, Public)

void UOnlineRecentPlayersList::ClearRecentParties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ClearRecentParties");

	UOnlineRecentPlayersList_ClearRecentParties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.AddPartyToRecentParties
// (Defined, Public, HasOutParms)

void UOnlineRecentPlayersList::AddPartyToRecentParties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.AddPartyToRecentParties");

	UOnlineRecentPlayersList_AddPartyToRecentParties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.ClearRecentPlayers
// (Defined, Public)

void UOnlineRecentPlayersList::ClearRecentPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.ClearRecentPlayers");

	UOnlineRecentPlayersList_ClearRecentPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.OnlineRecentPlayersList.AddPlayerToRecentPlayers
// (Defined, Public)

void UOnlineRecentPlayersList::AddPlayerToRecentPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.OnlineRecentPlayersList.AddPlayerToRecentPlayers");

	UOnlineRecentPlayersList_AddPlayerToRecentPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.PathNode_Dynamic.GetDebugAbbrev
// (Defined, Simulated, Event, Public)

void APathNode_Dynamic::GetDebugAbbrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.PathNode_Dynamic.GetDebugAbbrev");

	APathNode_Dynamic_GetDebugAbbrev_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScriptConsoleEntry.OnCreateChild
// (Defined, Public)

void UScriptConsoleEntry::OnCreateChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScriptConsoleEntry.OnCreateChild");

	UScriptConsoleEntry_OnCreateChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScriptConsoleEntry.SetValue
// (Defined, Public)

void UScriptConsoleEntry::SetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScriptConsoleEntry.SetValue");

	UScriptConsoleEntry_SetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.ScriptConsoleEntry.PostInitialize
// (Defined, Event, Public)

void UScriptConsoleEntry::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.ScriptConsoleEntry.PostInitialize");

	UScriptConsoleEntry_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_SetVector.Activated
// (Defined, Event, Public, HasDefaults)

void USeqAct_SetVector::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_SetVector.Activated");

	USeqAct_SetVector_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqAct_UpdatePhysBonesFromAnim.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqAct_UpdatePhysBonesFromAnim::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqAct_UpdatePhysBonesFromAnim.GetObjClassVersion");

	USeqAct_UpdatePhysBonesFromAnim_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.SeqEvent_LOS.GetObjClassVersion
// (Defined, Event, Static, Public)

void USeqEvent_LOS::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.SeqEvent_LOS.GetObjClassVersion");

	USeqEvent_LOS_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.Trigger_LOS.Tick
// (Defined, Simulated, Event, Public, HasDefaults)

void ATrigger_LOS::Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.Trigger_LOS.Tick");

	ATrigger_LOS_Tick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggeredPath.SuggestMovePreparation
// (Defined, Event, Public)

void ATriggeredPath::SuggestMovePreparation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggeredPath.SuggestMovePreparation");

	ATriggeredPath_SuggestMovePreparation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggeredPath.SpecialHandling
// (Defined, Event, Public)

void ATriggeredPath::SpecialHandling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggeredPath.SpecialHandling");

	ATriggeredPath_SpecialHandling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggeredPath.OnToggle
// (Defined, Public)

void ATriggeredPath::OnToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggeredPath.OnToggle");

	ATriggeredPath_OnToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.TriggerStreamingLevel.Touch
// (Defined, Event, Public)

void ATriggerStreamingLevel::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.TriggerStreamingLevel.Touch");

	ATriggerStreamingLevel_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICharacterSummary.IsProviderDisabled
// (Defined, Event, Public)

void UUICharacterSummary::IsProviderDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICharacterSummary.IsProviderDisabled");

	UUICharacterSummary_IsProviderDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UICond_SwitchWidget.IsValidLevelSequenceObject
// (Defined, Event, Public)

void UUICond_SwitchWidget::IsValidLevelSequenceObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UICond_SwitchWidget.IsValidLevelSequenceObject");

	UUICond_SwitchWidget_IsValidLevelSequenceObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_SceneActivated.GetObjClassVersion
// (Defined, Event, Static, Public)

void UUIEvent_SceneActivated::STATIC_GetObjClassVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_SceneActivated.GetObjClassVersion");

	UUIEvent_SceneActivated_GetObjClassVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIEvent_SceneActivated.Deactivated
// (Defined, Event, Public)

void UUIEvent_SceneActivated::Deactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIEvent_SceneActivated.Deactivated");

	UUIEvent_SceneActivated_Deactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIFocusHint.RemovedFromParent
// (Defined, Event, Public)

void UUIFocusHint::RemovedFromParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIFocusHint.RemovedFromParent");

	UUIFocusHint_RemovedFromParent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIGameInfoSummary.IsProviderDisabled
// (Defined, Event, Public)

void UUIGameInfoSummary::IsProviderDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIGameInfoSummary.IsProviderDisabled");

	UUIGameInfoSummary_IsProviderDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScriptConsoleScene.OnCreateChild
// (Defined, Public)

void UUIScriptConsoleScene::OnCreateChild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScriptConsoleScene.OnCreateChild");

	UUIScriptConsoleScene_OnCreateChild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIScriptConsoleScene.PostInitialize
// (Defined, Event, Public)

void UUIScriptConsoleScene::PostInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIScriptConsoleScene.PostInitialize");

	UUIScriptConsoleScene_PostInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.UIWeaponSummary.IsProviderDisabled
// (Defined, Event, Public)

void UUIWeaponSummary::IsProviderDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.UIWeaponSummary.IsProviderDisabled");

	UUIWeaponSummary_IsProviderDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WaterVolume.PlayExitSplash
// (Defined, Public)

void AWaterVolume::PlayExitSplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WaterVolume.PlayExitSplash");

	AWaterVolume_PlayExitSplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WaterVolume.UnTouch
// (Defined, Event, Public)

void AWaterVolume::UnTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WaterVolume.UnTouch");

	AWaterVolume_UnTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WaterVolume.PlayEntrySplash
// (Defined, Public)

void AWaterVolume::PlayEntrySplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WaterVolume.PlayEntrySplash");

	AWaterVolume_PlayEntrySplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Engine.WaterVolume.Touch
// (Defined, Simulated, Event, Public)

void AWaterVolume::Touch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Engine.WaterVolume.Touch");

	AWaterVolume_Touch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
